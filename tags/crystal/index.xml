<?xml version="1.0" encoding="utf-8" standalone="yes" ?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>Crystal on Mordsith - Tech Docs</title>
    <link>https://mordsith.github.io/tags/crystal/index.xml</link>
    <description>Recent content in Crystal on Mordsith - Tech Docs</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>en-us</language>
    <atom:link href="https://mordsith.github.io/tags/crystal/index.xml" rel="self" type="application/rss+xml" />
    
    <item>
      <title>Crystal Tutoial The Basics - Methods</title>
      <link>https://mordsith.github.io/2017/crystal-tutoial-the-basics---methods/</link>
      <pubDate>Sat, 11 Feb 2017 16:56:18 +0100</pubDate>
      
      <guid>https://mordsith.github.io/2017/crystal-tutoial-the-basics---methods/</guid>
      <description>

&lt;p&gt;A method is basically a block of code you wish to execute many times without the need of writing it again and again. In other languages methods are sometimes called functions or procedures. In &lt;a href=&#34;https://crystal-lang.org/&#34;&gt;Crystal&lt;/a&gt; the reserved word for a method is &lt;code&gt;def&lt;/code&gt; and ends with an &lt;code&gt;end&lt;/code&gt;. You could also think of them as a box with stuff in it and you&amp;rsquo;ve put a name on it.&lt;/p&gt;

&lt;p&gt;What methods look like..&lt;/p&gt;

&lt;p&gt;code:
&lt;div class=&#34;highlight&#34; style=&#34;background: #f8f8f8&#34;&gt;&lt;pre style=&#34;line-height: 125%&#34;&gt;&lt;span&gt;&lt;/span&gt;&lt;span style=&#34;color: #204a87; font-weight: bold&#34;&gt;def&lt;/span&gt; &lt;span style=&#34;color: #000000&#34;&gt;name&lt;/span&gt;
  &lt;span style=&#34;color: #000000&#34;&gt;do_something&lt;/span&gt;
&lt;span style=&#34;color: #204a87; font-weight: bold&#34;&gt;end&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;

Look very simple and neat to me. And now for a real example.&lt;/p&gt;

&lt;div class=&#34;alert alert-warning&#34; role=&#34;alert&#34;&gt;
Problem: Create a method and call it to print Hello World 10 times.
&lt;/div&gt;

&lt;p&gt;code:
&lt;div class=&#34;highlight&#34; style=&#34;background: #f8f8f8&#34;&gt;&lt;pre style=&#34;line-height: 125%&#34;&gt;&lt;span&gt;&lt;/span&gt;&lt;span style=&#34;color: #8f5902; font-style: italic&#34;&gt;# defining the method.&lt;/span&gt;
&lt;span style=&#34;color: #204a87; font-weight: bold&#34;&gt;def&lt;/span&gt; &lt;span style=&#34;color: #000000&#34;&gt;hello&lt;/span&gt;&lt;span style=&#34;color: #000000; font-weight: bold&#34;&gt;(&lt;/span&gt;&lt;span style=&#34;color: #000000&#34;&gt;word&lt;/span&gt;&lt;span style=&#34;color: #000000; font-weight: bold&#34;&gt;,&lt;/span&gt; &lt;span style=&#34;color: #000000&#34;&gt;times&lt;/span&gt;&lt;span style=&#34;color: #000000; font-weight: bold&#34;&gt;)&lt;/span&gt;
  &lt;span style=&#34;color: #204a87&#34;&gt;puts&lt;/span&gt; &lt;span style=&#34;color: #000000&#34;&gt;word&lt;/span&gt; &lt;span style=&#34;color: #ce5c00; font-weight: bold&#34;&gt;*&lt;/span&gt; &lt;span style=&#34;color: #000000&#34;&gt;times&lt;/span&gt;
&lt;span style=&#34;color: #204a87; font-weight: bold&#34;&gt;end&lt;/span&gt;

&lt;span style=&#34;color: #8f5902; font-style: italic&#34;&gt;# Invoking the method.&lt;/span&gt;
&lt;span style=&#34;color: #000000&#34;&gt;hello&lt;/span&gt;&lt;span style=&#34;color: #000000; font-weight: bold&#34;&gt;(&lt;/span&gt;&lt;span style=&#34;color: #4e9a06&#34;&gt;&amp;quot;Hello, World! &amp;quot;&lt;/span&gt;&lt;span style=&#34;color: #000000; font-weight: bold&#34;&gt;,&lt;/span&gt; &lt;span style=&#34;color: #0000cf; font-weight: bold&#34;&gt;10&lt;/span&gt;&lt;span style=&#34;color: #000000; font-weight: bold&#34;&gt;)&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;

output:
&lt;div class=&#34;highlight&#34; style=&#34;background: #f8f8f8&#34;&gt;&lt;pre style=&#34;line-height: 125%&#34;&gt;&lt;span&gt;&lt;/span&gt;Hello, World! Hello, World! Hello, World! Hello, World! Hello, World! Hello,World! Hello, World! Hello, World! Hello, World! Hello, World!
&lt;/pre&gt;&lt;/div&gt;
&lt;/p&gt;

&lt;p&gt;In Crystal there is no need to add a return value as the last expression is returned.. But you can if you want to. And it is useful for breaking out early.&lt;/p&gt;

&lt;p&gt;code:
&lt;div class=&#34;highlight&#34; style=&#34;background: #f8f8f8&#34;&gt;&lt;pre style=&#34;line-height: 125%&#34;&gt;&lt;span&gt;&lt;/span&gt;&lt;span style=&#34;color: #204a87; font-weight: bold&#34;&gt;def&lt;/span&gt; &lt;span style=&#34;color: #000000&#34;&gt;add32&lt;/span&gt;&lt;span style=&#34;color: #000000; font-weight: bold&#34;&gt;(&lt;/span&gt;&lt;span style=&#34;color: #000000&#34;&gt;num&lt;/span&gt;&lt;span style=&#34;color: #000000; font-weight: bold&#34;&gt;)&lt;/span&gt;
  &lt;span style=&#34;color: #204a87; font-weight: bold&#34;&gt;return&lt;/span&gt; &lt;span style=&#34;color: #000000&#34;&gt;num&lt;/span&gt; &lt;span style=&#34;color: #ce5c00; font-weight: bold&#34;&gt;+&lt;/span&gt; &lt;span style=&#34;color: #0000cf; font-weight: bold&#34;&gt;32&lt;/span&gt;
  &lt;span style=&#34;color: #000000&#34;&gt;num&lt;/span&gt; &lt;span style=&#34;color: #ce5c00; font-weight: bold&#34;&gt;+&lt;/span&gt; &lt;span style=&#34;color: #0000cf; font-weight: bold&#34;&gt;100&lt;/span&gt;
&lt;span style=&#34;color: #204a87; font-weight: bold&#34;&gt;end&lt;/span&gt;

&lt;span style=&#34;color: #000000&#34;&gt;returnvalue&lt;/span&gt; &lt;span style=&#34;color: #ce5c00; font-weight: bold&#34;&gt;=&lt;/span&gt; &lt;span style=&#34;color: #000000&#34;&gt;add32&lt;/span&gt;&lt;span style=&#34;color: #000000; font-weight: bold&#34;&gt;(&lt;/span&gt;&lt;span style=&#34;color: #0000cf; font-weight: bold&#34;&gt;10&lt;/span&gt;&lt;span style=&#34;color: #000000; font-weight: bold&#34;&gt;)&lt;/span&gt;
&lt;span style=&#34;color: #204a87&#34;&gt;puts&lt;/span&gt; &lt;span style=&#34;color: #000000&#34;&gt;returnvalue&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;

output:
&lt;div class=&#34;highlight&#34; style=&#34;background: #f8f8f8&#34;&gt;&lt;pre style=&#34;line-height: 125%&#34;&gt;&lt;span&gt;&lt;/span&gt;42
&lt;/pre&gt;&lt;/div&gt;
&lt;/p&gt;

&lt;p&gt;Methods can have a default variable values.&lt;/p&gt;

&lt;p&gt;code:
&lt;div class=&#34;highlight&#34; style=&#34;background: #f8f8f8&#34;&gt;&lt;pre style=&#34;line-height: 125%&#34;&gt;&lt;span&gt;&lt;/span&gt;&lt;span style=&#34;color: #8f5902; font-style: italic&#34;&gt;# method with default values&lt;/span&gt;
&lt;span style=&#34;color: #204a87; font-weight: bold&#34;&gt;def&lt;/span&gt; &lt;span style=&#34;color: #000000&#34;&gt;output&lt;/span&gt;&lt;span style=&#34;color: #000000; font-weight: bold&#34;&gt;(&lt;/span&gt;&lt;span style=&#34;color: #000000&#34;&gt;out_one&lt;/span&gt;&lt;span style=&#34;color: #ce5c00; font-weight: bold&#34;&gt;=&lt;/span&gt;&lt;span style=&#34;color: #4e9a06&#34;&gt;&amp;quot;Default&amp;quot;&lt;/span&gt;&lt;span style=&#34;color: #000000; font-weight: bold&#34;&gt;,&lt;/span&gt; &lt;span style=&#34;color: #000000&#34;&gt;out_two&lt;/span&gt;&lt;span style=&#34;color: #ce5c00; font-weight: bold&#34;&gt;=&lt;/span&gt;&lt;span style=&#34;color: #4e9a06&#34;&gt;&amp;quot;Value&amp;quot;&lt;/span&gt;&lt;span style=&#34;color: #000000; font-weight: bold&#34;&gt;)&lt;/span&gt;
   &lt;span style=&#34;color: #204a87&#34;&gt;puts&lt;/span&gt; &lt;span style=&#34;color: #4e9a06&#34;&gt;&amp;quot;Outputs: #{&lt;/span&gt;&lt;span style=&#34;color: #000000&#34;&gt;out_one&lt;/span&gt;&lt;span style=&#34;color: #4e9a06&#34;&gt;}&amp;quot;&lt;/span&gt;
   &lt;span style=&#34;color: #204a87&#34;&gt;puts&lt;/span&gt; &lt;span style=&#34;color: #4e9a06&#34;&gt;&amp;quot;Outputs: #{&lt;/span&gt;&lt;span style=&#34;color: #000000&#34;&gt;out_two&lt;/span&gt;&lt;span style=&#34;color: #4e9a06&#34;&gt;}&amp;quot;&lt;/span&gt;
&lt;span style=&#34;color: #204a87; font-weight: bold&#34;&gt;end&lt;/span&gt;

&lt;span style=&#34;color: #8f5902; font-style: italic&#34;&gt;# overriding default values&lt;/span&gt;
&lt;span style=&#34;color: #000000&#34;&gt;output&lt;/span&gt; &lt;span style=&#34;color: #4e9a06&#34;&gt;&amp;quot;Over&amp;quot;&lt;/span&gt;&lt;span style=&#34;color: #000000; font-weight: bold&#34;&gt;,&lt;/span&gt; &lt;span style=&#34;color: #4e9a06&#34;&gt;&amp;quot;Write&amp;quot;&lt;/span&gt;

&lt;span style=&#34;color: #8f5902; font-style: italic&#34;&gt;# output default value&lt;/span&gt;
&lt;span style=&#34;color: #000000&#34;&gt;output&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;

output:
&lt;div class=&#34;highlight&#34; style=&#34;background: #f8f8f8&#34;&gt;&lt;pre style=&#34;line-height: 125%&#34;&gt;&lt;span&gt;&lt;/span&gt;Outputs: Over
Outputs: Write
Outputs: Default
Outputs: Value
&lt;/pre&gt;&lt;/div&gt;
&lt;/p&gt;

&lt;p&gt;And we can use the Asterisk or &amp;ldquo;splat&amp;rdquo; to take all the arguments you give it.&lt;/p&gt;

&lt;p&gt;code:
&lt;div class=&#34;highlight&#34; style=&#34;background: #f8f8f8&#34;&gt;&lt;pre style=&#34;line-height: 125%&#34;&gt;&lt;span&gt;&lt;/span&gt;&lt;span style=&#34;color: #204a87; font-weight: bold&#34;&gt;def&lt;/span&gt; &lt;span style=&#34;color: #000000&#34;&gt;foo&lt;/span&gt;&lt;span style=&#34;color: #000000; font-weight: bold&#34;&gt;(&lt;/span&gt;&lt;span style=&#34;color: #ce5c00; font-weight: bold&#34;&gt;*&lt;/span&gt;&lt;span style=&#34;color: #000000&#34;&gt;my_string&lt;/span&gt;&lt;span style=&#34;color: #000000; font-weight: bold&#34;&gt;)&lt;/span&gt;
  &lt;span style=&#34;color: #3465a4&#34;&gt;pp&lt;/span&gt; &lt;span style=&#34;color: #000000&#34;&gt;my_string&lt;/span&gt;
&lt;span style=&#34;color: #204a87; font-weight: bold&#34;&gt;end&lt;/span&gt;

&lt;span style=&#34;color: #204a87&#34;&gt;puts&lt;/span&gt; &lt;span style=&#34;color: #000000&#34;&gt;foo&lt;/span&gt;&lt;span style=&#34;color: #000000; font-weight: bold&#34;&gt;(&lt;/span&gt;&lt;span style=&#34;color: #4e9a06&#34;&gt;&amp;quot;hello&amp;quot;&lt;/span&gt;&lt;span style=&#34;color: #000000; font-weight: bold&#34;&gt;,&lt;/span&gt;&lt;span style=&#34;color: #4e9a06&#34;&gt;&amp;quot;world&amp;quot;&lt;/span&gt;&lt;span style=&#34;color: #000000; font-weight: bold&#34;&gt;,&lt;/span&gt; &lt;span style=&#34;color: #4e9a06&#34;&gt;&amp;quot;This&amp;quot;&lt;/span&gt;&lt;span style=&#34;color: #000000; font-weight: bold&#34;&gt;,&lt;/span&gt; &lt;span style=&#34;color: #4e9a06&#34;&gt;&amp;quot;Is&amp;quot;&lt;/span&gt;&lt;span style=&#34;color: #000000; font-weight: bold&#34;&gt;)&lt;/span&gt;
&lt;span style=&#34;color: #204a87&#34;&gt;puts&lt;/span&gt; &lt;span style=&#34;color: #000000&#34;&gt;foo&lt;/span&gt;&lt;span style=&#34;color: #000000; font-weight: bold&#34;&gt;()&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;

output:
&lt;div class=&#34;highlight&#34; style=&#34;background: #f8f8f8&#34;&gt;&lt;pre style=&#34;line-height: 125%&#34;&gt;&lt;span&gt;&lt;/span&gt;my_string # =&amp;gt; {&amp;quot;hello&amp;quot;, &amp;quot;world&amp;quot;, &amp;quot;This&amp;quot;, &amp;quot;Is&amp;quot;}

my_string # =&amp;gt; {}
&lt;/pre&gt;&lt;/div&gt;
&lt;/p&gt;

&lt;p&gt;This also works with numbers..&lt;/p&gt;

&lt;p&gt;code:
&lt;div class=&#34;highlight&#34; style=&#34;background: #f8f8f8&#34;&gt;&lt;pre style=&#34;line-height: 125%&#34;&gt;&lt;span&gt;&lt;/span&gt;&lt;span style=&#34;color: #204a87; font-weight: bold&#34;&gt;def&lt;/span&gt; &lt;span style=&#34;color: #000000&#34;&gt;add&lt;/span&gt;&lt;span style=&#34;color: #000000; font-weight: bold&#34;&gt;(&lt;/span&gt;&lt;span style=&#34;color: #ce5c00; font-weight: bold&#34;&gt;*&lt;/span&gt;&lt;span style=&#34;color: #000000&#34;&gt;num&lt;/span&gt;&lt;span style=&#34;color: #000000; font-weight: bold&#34;&gt;)&lt;/span&gt;
  &lt;span style=&#34;color: #3465a4&#34;&gt;pp&lt;/span&gt; &lt;span style=&#34;color: #000000&#34;&gt;num&lt;/span&gt;&lt;span style=&#34;color: #ce5c00; font-weight: bold&#34;&gt;.&lt;/span&gt;&lt;span style=&#34;color: #000000&#34;&gt;sum&lt;/span&gt;
&lt;span style=&#34;color: #204a87; font-weight: bold&#34;&gt;end&lt;/span&gt;

&lt;span style=&#34;color: #000000&#34;&gt;add&lt;/span&gt;&lt;span style=&#34;color: #000000; font-weight: bold&#34;&gt;(&lt;/span&gt;&lt;span style=&#34;color: #0000cf; font-weight: bold&#34;&gt;32&lt;/span&gt;&lt;span style=&#34;color: #000000; font-weight: bold&#34;&gt;,&lt;/span&gt; &lt;span style=&#34;color: #0000cf; font-weight: bold&#34;&gt;32&lt;/span&gt;&lt;span style=&#34;color: #000000; font-weight: bold&#34;&gt;)&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;

output:
&lt;div class=&#34;highlight&#34; style=&#34;background: #f8f8f8&#34;&gt;&lt;pre style=&#34;line-height: 125%&#34;&gt;&lt;span&gt;&lt;/span&gt;num.sum # =&amp;gt; 64
&lt;/pre&gt;&lt;/div&gt;
&lt;/p&gt;

&lt;p&gt;Note: Parentheses are optional, you could write &lt;code&gt;add 32, 32&lt;/code&gt; but i would recommend it.&lt;/p&gt;

&lt;h2 id=&#34;summary-of-methods&#34;&gt;Summary of Methods&lt;/h2&gt;

&lt;p&gt;code:
&lt;div class=&#34;highlight&#34; style=&#34;background: #f8f8f8&#34;&gt;&lt;pre style=&#34;line-height: 125%&#34;&gt;&lt;span&gt;&lt;/span&gt;&lt;span style=&#34;color: #8f5902; font-style: italic&#34;&gt;# Defining a method&lt;/span&gt;

&lt;span style=&#34;color: #204a87; font-weight: bold&#34;&gt;def&lt;/span&gt; &lt;span style=&#34;color: #000000&#34;&gt;name&lt;/span&gt;
  &lt;span style=&#34;color: #000000&#34;&gt;do_something&lt;/span&gt;
&lt;span style=&#34;color: #204a87; font-weight: bold&#34;&gt;end&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;

code:
&lt;div class=&#34;highlight&#34; style=&#34;background: #f8f8f8&#34;&gt;&lt;pre style=&#34;line-height: 125%&#34;&gt;&lt;span&gt;&lt;/span&gt;&lt;span style=&#34;color: #8f5902; font-style: italic&#34;&gt;# Breaking out early&lt;/span&gt;

&lt;span style=&#34;color: #204a87; font-weight: bold&#34;&gt;def&lt;/span&gt; &lt;span style=&#34;color: #000000&#34;&gt;name&lt;/span&gt;
  &lt;span style=&#34;color: #204a87; font-weight: bold&#34;&gt;return&lt;/span&gt; &lt;span style=&#34;color: #000000&#34;&gt;early&lt;/span&gt;
  &lt;span style=&#34;color: #000000&#34;&gt;some_code&lt;/span&gt;
&lt;span style=&#34;color: #204a87; font-weight: bold&#34;&gt;end&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;

code:
&lt;div class=&#34;highlight&#34; style=&#34;background: #f8f8f8&#34;&gt;&lt;pre style=&#34;line-height: 125%&#34;&gt;&lt;span&gt;&lt;/span&gt;&lt;span style=&#34;color: #8f5902; font-style: italic&#34;&gt;# Splat all arguments&lt;/span&gt;

&lt;span style=&#34;color: #204a87; font-weight: bold&#34;&gt;def&lt;/span&gt; &lt;span style=&#34;color: #000000&#34;&gt;name&lt;/span&gt;&lt;span style=&#34;color: #000000; font-weight: bold&#34;&gt;(&lt;/span&gt;&lt;span style=&#34;color: #ce5c00; font-weight: bold&#34;&gt;*&lt;/span&gt;&lt;span style=&#34;color: #000000&#34;&gt;something&lt;/span&gt;&lt;span style=&#34;color: #000000; font-weight: bold&#34;&gt;)&lt;/span&gt;
  &lt;span style=&#34;color: #000000&#34;&gt;some_code&lt;/span&gt;
&lt;span style=&#34;color: #204a87; font-weight: bold&#34;&gt;end&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;

code:
&lt;div class=&#34;highlight&#34; style=&#34;background: #f8f8f8&#34;&gt;&lt;pre style=&#34;line-height: 125%&#34;&gt;&lt;span&gt;&lt;/span&gt;&lt;span style=&#34;color: #8f5902; font-style: italic&#34;&gt;# Default values&lt;/span&gt;

&lt;span style=&#34;color: #204a87; font-weight: bold&#34;&gt;def&lt;/span&gt; &lt;span style=&#34;color: #000000&#34;&gt;output&lt;/span&gt;&lt;span style=&#34;color: #000000; font-weight: bold&#34;&gt;(&lt;/span&gt;&lt;span style=&#34;color: #000000&#34;&gt;out_one&lt;/span&gt;&lt;span style=&#34;color: #ce5c00; font-weight: bold&#34;&gt;=&lt;/span&gt;&lt;span style=&#34;color: #4e9a06&#34;&gt;&amp;quot;Default&amp;quot;&lt;/span&gt;&lt;span style=&#34;color: #000000; font-weight: bold&#34;&gt;,&lt;/span&gt; &lt;span style=&#34;color: #000000&#34;&gt;out_two&lt;/span&gt;&lt;span style=&#34;color: #ce5c00; font-weight: bold&#34;&gt;=&lt;/span&gt;&lt;span style=&#34;color: #4e9a06&#34;&gt;&amp;quot;Value&amp;quot;&lt;/span&gt;&lt;span style=&#34;color: #000000; font-weight: bold&#34;&gt;)&lt;/span&gt;
  &lt;span style=&#34;color: #000000&#34;&gt;some_code&lt;/span&gt;
&lt;span style=&#34;color: #204a87; font-weight: bold&#34;&gt;end&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;/p&gt;

&lt;h3 id=&#34;references&#34;&gt;References&lt;/h3&gt;

&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;https://crystal-lang.org/docs/syntax_and_semantics/the_program.html&#34;&gt;https://crystal-lang.org/docs/syntax_and_semantics/the_program.html&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
</description>
    </item>
    
    <item>
      <title>Crystal Tutorial The Basics - Hash</title>
      <link>https://mordsith.github.io/2017/crystal-tutorial-the-basics---hash/</link>
      <pubDate>Wed, 08 Feb 2017 14:12:31 +0100</pubDate>
      
      <guid>https://mordsith.github.io/2017/crystal-tutorial-the-basics---hash/</guid>
      <description>

&lt;p&gt;In the last tutorial we discussed &lt;a href=&#34;https://mordsith.github.io/2017/crystal-tutorial-the-basics---array/&#34;&gt;Array&lt;/a&gt;s, in this tutorial im going to show Hashes. Hash is very similar to an array. The main differences are that an array is an integer indexed collections of object while hash points to a Key. This is what a Hash looks like&amp;hellip;&lt;/p&gt;

&lt;p&gt;code:
&lt;div class=&#34;highlight&#34; style=&#34;background: #f8f8f8&#34;&gt;&lt;pre style=&#34;line-height: 125%&#34;&gt;&lt;span&gt;&lt;/span&gt;&lt;span style=&#34;color: #000000&#34;&gt;hash&lt;/span&gt; &lt;span style=&#34;color: #ce5c00; font-weight: bold&#34;&gt;=&lt;/span&gt; &lt;span style=&#34;color: #000000; font-weight: bold&#34;&gt;{&lt;/span&gt; &lt;span style=&#34;color: #4e9a06&#34;&gt;key1&lt;/span&gt;&lt;span style=&#34;color: #000000; font-weight: bold&#34;&gt;:&lt;/span&gt; &lt;span style=&#34;color: #4e9a06&#34;&gt;:value1&lt;/span&gt; &lt;span style=&#34;color: #000000; font-weight: bold&#34;&gt;}&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;/p&gt;

&lt;p&gt;To create an empty Hash we must always define the K (key) And V (value).&lt;/p&gt;

&lt;p&gt;code:
&lt;div class=&#34;highlight&#34; style=&#34;background: #f8f8f8&#34;&gt;&lt;pre style=&#34;line-height: 125%&#34;&gt;&lt;span&gt;&lt;/span&gt;&lt;span style=&#34;color: #8f5902; font-style: italic&#34;&gt;# hash of Int32&amp;#39;s&lt;/span&gt;
&lt;span style=&#34;color: #000000&#34;&gt;my_hash&lt;/span&gt; &lt;span style=&#34;color: #ce5c00; font-weight: bold&#34;&gt;=&lt;/span&gt; &lt;span style=&#34;color: #000000; font-weight: bold&#34;&gt;{}&lt;/span&gt; &lt;span style=&#34;color: #204a87; font-weight: bold&#34;&gt;of&lt;/span&gt; &lt;span style=&#34;color: #204a87&#34;&gt;Int32&lt;/span&gt; &lt;span style=&#34;color: #ce5c00; font-weight: bold&#34;&gt;=&amp;gt;&lt;/span&gt; &lt;span style=&#34;color: #204a87&#34;&gt;Int32&lt;/span&gt;

&lt;span style=&#34;color: #8f5902; font-style: italic&#34;&gt;# string and int based&lt;/span&gt;
&lt;span style=&#34;color: #000000&#34;&gt;my_hash&lt;/span&gt; &lt;span style=&#34;color: #ce5c00; font-weight: bold&#34;&gt;=&lt;/span&gt; &lt;span style=&#34;color: #000000; font-weight: bold&#34;&gt;{}&lt;/span&gt; &lt;span style=&#34;color: #204a87; font-weight: bold&#34;&gt;of&lt;/span&gt; &lt;span style=&#34;color: #204a87&#34;&gt;String&lt;/span&gt; &lt;span style=&#34;color: #ce5c00; font-weight: bold&#34;&gt;=&amp;gt;&lt;/span&gt; &lt;span style=&#34;color: #204a87&#34;&gt;Int32&lt;/span&gt;

&lt;span style=&#34;color: #8f5902; font-style: italic&#34;&gt;# Same as above&lt;/span&gt;
&lt;span style=&#34;color: #000000&#34;&gt;my_hash&lt;/span&gt; &lt;span style=&#34;color: #ce5c00; font-weight: bold&#34;&gt;=&lt;/span&gt; &lt;span style=&#34;color: #204a87&#34;&gt;Hash&lt;/span&gt;&lt;span style=&#34;color: #000000; font-weight: bold&#34;&gt;(&lt;/span&gt;&lt;span style=&#34;color: #204a87&#34;&gt;String&lt;/span&gt;&lt;span style=&#34;color: #000000; font-weight: bold&#34;&gt;,&lt;/span&gt; &lt;span style=&#34;color: #204a87&#34;&gt;Int32&lt;/span&gt;&lt;span style=&#34;color: #000000; font-weight: bold&#34;&gt;)&lt;/span&gt;&lt;span style=&#34;color: #ce5c00; font-weight: bold&#34;&gt;.&lt;/span&gt;&lt;span style=&#34;color: #000000&#34;&gt;new&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;/p&gt;

&lt;p&gt;And to write in implicit form, easiest way to write and read imo&lt;/p&gt;

&lt;p&gt;code:
&lt;div class=&#34;highlight&#34; style=&#34;background: #f8f8f8&#34;&gt;&lt;pre style=&#34;line-height: 125%&#34;&gt;&lt;span&gt;&lt;/span&gt;&lt;span style=&#34;color: #000000&#34;&gt;age&lt;/span&gt; &lt;span style=&#34;color: #ce5c00; font-weight: bold&#34;&gt;=&lt;/span&gt; &lt;span style=&#34;color: #000000; font-weight: bold&#34;&gt;{&lt;/span&gt; &lt;span style=&#34;color: #4e9a06&#34;&gt;&amp;quot;Martin Johnsson&amp;quot;&lt;/span&gt; &lt;span style=&#34;color: #ce5c00; font-weight: bold&#34;&gt;=&amp;gt;&lt;/span&gt; &lt;span style=&#34;color: #0000cf; font-weight: bold&#34;&gt;29&lt;/span&gt;&lt;span style=&#34;color: #000000; font-weight: bold&#34;&gt;,&lt;/span&gt; &lt;span style=&#34;color: #4e9a06&#34;&gt;&amp;quot;Jane Doe&amp;quot;&lt;/span&gt; &lt;span style=&#34;color: #ce5c00; font-weight: bold&#34;&gt;=&amp;gt;&lt;/span&gt; &lt;span style=&#34;color: #0000cf; font-weight: bold&#34;&gt;16&lt;/span&gt; &lt;span style=&#34;color: #000000; font-weight: bold&#34;&gt;}&lt;/span&gt;
&lt;span style=&#34;color: #3465a4&#34;&gt;pp&lt;/span&gt; &lt;span style=&#34;color: #000000&#34;&gt;age&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;

output:
&lt;div class=&#34;highlight&#34; style=&#34;background: #f8f8f8&#34;&gt;&lt;pre style=&#34;line-height: 125%&#34;&gt;&lt;span&gt;&lt;/span&gt;age # =&amp;gt; {&amp;quot;Martin Johnsson&amp;quot; =&amp;gt; 29, &amp;quot;Jane Doe&amp;quot; =&amp;gt; 16}
&lt;/pre&gt;&lt;/div&gt;
&lt;/p&gt;

&lt;p&gt;And an alternative syntax form.&lt;/p&gt;

&lt;p&gt;code:
&lt;div class=&#34;highlight&#34; style=&#34;background: #f8f8f8&#34;&gt;&lt;pre style=&#34;line-height: 125%&#34;&gt;&lt;span&gt;&lt;/span&gt;&lt;span style=&#34;color: #000000&#34;&gt;options&lt;/span&gt; &lt;span style=&#34;color: #ce5c00; font-weight: bold&#34;&gt;=&lt;/span&gt; &lt;span style=&#34;color: #000000; font-weight: bold&#34;&gt;{&lt;/span&gt; &lt;span style=&#34;color: #4e9a06&#34;&gt;:font_size&lt;/span&gt; &lt;span style=&#34;color: #ce5c00; font-weight: bold&#34;&gt;=&amp;gt;&lt;/span&gt; &lt;span style=&#34;color: #0000cf; font-weight: bold&#34;&gt;20&lt;/span&gt;&lt;span style=&#34;color: #000000; font-weight: bold&#34;&gt;,&lt;/span&gt; &lt;span style=&#34;color: #4e9a06&#34;&gt;:font_family&lt;/span&gt; &lt;span style=&#34;color: #ce5c00; font-weight: bold&#34;&gt;=&amp;gt;&lt;/span&gt; &lt;span style=&#34;color: #4e9a06&#34;&gt;&amp;quot;Arial&amp;quot;&lt;/span&gt; &lt;span style=&#34;color: #000000; font-weight: bold&#34;&gt;}&lt;/span&gt;
&lt;span style=&#34;color: #3465a4&#34;&gt;pp&lt;/span&gt; &lt;span style=&#34;color: #000000&#34;&gt;options&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;

output:
&lt;div class=&#34;highlight&#34; style=&#34;background: #f8f8f8&#34;&gt;&lt;pre style=&#34;line-height: 125%&#34;&gt;&lt;span&gt;&lt;/span&gt;options # =&amp;gt; {:font_size =&amp;gt; 20, :font_family =&amp;gt; &amp;quot;Arial&amp;quot;}
&lt;/pre&gt;&lt;/div&gt;
&lt;/p&gt;

&lt;p&gt;There&amp;rsquo;s alot of ways to write you&amp;rsquo;re hash, you should pick the way that suites you.&lt;/p&gt;

&lt;div class=&#34;alert alert-warning&#34; role=&#34;alert&#34;&gt;
Problem: Output a specific key!
&lt;/div&gt;

&lt;p&gt;code:
&lt;div class=&#34;highlight&#34; style=&#34;background: #f8f8f8&#34;&gt;&lt;pre style=&#34;line-height: 125%&#34;&gt;&lt;span&gt;&lt;/span&gt;&lt;span style=&#34;color: #8f5902; font-style: italic&#34;&gt;# output a specific key in the hash.&lt;/span&gt;
&lt;span style=&#34;color: #3465a4&#34;&gt;pp&lt;/span&gt; &lt;span style=&#34;color: #000000&#34;&gt;options&lt;/span&gt;&lt;span style=&#34;color: #ce5c00; font-weight: bold&#34;&gt;[&lt;/span&gt;&lt;span style=&#34;color: #4e9a06&#34;&gt;:font_size&lt;/span&gt;&lt;span style=&#34;color: #ce5c00; font-weight: bold&#34;&gt;]&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;

output:
&lt;div class=&#34;highlight&#34; style=&#34;background: #f8f8f8&#34;&gt;&lt;pre style=&#34;line-height: 125%&#34;&gt;&lt;span&gt;&lt;/span&gt;options[:font_size] # =&amp;gt; 20
&lt;/pre&gt;&lt;/div&gt;
&lt;/p&gt;

&lt;div class=&#34;alert alert-warning&#34; role=&#34;alert&#34;&gt;
Problem: Create a list of movies and output movie name after the year it was made.
&lt;/div&gt;

&lt;p&gt;code:
&lt;div class=&#34;highlight&#34; style=&#34;background: #f8f8f8&#34;&gt;&lt;pre style=&#34;line-height: 125%&#34;&gt;&lt;span&gt;&lt;/span&gt;&lt;span style=&#34;color: #000000&#34;&gt;movie&lt;/span&gt; &lt;span style=&#34;color: #ce5c00; font-weight: bold&#34;&gt;=&lt;/span&gt; &lt;span style=&#34;color: #000000; font-weight: bold&#34;&gt;{&lt;/span&gt;
  &lt;span style=&#34;color: #0000cf; font-weight: bold&#34;&gt;1972&lt;/span&gt; &lt;span style=&#34;color: #ce5c00; font-weight: bold&#34;&gt;=&amp;gt;&lt;/span&gt; &lt;span style=&#34;color: #4e9a06&#34;&gt;&amp;quot;The Godfather&amp;quot;&lt;/span&gt;&lt;span style=&#34;color: #000000; font-weight: bold&#34;&gt;,&lt;/span&gt;
  &lt;span style=&#34;color: #0000cf; font-weight: bold&#34;&gt;1994&lt;/span&gt; &lt;span style=&#34;color: #ce5c00; font-weight: bold&#34;&gt;=&amp;gt;&lt;/span&gt; &lt;span style=&#34;color: #4e9a06&#34;&gt;&amp;quot;The Shawshank Redemption&amp;quot;&lt;/span&gt;&lt;span style=&#34;color: #000000; font-weight: bold&#34;&gt;,&lt;/span&gt;
  &lt;span style=&#34;color: #0000cf; font-weight: bold&#34;&gt;1993&lt;/span&gt; &lt;span style=&#34;color: #ce5c00; font-weight: bold&#34;&gt;=&amp;gt;&lt;/span&gt; &lt;span style=&#34;color: #4e9a06&#34;&gt;&amp;quot;Schindler&amp;#39;s List&amp;quot;&lt;/span&gt;&lt;span style=&#34;color: #000000; font-weight: bold&#34;&gt;,&lt;/span&gt;
  &lt;span style=&#34;color: #0000cf; font-weight: bold&#34;&gt;1980&lt;/span&gt; &lt;span style=&#34;color: #ce5c00; font-weight: bold&#34;&gt;=&amp;gt;&lt;/span&gt; &lt;span style=&#34;color: #4e9a06&#34;&gt;&amp;quot;Raging Bull&amp;quot;&lt;/span&gt;&lt;span style=&#34;color: #000000; font-weight: bold&#34;&gt;,&lt;/span&gt;
  &lt;span style=&#34;color: #0000cf; font-weight: bold&#34;&gt;1942&lt;/span&gt; &lt;span style=&#34;color: #ce5c00; font-weight: bold&#34;&gt;=&amp;gt;&lt;/span&gt; &lt;span style=&#34;color: #4e9a06&#34;&gt;&amp;quot;Casablanca&amp;quot;&lt;/span&gt;
&lt;span style=&#34;color: #000000; font-weight: bold&#34;&gt;}&lt;/span&gt;

&lt;span style=&#34;color: #3465a4&#34;&gt;pp&lt;/span&gt; &lt;span style=&#34;color: #000000&#34;&gt;movie&lt;/span&gt;&lt;span style=&#34;color: #ce5c00; font-weight: bold&#34;&gt;[&lt;/span&gt;&lt;span style=&#34;color: #0000cf; font-weight: bold&#34;&gt;1980&lt;/span&gt;&lt;span style=&#34;color: #ce5c00; font-weight: bold&#34;&gt;]&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;

output:
&lt;div class=&#34;highlight&#34; style=&#34;background: #f8f8f8&#34;&gt;&lt;pre style=&#34;line-height: 125%&#34;&gt;&lt;span&gt;&lt;/span&gt;movie[1980] # =&amp;gt; &amp;quot;Raging Bull&amp;quot;
&lt;/pre&gt;&lt;/div&gt;
&lt;/p&gt;

&lt;p&gt;Now keep in mind that this is not a good in real life example since there are alot more movies made the same year. But lets continue with it for learning.&lt;/p&gt;

&lt;div class=&#34;alert alert-warning&#34; role=&#34;alert&#34;&gt;
Problem: Loop through the movie Hash list and output the result.
&lt;/div&gt;

&lt;p&gt;code:
&lt;div class=&#34;highlight&#34; style=&#34;background: #f8f8f8&#34;&gt;&lt;pre style=&#34;line-height: 125%&#34;&gt;&lt;span&gt;&lt;/span&gt;&lt;span style=&#34;color: #000000&#34;&gt;movie&lt;/span&gt;&lt;span style=&#34;color: #ce5c00; font-weight: bold&#34;&gt;.&lt;/span&gt;&lt;span style=&#34;color: #000000&#34;&gt;each&lt;/span&gt; &lt;span style=&#34;color: #204a87; font-weight: bold&#34;&gt;do&lt;/span&gt; &lt;span style=&#34;color: #ce5c00; font-weight: bold&#34;&gt;|&lt;/span&gt;&lt;span style=&#34;color: #000000&#34;&gt;key&lt;/span&gt;&lt;span style=&#34;color: #000000; font-weight: bold&#34;&gt;,&lt;/span&gt; &lt;span style=&#34;color: #000000&#34;&gt;value&lt;/span&gt;&lt;span style=&#34;color: #ce5c00; font-weight: bold&#34;&gt;|&lt;/span&gt;
  &lt;span style=&#34;color: #204a87&#34;&gt;puts&lt;/span&gt; &lt;span style=&#34;color: #4e9a06&#34;&gt;&amp;quot;Year: #{&lt;/span&gt;&lt;span style=&#34;color: #000000&#34;&gt;key&lt;/span&gt;&lt;span style=&#34;color: #4e9a06&#34;&gt;} Movie: #{&lt;/span&gt;&lt;span style=&#34;color: #000000&#34;&gt;value&lt;/span&gt;&lt;span style=&#34;color: #4e9a06&#34;&gt;}&amp;quot;&lt;/span&gt;
&lt;span style=&#34;color: #204a87; font-weight: bold&#34;&gt;end&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;

output:
&lt;div class=&#34;highlight&#34; style=&#34;background: #f8f8f8&#34;&gt;&lt;pre style=&#34;line-height: 125%&#34;&gt;&lt;span&gt;&lt;/span&gt;Year: 1972 Movie: The Godfather
Year: 1994 Movie: The Shawshank Redemption
Year: 1993 Movie: Schindler&amp;#39;s List
Year: 1980 Movie: Raging Bull
Year: 1942 Movie: Casablanca
&lt;/pre&gt;&lt;/div&gt;
&lt;/p&gt;

&lt;h2 id=&#34;summary-of-hash&#34;&gt;Summary of Hash&lt;/h2&gt;

&lt;p&gt;code:
&lt;div class=&#34;highlight&#34; style=&#34;background: #f8f8f8&#34;&gt;&lt;pre style=&#34;line-height: 125%&#34;&gt;&lt;span&gt;&lt;/span&gt;&lt;span style=&#34;color: #8f5902; font-style: italic&#34;&gt;# Creating a hash&lt;/span&gt;
&lt;span style=&#34;color: #000000&#34;&gt;my_hash&lt;/span&gt; &lt;span style=&#34;color: #ce5c00; font-weight: bold&#34;&gt;=&lt;/span&gt; &lt;span style=&#34;color: #000000; font-weight: bold&#34;&gt;{&lt;/span&gt; &lt;span style=&#34;color: #000000&#34;&gt;Key&lt;/span&gt; &lt;span style=&#34;color: #ce5c00; font-weight: bold&#34;&gt;=&amp;gt;&lt;/span&gt; &lt;span style=&#34;color: #204a87&#34;&gt;Value&lt;/span&gt;&lt;span style=&#34;color: #000000; font-weight: bold&#34;&gt;,&lt;/span&gt; &lt;span style=&#34;color: #000000&#34;&gt;Key&lt;/span&gt; &lt;span style=&#34;color: #ce5c00; font-weight: bold&#34;&gt;=&amp;gt;&lt;/span&gt; &lt;span style=&#34;color: #204a87&#34;&gt;Value&lt;/span&gt; &lt;span style=&#34;color: #000000; font-weight: bold&#34;&gt;}&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;

&lt;div class=&#34;highlight&#34; style=&#34;background: #f8f8f8&#34;&gt;&lt;pre style=&#34;line-height: 125%&#34;&gt;&lt;span&gt;&lt;/span&gt;&lt;span style=&#34;color: #8f5902; font-style: italic&#34;&gt;# Clearing a hash.&lt;/span&gt;
&lt;span style=&#34;color: #000000&#34;&gt;my_hash&lt;/span&gt; &lt;span style=&#34;color: #ce5c00; font-weight: bold&#34;&gt;=&lt;/span&gt; &lt;span style=&#34;color: #000000; font-weight: bold&#34;&gt;{&lt;/span&gt; &lt;span style=&#34;color: #0000cf; font-weight: bold&#34;&gt;21&lt;/span&gt; &lt;span style=&#34;color: #ce5c00; font-weight: bold&#34;&gt;=&amp;gt;&lt;/span&gt; &lt;span style=&#34;color: #4e9a06&#34;&gt;&amp;quot;Hash&amp;quot;&lt;/span&gt; &lt;span style=&#34;color: #000000; font-weight: bold&#34;&gt;}&lt;/span&gt;
&lt;span style=&#34;color: #000000&#34;&gt;my_hash&lt;/span&gt;&lt;span style=&#34;color: #ce5c00; font-weight: bold&#34;&gt;.&lt;/span&gt;&lt;span style=&#34;color: #000000&#34;&gt;clear&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;

&lt;div class=&#34;highlight&#34; style=&#34;background: #f8f8f8&#34;&gt;&lt;pre style=&#34;line-height: 125%&#34;&gt;&lt;span&gt;&lt;/span&gt;&lt;span style=&#34;color: #8f5902; font-style: italic&#34;&gt;# Cloning a hash.&lt;/span&gt;
&lt;span style=&#34;color: #000000&#34;&gt;my_hash&lt;/span&gt; &lt;span style=&#34;color: #ce5c00; font-weight: bold&#34;&gt;=&lt;/span&gt; &lt;span style=&#34;color: #000000; font-weight: bold&#34;&gt;{&lt;/span&gt; &lt;span style=&#34;color: #0000cf; font-weight: bold&#34;&gt;21&lt;/span&gt; &lt;span style=&#34;color: #ce5c00; font-weight: bold&#34;&gt;=&amp;gt;&lt;/span&gt; &lt;span style=&#34;color: #4e9a06&#34;&gt;&amp;quot;Hash&amp;quot;&lt;/span&gt; &lt;span style=&#34;color: #000000; font-weight: bold&#34;&gt;}&lt;/span&gt;
&lt;span style=&#34;color: #000000&#34;&gt;my_sec_hash&lt;/span&gt; &lt;span style=&#34;color: #ce5c00; font-weight: bold&#34;&gt;=&lt;/span&gt; &lt;span style=&#34;color: #000000&#34;&gt;my_hash&lt;/span&gt;&lt;span style=&#34;color: #ce5c00; font-weight: bold&#34;&gt;.&lt;/span&gt;&lt;span style=&#34;color: #000000&#34;&gt;clone&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;

&lt;div class=&#34;highlight&#34; style=&#34;background: #f8f8f8&#34;&gt;&lt;pre style=&#34;line-height: 125%&#34;&gt;&lt;span&gt;&lt;/span&gt;&lt;span style=&#34;color: #8f5902; font-style: italic&#34;&gt;# Check if its empty&lt;/span&gt;
&lt;span style=&#34;color: #000000&#34;&gt;my_hash&lt;/span&gt;&lt;span style=&#34;color: #ce5c00; font-weight: bold&#34;&gt;.&lt;/span&gt;&lt;span style=&#34;color: #000000&#34;&gt;empty?&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;

&lt;div class=&#34;highlight&#34; style=&#34;background: #f8f8f8&#34;&gt;&lt;pre style=&#34;line-height: 125%&#34;&gt;&lt;span&gt;&lt;/span&gt;&lt;span style=&#34;color: #8f5902; font-style: italic&#34;&gt;# Inverting the hash&lt;/span&gt;
&lt;span style=&#34;color: #000000; font-weight: bold&#34;&gt;{&lt;/span&gt;&lt;span style=&#34;color: #4e9a06&#34;&gt;&amp;quot;foo&amp;quot;&lt;/span&gt; &lt;span style=&#34;color: #ce5c00; font-weight: bold&#34;&gt;=&amp;gt;&lt;/span&gt; &lt;span style=&#34;color: #4e9a06&#34;&gt;&amp;quot;bar&amp;quot;&lt;/span&gt;&lt;span style=&#34;color: #000000; font-weight: bold&#34;&gt;}&lt;/span&gt;&lt;span style=&#34;color: #ce5c00; font-weight: bold&#34;&gt;.&lt;/span&gt;&lt;span style=&#34;color: #000000&#34;&gt;invert&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;/p&gt;

&lt;h3 id=&#34;references&#34;&gt;References&lt;/h3&gt;

&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;https://crystal-lang.org/api/0.20.5/Hash.html#pretty_print%28pp%29%3ANil-instance-method&#34;&gt;https://crystal-lang.org/api/0.20.5/Hash.html#pretty_print%28pp%29%3ANil-instance-method&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
</description>
    </item>
    
    <item>
      <title>Crystal Tutorial The Basics - Array</title>
      <link>https://mordsith.github.io/2017/crystal-tutorial-the-basics---array/</link>
      <pubDate>Mon, 06 Feb 2017 15:03:37 +0100</pubDate>
      
      <guid>https://mordsith.github.io/2017/crystal-tutorial-the-basics---array/</guid>
      <description>

&lt;p&gt;Arrays are a way of storing data. In Crystal arrays are of generic type T and is integer ordered. Meaning the index of the array start with at 0 just like C and Java. Since arrays in crystal are of generic type it means you can mix types, for example integers, strings and Characters.&lt;/p&gt;

&lt;p&gt;From now on i will use &lt;a href=&#34;https://crystal-lang.org/api/0.20.1/PrettyPrint.html&#34;&gt;Pretty_print&lt;/a&gt; pp for debugging.&lt;/p&gt;

&lt;p&gt;And here goes some of the ways you can create an array.&lt;/p&gt;

&lt;p&gt;code:
&lt;div class=&#34;highlight&#34; style=&#34;background: #f8f8f8&#34;&gt;&lt;pre style=&#34;line-height: 125%&#34;&gt;&lt;span&gt;&lt;/span&gt;&lt;span style=&#34;color: #8f5902; font-style: italic&#34;&gt;# an empty string array&lt;/span&gt;
&lt;span style=&#34;color: #8f5902; font-style: italic&#34;&gt;# needs to be defined since its T&lt;/span&gt;
&lt;span style=&#34;color: #000000&#34;&gt;my_arr&lt;/span&gt; &lt;span style=&#34;color: #ce5c00; font-weight: bold&#34;&gt;=&lt;/span&gt; &lt;span style=&#34;color: #204a87&#34;&gt;Array&lt;/span&gt;&lt;span style=&#34;color: #000000; font-weight: bold&#34;&gt;(&lt;/span&gt;&lt;span style=&#34;color: #204a87&#34;&gt;String&lt;/span&gt;&lt;span style=&#34;color: #000000; font-weight: bold&#34;&gt;)&lt;/span&gt;&lt;span style=&#34;color: #ce5c00; font-weight: bold&#34;&gt;.&lt;/span&gt;&lt;span style=&#34;color: #000000&#34;&gt;new&lt;/span&gt;

&lt;span style=&#34;color: #8f5902; font-style: italic&#34;&gt;# an integer based array&lt;/span&gt;
&lt;span style=&#34;color: #000000&#34;&gt;my_arr&lt;/span&gt; &lt;span style=&#34;color: #ce5c00; font-weight: bold&#34;&gt;=&lt;/span&gt; &lt;span style=&#34;color: #204a87&#34;&gt;Array&lt;/span&gt;&lt;span style=&#34;color: #000000; font-weight: bold&#34;&gt;(&lt;/span&gt;&lt;span style=&#34;color: #204a87&#34;&gt;Int32&lt;/span&gt;&lt;span style=&#34;color: #000000; font-weight: bold&#34;&gt;)&lt;/span&gt;&lt;span style=&#34;color: #ce5c00; font-weight: bold&#34;&gt;.&lt;/span&gt;&lt;span style=&#34;color: #000000&#34;&gt;new&lt;/span&gt;

&lt;span style=&#34;color: #8f5902; font-style: italic&#34;&gt;# defining the ints in an array&lt;/span&gt;
&lt;span style=&#34;color: #000000&#34;&gt;my_arr&lt;/span&gt; &lt;span style=&#34;color: #ce5c00; font-weight: bold&#34;&gt;=&lt;/span&gt; &lt;span style=&#34;color: #ce5c00; font-weight: bold&#34;&gt;[&lt;/span&gt;&lt;span style=&#34;color: #0000cf; font-weight: bold&#34;&gt;1&lt;/span&gt;&lt;span style=&#34;color: #000000; font-weight: bold&#34;&gt;,&lt;/span&gt; &lt;span style=&#34;color: #0000cf; font-weight: bold&#34;&gt;2&lt;/span&gt;&lt;span style=&#34;color: #000000; font-weight: bold&#34;&gt;,&lt;/span&gt; &lt;span style=&#34;color: #0000cf; font-weight: bold&#34;&gt;3&lt;/span&gt;&lt;span style=&#34;color: #000000; font-weight: bold&#34;&gt;,&lt;/span&gt; &lt;span style=&#34;color: #0000cf; font-weight: bold&#34;&gt;4&lt;/span&gt;&lt;span style=&#34;color: #000000; font-weight: bold&#34;&gt;,&lt;/span&gt; &lt;span style=&#34;color: #0000cf; font-weight: bold&#34;&gt;5&lt;/span&gt;&lt;span style=&#34;color: #ce5c00; font-weight: bold&#34;&gt;]&lt;/span&gt;

&lt;span style=&#34;color: #8f5902; font-style: italic&#34;&gt;# a generic array&lt;/span&gt;
&lt;span style=&#34;color: #000000&#34;&gt;my_arr&lt;/span&gt; &lt;span style=&#34;color: #ce5c00; font-weight: bold&#34;&gt;=&lt;/span&gt; &lt;span style=&#34;color: #ce5c00; font-weight: bold&#34;&gt;[&lt;/span&gt;&lt;span style=&#34;color: #0000cf; font-weight: bold&#34;&gt;1&lt;/span&gt;&lt;span style=&#34;color: #000000; font-weight: bold&#34;&gt;,&lt;/span&gt; &lt;span style=&#34;color: #4e9a06&#34;&gt;&amp;quot;hello&amp;quot;&lt;/span&gt;&lt;span style=&#34;color: #000000; font-weight: bold&#34;&gt;,&lt;/span&gt; &lt;span style=&#34;color: #4e9a06&#34;&gt;&amp;#39;x&amp;#39;&lt;/span&gt;&lt;span style=&#34;color: #ce5c00; font-weight: bold&#34;&gt;]&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;/p&gt;

&lt;p&gt;And these are some of the ways you can create and array.&lt;/p&gt;

&lt;div class=&#34;alert alert-warning&#34; role=&#34;alert&#34;&gt;
Problem: Create an array, put in five names and then print the second name in the array.
&lt;/div&gt;

&lt;p&gt;code:
&lt;div class=&#34;highlight&#34; style=&#34;background: #f8f8f8&#34;&gt;&lt;pre style=&#34;line-height: 125%&#34;&gt;&lt;span&gt;&lt;/span&gt;&lt;span style=&#34;color: #000000&#34;&gt;my_array&lt;/span&gt; &lt;span style=&#34;color: #ce5c00; font-weight: bold&#34;&gt;=&lt;/span&gt; &lt;span style=&#34;color: #ce5c00; font-weight: bold&#34;&gt;[&lt;/span&gt;&lt;span style=&#34;color: #4e9a06&#34;&gt;&amp;quot;Samson&amp;quot;&lt;/span&gt;&lt;span style=&#34;color: #000000; font-weight: bold&#34;&gt;,&lt;/span&gt; &lt;span style=&#34;color: #4e9a06&#34;&gt;&amp;quot;Erica&amp;quot;&lt;/span&gt;&lt;span style=&#34;color: #000000; font-weight: bold&#34;&gt;,&lt;/span&gt; &lt;span style=&#34;color: #4e9a06&#34;&gt;&amp;quot;Tommy&amp;quot;&lt;/span&gt;&lt;span style=&#34;color: #000000; font-weight: bold&#34;&gt;,&lt;/span&gt; &lt;span style=&#34;color: #4e9a06&#34;&gt;&amp;quot;Jessica&amp;quot;&lt;/span&gt;&lt;span style=&#34;color: #000000; font-weight: bold&#34;&gt;,&lt;/span&gt; &lt;span style=&#34;color: #4e9a06&#34;&gt;&amp;quot;Donald&amp;quot;&lt;/span&gt;&lt;span style=&#34;color: #ce5c00; font-weight: bold&#34;&gt;]&lt;/span&gt;
&lt;span style=&#34;color: #3465a4&#34;&gt;pp&lt;/span&gt; &lt;span style=&#34;color: #000000&#34;&gt;my_array&lt;/span&gt;&lt;span style=&#34;color: #ce5c00; font-weight: bold&#34;&gt;.&lt;/span&gt;&lt;span style=&#34;color: #000000&#34;&gt;at&lt;/span&gt;&lt;span style=&#34;color: #000000; font-weight: bold&#34;&gt;(&lt;/span&gt;&lt;span style=&#34;color: #0000cf; font-weight: bold&#34;&gt;1&lt;/span&gt;&lt;span style=&#34;color: #000000; font-weight: bold&#34;&gt;)&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;

output:
&lt;div class=&#34;highlight&#34; style=&#34;background: #f8f8f8&#34;&gt;&lt;pre style=&#34;line-height: 125%&#34;&gt;&lt;span&gt;&lt;/span&gt;my_array.at(1) # =&amp;gt; &amp;quot;Erica&amp;quot;
&lt;/pre&gt;&lt;/div&gt;
&lt;/p&gt;

&lt;p&gt;And if you remember what i said before.. the array starts at nr 0, The second name in the array is at(1)&lt;/p&gt;

&lt;div class=&#34;alert alert-warning&#34; role=&#34;alert&#34;&gt;
Problem: We forgot to put in the name of Linda, and Linda needs to be inserted between Samson and Erica.
&lt;/div&gt;

&lt;p&gt;code:
&lt;div class=&#34;highlight&#34; style=&#34;background: #f8f8f8&#34;&gt;&lt;pre style=&#34;line-height: 125%&#34;&gt;&lt;span&gt;&lt;/span&gt;&lt;span style=&#34;color: #000000&#34;&gt;my_array&lt;/span&gt;&lt;span style=&#34;color: #ce5c00; font-weight: bold&#34;&gt;.&lt;/span&gt;&lt;span style=&#34;color: #000000&#34;&gt;insert&lt;/span&gt;&lt;span style=&#34;color: #000000; font-weight: bold&#34;&gt;(&lt;/span&gt;&lt;span style=&#34;color: #0000cf; font-weight: bold&#34;&gt;1&lt;/span&gt;&lt;span style=&#34;color: #000000; font-weight: bold&#34;&gt;,&lt;/span&gt; &lt;span style=&#34;color: #4e9a06&#34;&gt;&amp;quot;Linda&amp;quot;&lt;/span&gt;&lt;span style=&#34;color: #000000; font-weight: bold&#34;&gt;)&lt;/span&gt;
&lt;span style=&#34;color: #3465a4&#34;&gt;pp&lt;/span&gt; &lt;span style=&#34;color: #000000&#34;&gt;my_array&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;

output:
&lt;div class=&#34;highlight&#34; style=&#34;background: #f8f8f8&#34;&gt;&lt;pre style=&#34;line-height: 125%&#34;&gt;&lt;span&gt;&lt;/span&gt;my_array # =&amp;gt; [&amp;quot;Samson&amp;quot;, &amp;quot;Linda&amp;quot;, &amp;quot;Erica&amp;quot;, &amp;quot;Tommy&amp;quot;, &amp;quot;Jessica&amp;quot;, &amp;quot;Donald&amp;quot;]
&lt;/pre&gt;&lt;/div&gt;
&lt;/p&gt;

&lt;p&gt;And now Linda is between Samson and Erica..&lt;/p&gt;

&lt;p&gt;But Ohh no! Instead of putting in their surname we put in their first name.&lt;/p&gt;

&lt;div class=&#34;alert alert-warning&#34; role=&#34;alert&#34;&gt;
Problem: Clear the array.
&lt;/div&gt;

&lt;p&gt;code:
&lt;div class=&#34;highlight&#34; style=&#34;background: #f8f8f8&#34;&gt;&lt;pre style=&#34;line-height: 125%&#34;&gt;&lt;span&gt;&lt;/span&gt;&lt;span style=&#34;color: #000000&#34;&gt;my_array&lt;/span&gt;&lt;span style=&#34;color: #ce5c00; font-weight: bold&#34;&gt;.&lt;/span&gt;&lt;span style=&#34;color: #000000&#34;&gt;clear&lt;/span&gt;
&lt;span style=&#34;color: #3465a4&#34;&gt;pp&lt;/span&gt; &lt;span style=&#34;color: #000000&#34;&gt;my_array&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;

output:
&lt;div class=&#34;highlight&#34; style=&#34;background: #f8f8f8&#34;&gt;&lt;pre style=&#34;line-height: 125%&#34;&gt;&lt;span&gt;&lt;/span&gt;my_array # =&amp;gt; []
&lt;/pre&gt;&lt;/div&gt;
&lt;/p&gt;

&lt;p&gt;And good that is how we clear an array.. not lets put in their surnames instead.&lt;/p&gt;

&lt;p&gt;code:
&lt;div class=&#34;highlight&#34; style=&#34;background: #f8f8f8&#34;&gt;&lt;pre style=&#34;line-height: 125%&#34;&gt;&lt;span&gt;&lt;/span&gt;&lt;span style=&#34;color: #8f5902; font-style: italic&#34;&gt;# Another way to fill a String array&lt;/span&gt;
&lt;span style=&#34;color: #000000&#34;&gt;my_array&lt;/span&gt; &lt;span style=&#34;color: #ce5c00; font-weight: bold&#34;&gt;=&lt;/span&gt; &lt;span style=&#34;color: #4e9a06&#34;&gt;%w(Smith Ericson Larsson Mayfield Bush)&lt;/span&gt;
&lt;span style=&#34;color: #3465a4&#34;&gt;pp&lt;/span&gt; &lt;span style=&#34;color: #000000&#34;&gt;my_array&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;

output:
&lt;div class=&#34;highlight&#34; style=&#34;background: #f8f8f8&#34;&gt;&lt;pre style=&#34;line-height: 125%&#34;&gt;&lt;span&gt;&lt;/span&gt;my_array # =&amp;gt; [&amp;quot;Smith&amp;quot;, &amp;quot;Ericson&amp;quot;, &amp;quot;Larsson&amp;quot;, &amp;quot;Mayfield&amp;quot;, &amp;quot;Bush&amp;quot;]
&lt;/pre&gt;&lt;/div&gt;
&lt;/p&gt;

&lt;p&gt;Wonderful now we have all their last names.&lt;/p&gt;

&lt;div class=&#34;alert alert-info&#34; role=&#34;alert&#34;&gt;
 Tip! Some usefull stuff you can do with arrays...
&lt;/div&gt;

&lt;p&gt;code:
&lt;div class=&#34;highlight&#34; style=&#34;background: #f8f8f8&#34;&gt;&lt;pre style=&#34;line-height: 125%&#34;&gt;&lt;span&gt;&lt;/span&gt;&lt;span style=&#34;color: #000000&#34;&gt;my_array&lt;/span&gt; &lt;span style=&#34;color: #ce5c00; font-weight: bold&#34;&gt;=&lt;/span&gt; &lt;span style=&#34;color: #4e9a06&#34;&gt;%w(Smith Ericson Larsson Mayfield Bush)&lt;/span&gt;

&lt;span style=&#34;color: #8f5902; font-style: italic&#34;&gt;#Reverse the array&lt;/span&gt;
&lt;span style=&#34;color: #3465a4&#34;&gt;pp&lt;/span&gt; &lt;span style=&#34;color: #000000&#34;&gt;my_array&lt;/span&gt;&lt;span style=&#34;color: #ce5c00; font-weight: bold&#34;&gt;.&lt;/span&gt;&lt;span style=&#34;color: #000000&#34;&gt;reverse&lt;/span&gt;

&lt;span style=&#34;color: #8f5902; font-style: italic&#34;&gt;# Cloning the array&lt;/span&gt;
&lt;span style=&#34;color: #3465a4&#34;&gt;pp&lt;/span&gt; &lt;span style=&#34;color: #000000&#34;&gt;my_clone&lt;/span&gt; &lt;span style=&#34;color: #ce5c00; font-weight: bold&#34;&gt;=&lt;/span&gt; &lt;span style=&#34;color: #000000&#34;&gt;my_array&lt;/span&gt;

&lt;span style=&#34;color: #8f5902; font-style: italic&#34;&gt;# Concat array&lt;/span&gt;
&lt;span style=&#34;color: #3465a4&#34;&gt;pp&lt;/span&gt; &lt;span style=&#34;color: #ce5c00; font-weight: bold&#34;&gt;[&lt;/span&gt;&lt;span style=&#34;color: #0000cf; font-weight: bold&#34;&gt;1&lt;/span&gt;&lt;span style=&#34;color: #000000; font-weight: bold&#34;&gt;,&lt;/span&gt;&lt;span style=&#34;color: #0000cf; font-weight: bold&#34;&gt;2&lt;/span&gt;&lt;span style=&#34;color: #000000; font-weight: bold&#34;&gt;,&lt;/span&gt;&lt;span style=&#34;color: #0000cf; font-weight: bold&#34;&gt;3&lt;/span&gt;&lt;span style=&#34;color: #000000; font-weight: bold&#34;&gt;,&lt;/span&gt;&lt;span style=&#34;color: #0000cf; font-weight: bold&#34;&gt;4&lt;/span&gt;&lt;span style=&#34;color: #ce5c00; font-weight: bold&#34;&gt;].&lt;/span&gt;&lt;span style=&#34;color: #000000&#34;&gt;concat&lt;/span&gt;&lt;span style=&#34;color: #000000; font-weight: bold&#34;&gt;(&lt;/span&gt;&lt;span style=&#34;color: #ce5c00; font-weight: bold&#34;&gt;[&lt;/span&gt;&lt;span style=&#34;color: #0000cf; font-weight: bold&#34;&gt;5&lt;/span&gt;&lt;span style=&#34;color: #000000; font-weight: bold&#34;&gt;,&lt;/span&gt;&lt;span style=&#34;color: #0000cf; font-weight: bold&#34;&gt;6&lt;/span&gt;&lt;span style=&#34;color: #000000; font-weight: bold&#34;&gt;,&lt;/span&gt;&lt;span style=&#34;color: #0000cf; font-weight: bold&#34;&gt;7&lt;/span&gt;&lt;span style=&#34;color: #ce5c00; font-weight: bold&#34;&gt;]&lt;/span&gt;&lt;span style=&#34;color: #000000; font-weight: bold&#34;&gt;)&lt;/span&gt;

&lt;span style=&#34;color: #8f5902; font-style: italic&#34;&gt;# Size of the array&lt;/span&gt;
&lt;span style=&#34;color: #3465a4&#34;&gt;pp&lt;/span&gt; &lt;span style=&#34;color: #000000&#34;&gt;my_array&lt;/span&gt;&lt;span style=&#34;color: #ce5c00; font-weight: bold&#34;&gt;.&lt;/span&gt;&lt;span style=&#34;color: #000000&#34;&gt;size&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;

output:
&lt;div class=&#34;highlight&#34; style=&#34;background: #f8f8f8&#34;&gt;&lt;pre style=&#34;line-height: 125%&#34;&gt;&lt;span&gt;&lt;/span&gt;my_array.reverse # =&amp;gt; [&amp;quot;Bush&amp;quot;, &amp;quot;Mayfield&amp;quot;, &amp;quot;Larsson&amp;quot;, &amp;quot;Ericson&amp;quot;, &amp;quot;Smith&amp;quot;]
my_clone = my_array # =&amp;gt; [&amp;quot;Smith&amp;quot;, &amp;quot;Ericson&amp;quot;, &amp;quot;Larsson&amp;quot;, &amp;quot;Mayfield&amp;quot;, &amp;quot;Bush&amp;quot;]
[1, 2, 3, 4].concat([5, 6, 7]) # =&amp;gt; [1, 2, 3, 4, 5, 6, 7]
my_array.size # =&amp;gt; 5
&lt;/pre&gt;&lt;/div&gt;
&lt;/p&gt;

&lt;p&gt;And there alot more stuff you can do to arrays.. i recommend taking a look at these &lt;a href=&#34;https://github.com/tbpgr/crystal_samples/tree/master/Array&#34;&gt;crystal samples&lt;/a&gt;&lt;/p&gt;

&lt;div class=&#34;alert alert-warning&#34; role=&#34;alert&#34;&gt;
Problem: Now lets insert the age of the person as a string after their names.
&lt;/div&gt;

&lt;p&gt;code:
&lt;div class=&#34;highlight&#34; style=&#34;background: #f8f8f8&#34;&gt;&lt;pre style=&#34;line-height: 125%&#34;&gt;&lt;span&gt;&lt;/span&gt;&lt;span style=&#34;color: #000000&#34;&gt;my_array&lt;/span&gt; &lt;span style=&#34;color: #ce5c00; font-weight: bold&#34;&gt;=&lt;/span&gt; &lt;span style=&#34;color: #4e9a06&#34;&gt;%w(Smith Ericson Larsson Mayfield Bush)&lt;/span&gt;

&lt;span style=&#34;color: #000000&#34;&gt;number&lt;/span&gt; &lt;span style=&#34;color: #ce5c00; font-weight: bold&#34;&gt;=&lt;/span&gt; &lt;span style=&#34;color: #0000cf; font-weight: bold&#34;&gt;1&lt;/span&gt;

&lt;span style=&#34;color: #8f5902; font-style: italic&#34;&gt;# loop until all ages are set&lt;/span&gt;
&lt;span style=&#34;color: #204a87&#34;&gt;loop&lt;/span&gt; &lt;span style=&#34;color: #204a87; font-weight: bold&#34;&gt;do&lt;/span&gt;
  &lt;span style=&#34;color: #000000&#34;&gt;age&lt;/span&gt; &lt;span style=&#34;color: #ce5c00; font-weight: bold&#34;&gt;=&lt;/span&gt; &lt;span style=&#34;color: #204a87&#34;&gt;gets&lt;/span&gt;&lt;span style=&#34;color: #ce5c00; font-weight: bold&#34;&gt;.&lt;/span&gt;&lt;span style=&#34;color: #000000&#34;&gt;to_s&lt;/span&gt;
  &lt;span style=&#34;color: #000000&#34;&gt;my_array&lt;/span&gt;&lt;span style=&#34;color: #ce5c00; font-weight: bold&#34;&gt;.&lt;/span&gt;&lt;span style=&#34;color: #000000&#34;&gt;insert&lt;/span&gt;&lt;span style=&#34;color: #000000; font-weight: bold&#34;&gt;(&lt;/span&gt;&lt;span style=&#34;color: #000000&#34;&gt;number&lt;/span&gt;&lt;span style=&#34;color: #000000; font-weight: bold&#34;&gt;,&lt;/span&gt; &lt;span style=&#34;color: #000000&#34;&gt;age&lt;/span&gt;&lt;span style=&#34;color: #000000; font-weight: bold&#34;&gt;)&lt;/span&gt;
  &lt;span style=&#34;color: #000000&#34;&gt;number&lt;/span&gt; &lt;span style=&#34;color: #ce5c00; font-weight: bold&#34;&gt;+=&lt;/span&gt; &lt;span style=&#34;color: #0000cf; font-weight: bold&#34;&gt;2&lt;/span&gt;
  &lt;span style=&#34;color: #204a87; font-weight: bold&#34;&gt;if&lt;/span&gt; &lt;span style=&#34;color: #000000&#34;&gt;number&lt;/span&gt; &lt;span style=&#34;color: #ce5c00; font-weight: bold&#34;&gt;&amp;gt;=&lt;/span&gt; &lt;span style=&#34;color: #0000cf; font-weight: bold&#34;&gt;10&lt;/span&gt;
    &lt;span style=&#34;color: #204a87; font-weight: bold&#34;&gt;break&lt;/span&gt;
  &lt;span style=&#34;color: #204a87; font-weight: bold&#34;&gt;end&lt;/span&gt;
&lt;span style=&#34;color: #204a87; font-weight: bold&#34;&gt;end&lt;/span&gt;

&lt;span style=&#34;color: #3465a4&#34;&gt;pp&lt;/span&gt; &lt;span style=&#34;color: #000000&#34;&gt;my_array&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;

output:
&lt;div class=&#34;highlight&#34; style=&#34;background: #f8f8f8&#34;&gt;&lt;pre style=&#34;line-height: 125%&#34;&gt;&lt;span&gt;&lt;/span&gt;22
33
41
65
19
my_array # =&amp;gt; [&amp;quot;Smith&amp;quot;,
               &amp;quot;22&amp;quot;,
               &amp;quot;Ericson&amp;quot;,
               &amp;quot;33&amp;quot;,
               &amp;quot;Larsson&amp;quot;,
               &amp;quot;41&amp;quot;,

               &amp;quot;Mayfield&amp;quot;,
               &amp;quot;65&amp;quot;,
               &amp;quot;Bush&amp;quot;,
               &amp;quot;19&amp;quot;]
&lt;/pre&gt;&lt;/div&gt;
&lt;/p&gt;

&lt;p&gt;Why 10? Because if you have 5 names, and you want to add 5 ages well you get the point.&lt;/p&gt;

&lt;div class=&#34;alert alert-warning&#34; role=&#34;alert&#34;&gt;
Problem: Now i want to see the names in the array between the numbers of 2 - 4.
&lt;/div&gt;

&lt;p&gt;code:
&lt;div class=&#34;highlight&#34; style=&#34;background: #f8f8f8&#34;&gt;&lt;pre style=&#34;line-height: 125%&#34;&gt;&lt;span&gt;&lt;/span&gt;&lt;span style=&#34;color: #000000&#34;&gt;my_array&lt;/span&gt; &lt;span style=&#34;color: #ce5c00; font-weight: bold&#34;&gt;=&lt;/span&gt; &lt;span style=&#34;color: #4e9a06&#34;&gt;%w(Smith Ericson Larsson Mayfield Bush)&lt;/span&gt;

&lt;span style=&#34;color: #3465a4&#34;&gt;pp&lt;/span&gt; &lt;span style=&#34;color: #000000&#34;&gt;my_array&lt;/span&gt;&lt;span style=&#34;color: #ce5c00; font-weight: bold&#34;&gt;[&lt;/span&gt;&lt;span style=&#34;color: #0000cf; font-weight: bold&#34;&gt;2&lt;/span&gt;&lt;span style=&#34;color: #ce5c00; font-weight: bold&#34;&gt;..&lt;/span&gt;&lt;span style=&#34;color: #0000cf; font-weight: bold&#34;&gt;4&lt;/span&gt;&lt;span style=&#34;color: #ce5c00; font-weight: bold&#34;&gt;]&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;

output:
&lt;div class=&#34;highlight&#34; style=&#34;background: #f8f8f8&#34;&gt;&lt;pre style=&#34;line-height: 125%&#34;&gt;&lt;span&gt;&lt;/span&gt;my_array[2..4] # =&amp;gt; [&amp;quot;Larsson&amp;quot;, &amp;quot;Mayfield&amp;quot;, &amp;quot;Bush&amp;quot;]
&lt;/pre&gt;&lt;/div&gt;
&lt;/p&gt;

&lt;p&gt;Now there is another kind of array in Crystal called Tuple. Tuples are basically Arrays that are immutable, and arrays are mutable.&lt;/p&gt;

&lt;blockquote&gt;
&lt;p&gt;According to Crystal Api : You can think of a Tuple as an immutable Array whose type for each position is known at compile time.&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;And this is what a tuple looks like..
&lt;code&gt;my_tuple = { 23, &amp;quot;string&amp;quot;, &#39;c&#39; }&lt;/code&gt;&lt;/p&gt;

&lt;h2 id=&#34;summary-of-arrays&#34;&gt;Summary of Arrays&lt;/h2&gt;

&lt;p&gt;code:
&lt;div class=&#34;highlight&#34; style=&#34;background: #f8f8f8&#34;&gt;&lt;pre style=&#34;line-height: 125%&#34;&gt;&lt;span&gt;&lt;/span&gt;&lt;span style=&#34;color: #8f5902; font-style: italic&#34;&gt;# an empty string array&lt;/span&gt;
&lt;span style=&#34;color: #8f5902; font-style: italic&#34;&gt;# needs to be defined since its T&lt;/span&gt;
&lt;span style=&#34;color: #000000&#34;&gt;array_name&lt;/span&gt; &lt;span style=&#34;color: #ce5c00; font-weight: bold&#34;&gt;=&lt;/span&gt; &lt;span style=&#34;color: #204a87&#34;&gt;Array&lt;/span&gt;&lt;span style=&#34;color: #000000; font-weight: bold&#34;&gt;(&lt;/span&gt;&lt;span style=&#34;color: #204a87&#34;&gt;String&lt;/span&gt;&lt;span style=&#34;color: #000000; font-weight: bold&#34;&gt;)&lt;/span&gt;&lt;span style=&#34;color: #ce5c00; font-weight: bold&#34;&gt;.&lt;/span&gt;&lt;span style=&#34;color: #000000&#34;&gt;new&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;/p&gt;

&lt;div class=&#34;highlight&#34; style=&#34;background: #f8f8f8&#34;&gt;&lt;pre style=&#34;line-height: 125%&#34;&gt;&lt;span&gt;&lt;/span&gt;&lt;span style=&#34;color: #8f5902; font-style: italic&#34;&gt;# an integer based array&lt;/span&gt;
&lt;span style=&#34;color: #000000&#34;&gt;array_name&lt;/span&gt; &lt;span style=&#34;color: #ce5c00; font-weight: bold&#34;&gt;=&lt;/span&gt; &lt;span style=&#34;color: #204a87&#34;&gt;Array&lt;/span&gt;&lt;span style=&#34;color: #000000; font-weight: bold&#34;&gt;(&lt;/span&gt;&lt;span style=&#34;color: #204a87&#34;&gt;Int32&lt;/span&gt;&lt;span style=&#34;color: #000000; font-weight: bold&#34;&gt;)&lt;/span&gt;&lt;span style=&#34;color: #ce5c00; font-weight: bold&#34;&gt;.&lt;/span&gt;&lt;span style=&#34;color: #000000&#34;&gt;new&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;


&lt;div class=&#34;highlight&#34; style=&#34;background: #f8f8f8&#34;&gt;&lt;pre style=&#34;line-height: 125%&#34;&gt;&lt;span&gt;&lt;/span&gt;&lt;span style=&#34;color: #8f5902; font-style: italic&#34;&gt;# defining the ints in an array&lt;/span&gt;
&lt;span style=&#34;color: #000000&#34;&gt;array_name&lt;/span&gt; &lt;span style=&#34;color: #ce5c00; font-weight: bold&#34;&gt;=&lt;/span&gt; &lt;span style=&#34;color: #ce5c00; font-weight: bold&#34;&gt;[&lt;/span&gt;&lt;span style=&#34;color: #0000cf; font-weight: bold&#34;&gt;1&lt;/span&gt;&lt;span style=&#34;color: #000000; font-weight: bold&#34;&gt;,&lt;/span&gt; &lt;span style=&#34;color: #0000cf; font-weight: bold&#34;&gt;2&lt;/span&gt;&lt;span style=&#34;color: #000000; font-weight: bold&#34;&gt;,&lt;/span&gt; &lt;span style=&#34;color: #0000cf; font-weight: bold&#34;&gt;3&lt;/span&gt;&lt;span style=&#34;color: #000000; font-weight: bold&#34;&gt;,&lt;/span&gt; &lt;span style=&#34;color: #0000cf; font-weight: bold&#34;&gt;4&lt;/span&gt;&lt;span style=&#34;color: #000000; font-weight: bold&#34;&gt;,&lt;/span&gt; &lt;span style=&#34;color: #0000cf; font-weight: bold&#34;&gt;5&lt;/span&gt;&lt;span style=&#34;color: #ce5c00; font-weight: bold&#34;&gt;]&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;


&lt;div class=&#34;highlight&#34; style=&#34;background: #f8f8f8&#34;&gt;&lt;pre style=&#34;line-height: 125%&#34;&gt;&lt;span&gt;&lt;/span&gt;&lt;span style=&#34;color: #8f5902; font-style: italic&#34;&gt;# a generic array&lt;/span&gt;
&lt;span style=&#34;color: #000000&#34;&gt;array_name&lt;/span&gt; &lt;span style=&#34;color: #ce5c00; font-weight: bold&#34;&gt;=&lt;/span&gt; &lt;span style=&#34;color: #ce5c00; font-weight: bold&#34;&gt;[&lt;/span&gt;&lt;span style=&#34;color: #0000cf; font-weight: bold&#34;&gt;1&lt;/span&gt;&lt;span style=&#34;color: #000000; font-weight: bold&#34;&gt;,&lt;/span&gt; &lt;span style=&#34;color: #4e9a06&#34;&gt;&amp;quot;hello&amp;quot;&lt;/span&gt;&lt;span style=&#34;color: #000000; font-weight: bold&#34;&gt;,&lt;/span&gt; &lt;span style=&#34;color: #4e9a06&#34;&gt;&amp;#39;x&amp;#39;&lt;/span&gt;&lt;span style=&#34;color: #ce5c00; font-weight: bold&#34;&gt;]&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;


&lt;div class=&#34;highlight&#34; style=&#34;background: #f8f8f8&#34;&gt;&lt;pre style=&#34;line-height: 125%&#34;&gt;&lt;span&gt;&lt;/span&gt;&lt;span style=&#34;color: #8f5902; font-style: italic&#34;&gt;# picking at a single array point&lt;/span&gt;
&lt;span style=&#34;color: #000000&#34;&gt;array_name&lt;/span&gt;&lt;span style=&#34;color: #ce5c00; font-weight: bold&#34;&gt;.&lt;/span&gt;&lt;span style=&#34;color: #000000&#34;&gt;at&lt;/span&gt;&lt;span style=&#34;color: #000000; font-weight: bold&#34;&gt;(&lt;/span&gt;&lt;span style=&#34;color: #0000cf; font-weight: bold&#34;&gt;1&lt;/span&gt;&lt;span style=&#34;color: #000000; font-weight: bold&#34;&gt;)&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;


&lt;div class=&#34;highlight&#34; style=&#34;background: #f8f8f8&#34;&gt;&lt;pre style=&#34;line-height: 125%&#34;&gt;&lt;span&gt;&lt;/span&gt;&lt;span style=&#34;color: #8f5902; font-style: italic&#34;&gt;# inserting at a sertain point&lt;/span&gt;
&lt;span style=&#34;color: #000000&#34;&gt;array_name&lt;/span&gt;&lt;span style=&#34;color: #ce5c00; font-weight: bold&#34;&gt;.&lt;/span&gt;&lt;span style=&#34;color: #000000&#34;&gt;insert&lt;/span&gt;&lt;span style=&#34;color: #000000; font-weight: bold&#34;&gt;(&lt;/span&gt;&lt;span style=&#34;color: #0000cf; font-weight: bold&#34;&gt;1&lt;/span&gt;&lt;span style=&#34;color: #000000; font-weight: bold&#34;&gt;,&lt;/span&gt; &lt;span style=&#34;color: #4e9a06&#34;&gt;&amp;quot;value&amp;quot;&lt;/span&gt;&lt;span style=&#34;color: #000000; font-weight: bold&#34;&gt;)&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;


&lt;div class=&#34;highlight&#34; style=&#34;background: #f8f8f8&#34;&gt;&lt;pre style=&#34;line-height: 125%&#34;&gt;&lt;span&gt;&lt;/span&gt;&lt;span style=&#34;color: #8f5902; font-style: italic&#34;&gt;# inserting at a sertain point&lt;/span&gt;
&lt;span style=&#34;color: #000000&#34;&gt;array_name&lt;/span&gt;&lt;span style=&#34;color: #ce5c00; font-weight: bold&#34;&gt;.&lt;/span&gt;&lt;span style=&#34;color: #000000&#34;&gt;insert&lt;/span&gt;&lt;span style=&#34;color: #000000; font-weight: bold&#34;&gt;(&lt;/span&gt;&lt;span style=&#34;color: #0000cf; font-weight: bold&#34;&gt;1&lt;/span&gt;&lt;span style=&#34;color: #000000; font-weight: bold&#34;&gt;,&lt;/span&gt; &lt;span style=&#34;color: #4e9a06&#34;&gt;&amp;quot;value&amp;quot;&lt;/span&gt;&lt;span style=&#34;color: #000000; font-weight: bold&#34;&gt;)&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;


&lt;div class=&#34;highlight&#34; style=&#34;background: #f8f8f8&#34;&gt;&lt;pre style=&#34;line-height: 125%&#34;&gt;&lt;span&gt;&lt;/span&gt;&lt;span style=&#34;color: #8f5902; font-style: italic&#34;&gt;# reverse an array&lt;/span&gt;
&lt;span style=&#34;color: #000000&#34;&gt;array_name&lt;/span&gt;&lt;span style=&#34;color: #ce5c00; font-weight: bold&#34;&gt;.&lt;/span&gt;&lt;span style=&#34;color: #000000&#34;&gt;reverse&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;


&lt;div class=&#34;highlight&#34; style=&#34;background: #f8f8f8&#34;&gt;&lt;pre style=&#34;line-height: 125%&#34;&gt;&lt;span&gt;&lt;/span&gt;&lt;span style=&#34;color: #8f5902; font-style: italic&#34;&gt;# clone an array&lt;/span&gt;
&lt;span style=&#34;color: #000000&#34;&gt;new_array&lt;/span&gt; &lt;span style=&#34;color: #ce5c00; font-weight: bold&#34;&gt;=&lt;/span&gt; &lt;span style=&#34;color: #000000&#34;&gt;array_name&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;


&lt;div class=&#34;highlight&#34; style=&#34;background: #f8f8f8&#34;&gt;&lt;pre style=&#34;line-height: 125%&#34;&gt;&lt;span&gt;&lt;/span&gt;&lt;span style=&#34;color: #8f5902; font-style: italic&#34;&gt;# size of the array&lt;/span&gt;
&lt;span style=&#34;color: #000000&#34;&gt;array_name&lt;/span&gt;&lt;span style=&#34;color: #ce5c00; font-weight: bold&#34;&gt;.&lt;/span&gt;&lt;span style=&#34;color: #000000&#34;&gt;size&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;


&lt;div class=&#34;highlight&#34; style=&#34;background: #f8f8f8&#34;&gt;&lt;pre style=&#34;line-height: 125%&#34;&gt;&lt;span&gt;&lt;/span&gt;&lt;span style=&#34;color: #8f5902; font-style: italic&#34;&gt;# compairing arrays&lt;/span&gt;
&lt;span style=&#34;color: #3465a4&#34;&gt;pp&lt;/span&gt; &lt;span style=&#34;color: #000000&#34;&gt;my_array&lt;/span&gt; &lt;span style=&#34;color: #ce5c00; font-weight: bold&#34;&gt;&amp;lt;=&amp;gt;&lt;/span&gt; &lt;span style=&#34;color: #000000&#34;&gt;my_array2&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;&lt;div class=&#34;highlight&#34; style=&#34;background: #f8f8f8&#34;&gt;&lt;pre style=&#34;line-height: 125%&#34;&gt;&lt;span&gt;&lt;/span&gt;&lt;span style=&#34;color: #8f5902; font-style: italic&#34;&gt;# each through the array&lt;/span&gt;
&lt;span style=&#34;color: #000000&#34;&gt;my_array&lt;/span&gt;&lt;span style=&#34;color: #ce5c00; font-weight: bold&#34;&gt;.&lt;/span&gt;&lt;span style=&#34;color: #000000&#34;&gt;each&lt;/span&gt; &lt;span style=&#34;color: #000000; font-weight: bold&#34;&gt;{&lt;/span&gt; &lt;span style=&#34;color: #ce5c00; font-weight: bold&#34;&gt;|&lt;/span&gt;&lt;span style=&#34;color: #000000&#34;&gt;e&lt;/span&gt;&lt;span style=&#34;color: #ce5c00; font-weight: bold&#34;&gt;|&lt;/span&gt; &lt;span style=&#34;color: #3465a4&#34;&gt;pp&lt;/span&gt; &lt;span style=&#34;color: #000000&#34;&gt;e&lt;/span&gt; &lt;span style=&#34;color: #000000; font-weight: bold&#34;&gt;}&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;

And there is alot more where that came from.&lt;/p&gt;

&lt;h3 id=&#34;references&#34;&gt;References&lt;/h3&gt;

&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;https://github.com/tbpgr/crystal_samples/tree/master/Array&#34;&gt;https://github.com/tbpgr/crystal_samples/tree/master/Array&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://crystal-lang.org/docs/syntax_and_semantics/literals/array.html&#34;&gt;https://crystal-lang.org/docs/syntax_and_semantics/literals/array.html&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://crystal-lang.org/docs/syntax_and_semantics/literals/tuple.html&#34;&gt;https://crystal-lang.org/docs/syntax_and_semantics/literals/tuple.html&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://crystal-lang.org/api/0.20.5/Tuple.html&#34;&gt;https://crystal-lang.org/api/0.20.5/Tuple.html&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
</description>
    </item>
    
    <item>
      <title>Crystal Tutorial The Basics - Loops</title>
      <link>https://mordsith.github.io/2017/crystal-tutorial-the-basics---loops/</link>
      <pubDate>Sun, 05 Feb 2017 12:26:02 +0100</pubDate>
      
      <guid>https://mordsith.github.io/2017/crystal-tutorial-the-basics---loops/</guid>
      <description>

&lt;p&gt;In computer programming Loops are very important so that you the developer don&amp;rsquo;t have to repeat yourself. The most usual loop in Crystal is the &lt;code&gt;while&lt;/code&gt; loop. while repeats through a block of code while the condition is true. It is important to remember that if you don&amp;rsquo;t modify the variable to &lt;code&gt;break&lt;/code&gt; out of the loop it will run
forever.&lt;/p&gt;

&lt;p&gt;This is what the &lt;code&gt;while&lt;/code&gt; loop looks like.&lt;/p&gt;

&lt;p&gt;code:
&lt;div class=&#34;highlight&#34; style=&#34;background: #f8f8f8&#34;&gt;&lt;pre style=&#34;line-height: 125%&#34;&gt;&lt;span&gt;&lt;/span&gt;&lt;span style=&#34;color: #204a87; font-weight: bold&#34;&gt;while&lt;/span&gt; &lt;span style=&#34;color: #000000&#34;&gt;some_condition&lt;/span&gt;
  &lt;span style=&#34;color: #000000&#34;&gt;do_this&lt;/span&gt;
&lt;span style=&#34;color: #204a87; font-weight: bold&#34;&gt;end&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;/p&gt;

&lt;div class=&#34;alert alert-warning&#34; role=&#34;alert&#34;&gt;
Problem: Make a simple while loop to increment count by 1, break after you reach 10.
&lt;/div&gt;

&lt;p&gt;code:
&lt;div class=&#34;highlight&#34; style=&#34;background: #f8f8f8&#34;&gt;&lt;pre style=&#34;line-height: 125%&#34;&gt;&lt;span&gt;&lt;/span&gt;&lt;span style=&#34;color: #000000&#34;&gt;count&lt;/span&gt; &lt;span style=&#34;color: #ce5c00; font-weight: bold&#34;&gt;=&lt;/span&gt; &lt;span style=&#34;color: #0000cf; font-weight: bold&#34;&gt;1&lt;/span&gt;

&lt;span style=&#34;color: #204a87; font-weight: bold&#34;&gt;while&lt;/span&gt; &lt;span style=&#34;color: #000000&#34;&gt;count&lt;/span&gt; &lt;span style=&#34;color: #ce5c00; font-weight: bold&#34;&gt;&amp;lt;&lt;/span&gt; &lt;span style=&#34;color: #0000cf; font-weight: bold&#34;&gt;11&lt;/span&gt;
  &lt;span style=&#34;color: #204a87&#34;&gt;puts&lt;/span&gt; &lt;span style=&#34;color: #4e9a06&#34;&gt;&amp;quot;count = #{&lt;/span&gt;&lt;span style=&#34;color: #000000&#34;&gt;count&lt;/span&gt;&lt;span style=&#34;color: #4e9a06&#34;&gt;} &amp;quot;&lt;/span&gt;
  &lt;span style=&#34;color: #000000&#34;&gt;count&lt;/span&gt; &lt;span style=&#34;color: #ce5c00; font-weight: bold&#34;&gt;+=&lt;/span&gt; &lt;span style=&#34;color: #0000cf; font-weight: bold&#34;&gt;1&lt;/span&gt;
&lt;span style=&#34;color: #204a87; font-weight: bold&#34;&gt;end&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;

output:
&lt;div class=&#34;highlight&#34; style=&#34;background: #f8f8f8&#34;&gt;&lt;pre style=&#34;line-height: 125%&#34;&gt;&lt;span&gt;&lt;/span&gt;count = 1
count = 2
count = 3
count = 4
count = 5
count = 6
count = 7
count = 8
count = 9
count = 10
&lt;/pre&gt;&lt;/div&gt;

Note that it&amp;rsquo;s &lt;code&gt;count &amp;lt; 11&lt;/code&gt; and not 10 because from 1 to 10 means repeating 9 times.&lt;/p&gt;

&lt;div class=&#34;alert alert-warning&#34; role=&#34;alert&#34;&gt;
Problem: Once again increment by 1 and when you reach the numbers 3 and 6 skip to next iteration.
&lt;/div&gt;

&lt;p&gt;code:
&lt;div class=&#34;highlight&#34; style=&#34;background: #f8f8f8&#34;&gt;&lt;pre style=&#34;line-height: 125%&#34;&gt;&lt;span&gt;&lt;/span&gt;&lt;span style=&#34;color: #000000&#34;&gt;a&lt;/span&gt; &lt;span style=&#34;color: #ce5c00; font-weight: bold&#34;&gt;=&lt;/span&gt; &lt;span style=&#34;color: #0000cf; font-weight: bold&#34;&gt;0&lt;/span&gt;
&lt;span style=&#34;color: #204a87; font-weight: bold&#34;&gt;while&lt;/span&gt; &lt;span style=&#34;color: #000000&#34;&gt;a&lt;/span&gt; &lt;span style=&#34;color: #ce5c00; font-weight: bold&#34;&gt;&amp;lt;&lt;/span&gt; &lt;span style=&#34;color: #0000cf; font-weight: bold&#34;&gt;10&lt;/span&gt;
  &lt;span style=&#34;color: #000000&#34;&gt;a&lt;/span&gt; &lt;span style=&#34;color: #ce5c00; font-weight: bold&#34;&gt;+=&lt;/span&gt; &lt;span style=&#34;color: #0000cf; font-weight: bold&#34;&gt;1&lt;/span&gt;
  &lt;span style=&#34;color: #204a87; font-weight: bold&#34;&gt;if&lt;/span&gt; &lt;span style=&#34;color: #000000&#34;&gt;a&lt;/span&gt; &lt;span style=&#34;color: #ce5c00; font-weight: bold&#34;&gt;==&lt;/span&gt; &lt;span style=&#34;color: #0000cf; font-weight: bold&#34;&gt;3&lt;/span&gt; &lt;span style=&#34;color: #ce5c00; font-weight: bold&#34;&gt;||&lt;/span&gt; &lt;span style=&#34;color: #000000&#34;&gt;a&lt;/span&gt; &lt;span style=&#34;color: #ce5c00; font-weight: bold&#34;&gt;==&lt;/span&gt; &lt;span style=&#34;color: #0000cf; font-weight: bold&#34;&gt;6&lt;/span&gt;
    &lt;span style=&#34;color: #204a87; font-weight: bold&#34;&gt;next&lt;/span&gt;
  &lt;span style=&#34;color: #204a87; font-weight: bold&#34;&gt;end&lt;/span&gt;
  &lt;span style=&#34;color: #204a87&#34;&gt;print&lt;/span&gt; &lt;span style=&#34;color: #000000&#34;&gt;a&lt;/span&gt;&lt;span style=&#34;color: #000000; font-weight: bold&#34;&gt;,&lt;/span&gt; &lt;span style=&#34;color: #4e9a06&#34;&gt;&amp;quot; &amp;quot;&lt;/span&gt;
&lt;span style=&#34;color: #204a87; font-weight: bold&#34;&gt;end&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;

&lt;div class=&#34;highlight&#34; style=&#34;background: #f8f8f8&#34;&gt;&lt;pre style=&#34;line-height: 125%&#34;&gt;&lt;span&gt;&lt;/span&gt;1 2 4 5 7 8 9 10
&lt;/pre&gt;&lt;/div&gt;

And as we can see the loop skipped 3 and 6&lt;/p&gt;

&lt;p&gt;The simplest way to &lt;code&gt;loop&lt;/code&gt; in Crystal is the Loop do, loop! Loop do is very similar to the &lt;code&gt;while&lt;/code&gt; loop, but in loop do we dont set a condition in the beginning.&lt;/p&gt;

&lt;p&gt;This is what &lt;code&gt;loop&lt;/code&gt; do looks like.&lt;/p&gt;

&lt;p&gt;code:
&lt;div class=&#34;highlight&#34; style=&#34;background: #f8f8f8&#34;&gt;&lt;pre style=&#34;line-height: 125%&#34;&gt;&lt;span&gt;&lt;/span&gt;&lt;span style=&#34;color: #204a87&#34;&gt;loop&lt;/span&gt; &lt;span style=&#34;color: #204a87; font-weight: bold&#34;&gt;do&lt;/span&gt;
  &lt;span style=&#34;color: #000000&#34;&gt;do_something&lt;/span&gt;
&lt;span style=&#34;color: #204a87; font-weight: bold&#34;&gt;end&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;/p&gt;

&lt;p&gt;The most important thing to remember with this loops is that it will continue forever until you give it a break condition.&lt;/p&gt;

&lt;div class=&#34;alert alert-warning&#34; role=&#34;alert&#34;&gt;
Problem: Do the same with loop do that you did with while. Count to 10 and end the loop.
&lt;/div&gt;

&lt;p&gt;code:
&lt;div class=&#34;highlight&#34; style=&#34;background: #f8f8f8&#34;&gt;&lt;pre style=&#34;line-height: 125%&#34;&gt;&lt;span&gt;&lt;/span&gt;&lt;span style=&#34;color: #204a87&#34;&gt;loop&lt;/span&gt; &lt;span style=&#34;color: #204a87; font-weight: bold&#34;&gt;do&lt;/span&gt;
  &lt;span style=&#34;color: #204a87&#34;&gt;puts&lt;/span&gt; &lt;span style=&#34;color: #4e9a06&#34;&gt;&amp;quot;count = #{&lt;/span&gt;&lt;span style=&#34;color: #000000&#34;&gt;count&lt;/span&gt;&lt;span style=&#34;color: #4e9a06&#34;&gt;}&amp;quot;&lt;/span&gt;
  &lt;span style=&#34;color: #000000&#34;&gt;count&lt;/span&gt;&lt;span style=&#34;color: #ce5c00; font-weight: bold&#34;&gt;+=&lt;/span&gt; &lt;span style=&#34;color: #0000cf; font-weight: bold&#34;&gt;1&lt;/span&gt;
  &lt;span style=&#34;color: #204a87; font-weight: bold&#34;&gt;if&lt;/span&gt; &lt;span style=&#34;color: #000000&#34;&gt;count&lt;/span&gt; &lt;span style=&#34;color: #ce5c00; font-weight: bold&#34;&gt;==&lt;/span&gt; &lt;span style=&#34;color: #0000cf; font-weight: bold&#34;&gt;11&lt;/span&gt;
    &lt;span style=&#34;color: #204a87; font-weight: bold&#34;&gt;break&lt;/span&gt;
  &lt;span style=&#34;color: #204a87; font-weight: bold&#34;&gt;end&lt;/span&gt;
&lt;span style=&#34;color: #204a87; font-weight: bold&#34;&gt;end&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;

output:
&lt;div class=&#34;highlight&#34; style=&#34;background: #f8f8f8&#34;&gt;&lt;pre style=&#34;line-height: 125%&#34;&gt;&lt;span&gt;&lt;/span&gt;count = 1
count = 2
count = 3
count = 4
count = 5
count = 6
count = 7
count = 8
count = 9
count = 10
&lt;/pre&gt;&lt;/div&gt;

Always remember to have an exit strategy unless you want it to &lt;code&gt;loop&lt;/code&gt; forever.&lt;/p&gt;

&lt;p&gt;The Until loop is pretty much the same as the while loop. The difference is that while loops while the condition is true and Until loops while the condition is false.&lt;/p&gt;

&lt;p&gt;This is what the &lt;code&gt;until&lt;/code&gt; loop looks like.&lt;/p&gt;

&lt;p&gt;code:
&lt;div class=&#34;highlight&#34; style=&#34;background: #f8f8f8&#34;&gt;&lt;pre style=&#34;line-height: 125%&#34;&gt;&lt;span&gt;&lt;/span&gt;&lt;span style=&#34;color: #204a87; font-weight: bold&#34;&gt;until&lt;/span&gt; &lt;span style=&#34;color: #ce5c00; font-weight: bold&#34;&gt;!&lt;/span&gt;&lt;span style=&#34;color: #000000&#34;&gt;some_condition&lt;/span&gt;
  &lt;span style=&#34;color: #000000&#34;&gt;do_this&lt;/span&gt;
&lt;span style=&#34;color: #204a87; font-weight: bold&#34;&gt;end&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;/p&gt;

&lt;p&gt;And yet again we will loop 10 times but decrement instead of increment.&lt;/p&gt;

&lt;p&gt;code:
&lt;div class=&#34;highlight&#34; style=&#34;background: #f8f8f8&#34;&gt;&lt;pre style=&#34;line-height: 125%&#34;&gt;&lt;span&gt;&lt;/span&gt;&lt;span style=&#34;color: #000000&#34;&gt;x&lt;/span&gt; &lt;span style=&#34;color: #ce5c00; font-weight: bold&#34;&gt;=&lt;/span&gt; &lt;span style=&#34;color: #0000cf; font-weight: bold&#34;&gt;10&lt;/span&gt;
&lt;span style=&#34;color: #204a87; font-weight: bold&#34;&gt;until&lt;/span&gt; &lt;span style=&#34;color: #000000&#34;&gt;x&lt;/span&gt; &lt;span style=&#34;color: #ce5c00; font-weight: bold&#34;&gt;&amp;lt;&lt;/span&gt; &lt;span style=&#34;color: #0000cf; font-weight: bold&#34;&gt;1&lt;/span&gt;
  &lt;span style=&#34;color: #204a87&#34;&gt;puts&lt;/span&gt; &lt;span style=&#34;color: #000000&#34;&gt;x&lt;/span&gt;
  &lt;span style=&#34;color: #000000&#34;&gt;x&lt;/span&gt; &lt;span style=&#34;color: #ce5c00; font-weight: bold&#34;&gt;-=&lt;/span&gt; &lt;span style=&#34;color: #0000cf; font-weight: bold&#34;&gt;1&lt;/span&gt;
&lt;span style=&#34;color: #204a87; font-weight: bold&#34;&gt;end&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;

code:
&lt;div class=&#34;highlight&#34; style=&#34;background: #f8f8f8&#34;&gt;&lt;pre style=&#34;line-height: 125%&#34;&gt;&lt;span&gt;&lt;/span&gt;10
9
8
7
6
5
4
3
2
1
&lt;/pre&gt;&lt;/div&gt;

And thats the until loop.&lt;/p&gt;

&lt;div class=&#34;alert alert-info&#34; role=&#34;alert&#34;&gt;
Tip! Not sure if these are official Crystal loops but they seem to work.
&lt;/div&gt;

&lt;p&gt;code:
&lt;div class=&#34;highlight&#34; style=&#34;background: #f8f8f8&#34;&gt;&lt;pre style=&#34;line-height: 125%&#34;&gt;&lt;span&gt;&lt;/span&gt;&lt;span style=&#34;color: #0000cf; font-weight: bold&#34;&gt;1&lt;/span&gt;&lt;span style=&#34;color: #ce5c00; font-weight: bold&#34;&gt;.&lt;/span&gt;&lt;span style=&#34;color: #000000&#34;&gt;upto&lt;/span&gt;&lt;span style=&#34;color: #000000; font-weight: bold&#34;&gt;(&lt;/span&gt;&lt;span style=&#34;color: #0000cf; font-weight: bold&#34;&gt;10&lt;/span&gt;&lt;span style=&#34;color: #000000; font-weight: bold&#34;&gt;)&lt;/span&gt; &lt;span style=&#34;color: #000000; font-weight: bold&#34;&gt;{&lt;/span&gt;&lt;span style=&#34;color: #ce5c00; font-weight: bold&#34;&gt;|&lt;/span&gt;&lt;span style=&#34;color: #000000&#34;&gt;n&lt;/span&gt;&lt;span style=&#34;color: #ce5c00; font-weight: bold&#34;&gt;|&lt;/span&gt; &lt;span style=&#34;color: #204a87&#34;&gt;puts&lt;/span&gt; &lt;span style=&#34;color: #000000&#34;&gt;n&lt;/span&gt;&lt;span style=&#34;color: #000000; font-weight: bold&#34;&gt;}&lt;/span&gt;
&lt;span style=&#34;color: #0000cf; font-weight: bold&#34;&gt;10&lt;/span&gt;&lt;span style=&#34;color: #ce5c00; font-weight: bold&#34;&gt;.&lt;/span&gt;&lt;span style=&#34;color: #000000&#34;&gt;downto&lt;/span&gt;&lt;span style=&#34;color: #000000; font-weight: bold&#34;&gt;(&lt;/span&gt;&lt;span style=&#34;color: #0000cf; font-weight: bold&#34;&gt;1&lt;/span&gt;&lt;span style=&#34;color: #000000; font-weight: bold&#34;&gt;)&lt;/span&gt; &lt;span style=&#34;color: #000000; font-weight: bold&#34;&gt;{&lt;/span&gt;&lt;span style=&#34;color: #ce5c00; font-weight: bold&#34;&gt;|&lt;/span&gt;&lt;span style=&#34;color: #000000&#34;&gt;n&lt;/span&gt;&lt;span style=&#34;color: #ce5c00; font-weight: bold&#34;&gt;|&lt;/span&gt; &lt;span style=&#34;color: #204a87&#34;&gt;puts&lt;/span&gt; &lt;span style=&#34;color: #000000&#34;&gt;n&lt;/span&gt;&lt;span style=&#34;color: #000000; font-weight: bold&#34;&gt;}&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;/p&gt;

&lt;h2 id=&#34;summary-of-loops&#34;&gt;Summary of loops&lt;/h2&gt;

&lt;p&gt;code:
&lt;div class=&#34;highlight&#34; style=&#34;background: #f8f8f8&#34;&gt;&lt;pre style=&#34;line-height: 125%&#34;&gt;&lt;span&gt;&lt;/span&gt;&lt;span style=&#34;color: #8f5902; font-style: italic&#34;&gt;# The while loop&lt;/span&gt;

&lt;span style=&#34;color: #204a87; font-weight: bold&#34;&gt;while&lt;/span&gt; &lt;span style=&#34;color: #000000&#34;&gt;some_condition&lt;/span&gt;
  &lt;span style=&#34;color: #000000&#34;&gt;do_this&lt;/span&gt;
&lt;span style=&#34;color: #204a87; font-weight: bold&#34;&gt;end&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;

&lt;div class=&#34;highlight&#34; style=&#34;background: #f8f8f8&#34;&gt;&lt;pre style=&#34;line-height: 125%&#34;&gt;&lt;span&gt;&lt;/span&gt;&lt;span style=&#34;color: #8f5902; font-style: italic&#34;&gt;# The next iteration&lt;/span&gt;

&lt;span style=&#34;color: #204a87; font-weight: bold&#34;&gt;while&lt;/span&gt; &lt;span style=&#34;color: #000000&#34;&gt;some_condition&lt;/span&gt;
  &lt;span style=&#34;color: #000000&#34;&gt;do_something&lt;/span&gt;
  &lt;span style=&#34;color: #204a87; font-weight: bold&#34;&gt;if&lt;/span&gt; &lt;span style=&#34;color: #000000&#34;&gt;some_condition&lt;/span&gt;
    &lt;span style=&#34;color: #204a87; font-weight: bold&#34;&gt;next&lt;/span&gt;
  &lt;span style=&#34;color: #204a87; font-weight: bold&#34;&gt;end&lt;/span&gt;
  &lt;span style=&#34;color: #000000&#34;&gt;do_something&lt;/span&gt;
&lt;span style=&#34;color: #204a87; font-weight: bold&#34;&gt;end&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;

&lt;div class=&#34;highlight&#34; style=&#34;background: #f8f8f8&#34;&gt;&lt;pre style=&#34;line-height: 125%&#34;&gt;&lt;span&gt;&lt;/span&gt;&lt;span style=&#34;color: #8f5902; font-style: italic&#34;&gt;# The loop do&lt;/span&gt;

&lt;span style=&#34;color: #204a87&#34;&gt;loop&lt;/span&gt; &lt;span style=&#34;color: #204a87; font-weight: bold&#34;&gt;do&lt;/span&gt;
  &lt;span style=&#34;color: #000000&#34;&gt;do_something&lt;/span&gt;
&lt;span style=&#34;color: #204a87; font-weight: bold&#34;&gt;end&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;

&lt;div class=&#34;highlight&#34; style=&#34;background: #f8f8f8&#34;&gt;&lt;pre style=&#34;line-height: 125%&#34;&gt;&lt;span&gt;&lt;/span&gt;&lt;span style=&#34;color: #8f5902; font-style: italic&#34;&gt;# The until loop.&lt;/span&gt;

&lt;span style=&#34;color: #204a87; font-weight: bold&#34;&gt;until&lt;/span&gt; &lt;span style=&#34;color: #ce5c00; font-weight: bold&#34;&gt;!&lt;/span&gt;&lt;span style=&#34;color: #000000&#34;&gt;some_condition&lt;/span&gt;
  &lt;span style=&#34;color: #000000&#34;&gt;do_this&lt;/span&gt;
&lt;span style=&#34;color: #204a87; font-weight: bold&#34;&gt;end&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;/p&gt;

&lt;h3 id=&#34;references&#34;&gt;References&lt;/h3&gt;

&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;https://crystal-lang.org/docs/syntax_and_semantics/while.html&#34;&gt;https://crystal-lang.org/docs/syntax_and_semantics/while.html&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://crystal-lang.org/docs/syntax_and_semantics/next.html&#34;&gt;https://crystal-lang.org/docs/syntax_and_semantics/next.html&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://crystal-lang.org/docs/syntax_and_semantics/until.html&#34;&gt;https://crystal-lang.org/docs/syntax_and_semantics/until.html&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
</description>
    </item>
    
    <item>
      <title>Crystal Tutorial The Basics - Case</title>
      <link>https://mordsith.github.io/2017/crystal-tutorial-the-basics---case/</link>
      <pubDate>Fri, 03 Feb 2017 16:42:31 +0100</pubDate>
      
      <guid>https://mordsith.github.io/2017/crystal-tutorial-the-basics---case/</guid>
      <description>

&lt;p&gt;So in the last tutorial we discussed &lt;code&gt;if&lt;/code&gt;&amp;rsquo;s. This time im going to talk about the &lt;code&gt;case&lt;/code&gt; statement. What is &lt;code&gt;case&lt;/code&gt; and why should i care? Usually if you have more than a few conditionals &lt;code&gt;case&lt;/code&gt; would be preferred. For the programmer &lt;code&gt;case&lt;/code&gt; makes it alot easier to read and debug. You could think of it abit like pattern matching.&lt;/p&gt;

&lt;p&gt;code:
&lt;div class=&#34;highlight&#34; style=&#34;background: #f8f8f8&#34;&gt;&lt;pre style=&#34;line-height: 125%&#34;&gt;&lt;span&gt;&lt;/span&gt;&lt;span style=&#34;color: #8f5902; font-style: italic&#34;&gt;# what case looks like&lt;/span&gt;

&lt;span style=&#34;color: #204a87; font-weight: bold&#34;&gt;case&lt;/span&gt; &lt;span style=&#34;color: #000000&#34;&gt;expression&lt;/span&gt;
&lt;span style=&#34;color: #204a87; font-weight: bold&#34;&gt;when&lt;/span&gt; &lt;span style=&#34;color: #000000&#34;&gt;expression1&lt;/span&gt;&lt;span style=&#34;color: #000000; font-weight: bold&#34;&gt;,&lt;/span&gt; &lt;span style=&#34;color: #000000&#34;&gt;expression2&lt;/span&gt;
   &lt;span style=&#34;color: #000000&#34;&gt;statement&lt;/span&gt;
&lt;span style=&#34;color: #204a87; font-weight: bold&#34;&gt;when&lt;/span&gt; &lt;span style=&#34;color: #000000&#34;&gt;expression3&lt;/span&gt;&lt;span style=&#34;color: #000000; font-weight: bold&#34;&gt;,&lt;/span&gt; &lt;span style=&#34;color: #000000&#34;&gt;expression4&lt;/span&gt;
   &lt;span style=&#34;color: #000000&#34;&gt;statement2&lt;/span&gt;
&lt;span style=&#34;color: #204a87; font-weight: bold&#34;&gt;else&lt;/span&gt;
   &lt;span style=&#34;color: #000000&#34;&gt;statement3&lt;/span&gt;
&lt;span style=&#34;color: #204a87; font-weight: bold&#34;&gt;end&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;/p&gt;

&lt;p&gt;This is what a &lt;code&gt;case&lt;/code&gt; control expression looks like. It leads to better readability.&lt;/p&gt;

&lt;div class=&#34;alert alert-warning&#34; role=&#34;alert&#34;&gt;
Problem: create a simple case, if the variable is met run something.
&lt;/div&gt;

&lt;p&gt;code:
&lt;div class=&#34;highlight&#34; style=&#34;background: #f8f8f8&#34;&gt;&lt;pre style=&#34;line-height: 125%&#34;&gt;&lt;span&gt;&lt;/span&gt;&lt;span style=&#34;color: #000000&#34;&gt;x&lt;/span&gt; &lt;span style=&#34;color: #ce5c00; font-weight: bold&#34;&gt;=&lt;/span&gt; &lt;span style=&#34;color: #0000cf; font-weight: bold&#34;&gt;1&lt;/span&gt;

&lt;span style=&#34;color: #204a87; font-weight: bold&#34;&gt;case&lt;/span&gt; &lt;span style=&#34;color: #000000&#34;&gt;x&lt;/span&gt;
&lt;span style=&#34;color: #204a87; font-weight: bold&#34;&gt;when&lt;/span&gt; &lt;span style=&#34;color: #0000cf; font-weight: bold&#34;&gt;1&lt;/span&gt;
  &lt;span style=&#34;color: #204a87&#34;&gt;puts&lt;/span&gt; &lt;span style=&#34;color: #4e9a06&#34;&gt;&amp;quot;1&amp;quot;&lt;/span&gt;
&lt;span style=&#34;color: #204a87; font-weight: bold&#34;&gt;when&lt;/span&gt; &lt;span style=&#34;color: #0000cf; font-weight: bold&#34;&gt;2&lt;/span&gt;
  &lt;span style=&#34;color: #204a87&#34;&gt;puts&lt;/span&gt; &lt;span style=&#34;color: #4e9a06&#34;&gt;&amp;quot;2&amp;quot;&lt;/span&gt;
&lt;span style=&#34;color: #204a87; font-weight: bold&#34;&gt;else&lt;/span&gt;
  &lt;span style=&#34;color: #204a87&#34;&gt;puts&lt;/span&gt; &lt;span style=&#34;color: #4e9a06&#34;&gt;&amp;quot;other&amp;quot;&lt;/span&gt;
&lt;span style=&#34;color: #204a87; font-weight: bold&#34;&gt;end&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;

output:
&lt;div class=&#34;highlight&#34; style=&#34;background: #f8f8f8&#34;&gt;&lt;pre style=&#34;line-height: 125%&#34;&gt;&lt;span&gt;&lt;/span&gt;2
&lt;/pre&gt;&lt;/div&gt;
&lt;/p&gt;

&lt;p&gt;This is a very simple case condition, when a condition is met the output is run. If it fails run else. And now lets say you have many options you want to do the same condition.&lt;/p&gt;

&lt;p&gt;code:
&lt;div class=&#34;highlight&#34; style=&#34;background: #f8f8f8&#34;&gt;&lt;pre style=&#34;line-height: 125%&#34;&gt;&lt;span&gt;&lt;/span&gt;&lt;span style=&#34;color: #000000&#34;&gt;num&lt;/span&gt; &lt;span style=&#34;color: #ce5c00; font-weight: bold&#34;&gt;=&lt;/span&gt; &lt;span style=&#34;color: #0000cf; font-weight: bold&#34;&gt;22&lt;/span&gt;

&lt;span style=&#34;color: #204a87; font-weight: bold&#34;&gt;case&lt;/span&gt; &lt;span style=&#34;color: #000000&#34;&gt;num&lt;/span&gt;
&lt;span style=&#34;color: #204a87; font-weight: bold&#34;&gt;when&lt;/span&gt; &lt;span style=&#34;color: #0000cf; font-weight: bold&#34;&gt;32&lt;/span&gt;&lt;span style=&#34;color: #000000; font-weight: bold&#34;&gt;,&lt;/span&gt; &lt;span style=&#34;color: #0000cf; font-weight: bold&#34;&gt;11&lt;/span&gt;&lt;span style=&#34;color: #000000; font-weight: bold&#34;&gt;,&lt;/span&gt; &lt;span style=&#34;color: #0000cf; font-weight: bold&#34;&gt;43&lt;/span&gt;&lt;span style=&#34;color: #000000; font-weight: bold&#34;&gt;,&lt;/span&gt; &lt;span style=&#34;color: #0000cf; font-weight: bold&#34;&gt;22&lt;/span&gt;
  &lt;span style=&#34;color: #204a87&#34;&gt;puts&lt;/span&gt; &lt;span style=&#34;color: #000000&#34;&gt;num&lt;/span&gt;
&lt;span style=&#34;color: #204a87; font-weight: bold&#34;&gt;when&lt;/span&gt; &lt;span style=&#34;color: #4e9a06&#34;&gt;&amp;quot;hello&amp;quot;&lt;/span&gt;
  &lt;span style=&#34;color: #204a87&#34;&gt;puts&lt;/span&gt; &lt;span style=&#34;color: #4e9a06&#34;&gt;&amp;quot;well hello there&amp;quot;&lt;/span&gt;
&lt;span style=&#34;color: #204a87; font-weight: bold&#34;&gt;end&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;/p&gt;

&lt;p&gt;And then we can invoke methods in cases.&lt;/p&gt;

&lt;p&gt;code:
&lt;div class=&#34;highlight&#34; style=&#34;background: #f8f8f8&#34;&gt;&lt;pre style=&#34;line-height: 125%&#34;&gt;&lt;span&gt;&lt;/span&gt;&lt;span style=&#34;color: #000000&#34;&gt;num&lt;/span&gt; &lt;span style=&#34;color: #ce5c00; font-weight: bold&#34;&gt;=&lt;/span&gt; &lt;span style=&#34;color: #0000cf; font-weight: bold&#34;&gt;11&lt;/span&gt;

&lt;span style=&#34;color: #204a87; font-weight: bold&#34;&gt;case&lt;/span&gt; &lt;span style=&#34;color: #000000&#34;&gt;num&lt;/span&gt;
&lt;span style=&#34;color: #204a87; font-weight: bold&#34;&gt;when&lt;/span&gt; &lt;span style=&#34;color: #ce5c00; font-weight: bold&#34;&gt;.&lt;/span&gt;&lt;span style=&#34;color: #000000&#34;&gt;even?&lt;/span&gt;
  &lt;span style=&#34;color: #204a87&#34;&gt;puts&lt;/span&gt; &lt;span style=&#34;color: #4e9a06&#34;&gt;&amp;quot;even&amp;quot;&lt;/span&gt;
&lt;span style=&#34;color: #204a87; font-weight: bold&#34;&gt;when&lt;/span&gt; &lt;span style=&#34;color: #ce5c00; font-weight: bold&#34;&gt;.&lt;/span&gt;&lt;span style=&#34;color: #000000&#34;&gt;odd?&lt;/span&gt;
  &lt;span style=&#34;color: #204a87&#34;&gt;puts&lt;/span&gt; &lt;span style=&#34;color: #4e9a06&#34;&gt;&amp;quot;odd&amp;quot;&lt;/span&gt;
&lt;span style=&#34;color: #204a87; font-weight: bold&#34;&gt;end&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;/p&gt;

&lt;div class=&#34;alert alert-warning&#34; role=&#34;alert&#34;&gt;
Problem: Lets say that you need to have a case condition between 1 and 100, instead of writing every single number we can do this.
&lt;/div&gt;

&lt;p&gt;code:
&lt;div class=&#34;highlight&#34; style=&#34;background: #f8f8f8&#34;&gt;&lt;pre style=&#34;line-height: 125%&#34;&gt;&lt;span&gt;&lt;/span&gt;&lt;span style=&#34;color: #204a87; font-weight: bold&#34;&gt;case&lt;/span&gt; &lt;span style=&#34;color: #0000cf; font-weight: bold&#34;&gt;5&lt;/span&gt;
&lt;span style=&#34;color: #204a87; font-weight: bold&#34;&gt;when&lt;/span&gt; &lt;span style=&#34;color: #0000cf; font-weight: bold&#34;&gt;1&lt;/span&gt;&lt;span style=&#34;color: #ce5c00; font-weight: bold&#34;&gt;..&lt;/span&gt;&lt;span style=&#34;color: #0000cf; font-weight: bold&#34;&gt;100&lt;/span&gt;
  &lt;span style=&#34;color: #204a87&#34;&gt;puts&lt;/span&gt; &lt;span style=&#34;color: #4e9a06&#34;&gt;&amp;quot;The case statement in within range!&amp;quot;&lt;/span&gt;
&lt;span style=&#34;color: #204a87; font-weight: bold&#34;&gt;end&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;/p&gt;

&lt;p&gt;And then we can check the variable type with &lt;code&gt;case&lt;/code&gt;.&lt;/p&gt;

&lt;p&gt;code:
&lt;div class=&#34;highlight&#34; style=&#34;background: #f8f8f8&#34;&gt;&lt;pre style=&#34;line-height: 125%&#34;&gt;&lt;span&gt;&lt;/span&gt;&lt;span style=&#34;color: #000000&#34;&gt;var&lt;/span&gt; &lt;span style=&#34;color: #ce5c00; font-weight: bold&#34;&gt;=&lt;/span&gt; &lt;span style=&#34;color: #0000cf; font-weight: bold&#34;&gt;10&lt;/span&gt;

&lt;span style=&#34;color: #204a87; font-weight: bold&#34;&gt;case&lt;/span&gt; &lt;span style=&#34;color: #000000&#34;&gt;var&lt;/span&gt;
&lt;span style=&#34;color: #204a87; font-weight: bold&#34;&gt;when&lt;/span&gt; &lt;span style=&#34;color: #204a87&#34;&gt;String&lt;/span&gt;
  &lt;span style=&#34;color: #204a87&#34;&gt;puts&lt;/span&gt; &lt;span style=&#34;color: #4e9a06&#34;&gt;&amp;quot;String&amp;quot;&lt;/span&gt;
&lt;span style=&#34;color: #204a87; font-weight: bold&#34;&gt;when&lt;/span&gt; &lt;span style=&#34;color: #204a87&#34;&gt;Int32&lt;/span&gt;
  &lt;span style=&#34;color: #204a87&#34;&gt;puts&lt;/span&gt; &lt;span style=&#34;color: #4e9a06&#34;&gt;&amp;quot;32 bit integer&amp;quot;&lt;/span&gt;
&lt;span style=&#34;color: #204a87; font-weight: bold&#34;&gt;else&lt;/span&gt;
  &lt;span style=&#34;color: #204a87&#34;&gt;puts&lt;/span&gt; &lt;span style=&#34;color: #4e9a06&#34;&gt;&amp;quot;Something else&amp;quot;&lt;/span&gt;
&lt;span style=&#34;color: #204a87; font-weight: bold&#34;&gt;end&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;/p&gt;

&lt;div class=&#34;alert alert-warning&#34; role=&#34;alert&#34;&gt;
Problem: Now we want to fint the Capital of the Country we specify.
&lt;/div&gt;

&lt;p&gt;code:
&lt;div class=&#34;highlight&#34; style=&#34;background: #f8f8f8&#34;&gt;&lt;pre style=&#34;line-height: 125%&#34;&gt;&lt;span&gt;&lt;/span&gt;&lt;span style=&#34;color: #8f5902; font-style: italic&#34;&gt;# Find the Capital of the country&lt;/span&gt;
&lt;span style=&#34;color: #000000&#34;&gt;country&lt;/span&gt; &lt;span style=&#34;color: #ce5c00; font-weight: bold&#34;&gt;=&lt;/span&gt; &lt;span style=&#34;color: #4e9a06&#34;&gt;&amp;quot;Germany&amp;quot;&lt;/span&gt;

&lt;span style=&#34;color: #000000&#34;&gt;capital&lt;/span&gt; &lt;span style=&#34;color: #ce5c00; font-weight: bold&#34;&gt;=&lt;/span&gt; &lt;span style=&#34;color: #204a87; font-weight: bold&#34;&gt;case&lt;/span&gt; &lt;span style=&#34;color: #000000&#34;&gt;country&lt;/span&gt;
  &lt;span style=&#34;color: #204a87; font-weight: bold&#34;&gt;when&lt;/span&gt; &lt;span style=&#34;color: #4e9a06&#34;&gt;&amp;quot;China&amp;quot;&lt;/span&gt; &lt;span style=&#34;color: #204a87; font-weight: bold&#34;&gt;then&lt;/span&gt; &lt;span style=&#34;color: #4e9a06&#34;&gt;&amp;quot;Beijing&amp;quot;&lt;/span&gt;
  &lt;span style=&#34;color: #204a87; font-weight: bold&#34;&gt;when&lt;/span&gt; &lt;span style=&#34;color: #4e9a06&#34;&gt;&amp;quot;India&amp;quot;&lt;/span&gt; &lt;span style=&#34;color: #204a87; font-weight: bold&#34;&gt;then&lt;/span&gt; &lt;span style=&#34;color: #4e9a06&#34;&gt;&amp;quot;New Delhi&amp;quot;&lt;/span&gt;
  &lt;span style=&#34;color: #204a87; font-weight: bold&#34;&gt;when&lt;/span&gt; &lt;span style=&#34;color: #4e9a06&#34;&gt;&amp;quot;Japan&amp;quot;&lt;/span&gt; &lt;span style=&#34;color: #204a87; font-weight: bold&#34;&gt;then&lt;/span&gt; &lt;span style=&#34;color: #4e9a06&#34;&gt;&amp;quot;Tokyo&amp;quot;&lt;/span&gt;
  &lt;span style=&#34;color: #204a87; font-weight: bold&#34;&gt;when&lt;/span&gt; &lt;span style=&#34;color: #4e9a06&#34;&gt;&amp;quot;Phillipines&amp;quot;&lt;/span&gt; &lt;span style=&#34;color: #204a87; font-weight: bold&#34;&gt;then&lt;/span&gt; &lt;span style=&#34;color: #4e9a06&#34;&gt;&amp;quot;Manila&amp;quot;&lt;/span&gt;
  &lt;span style=&#34;color: #204a87; font-weight: bold&#34;&gt;when&lt;/span&gt; &lt;span style=&#34;color: #4e9a06&#34;&gt;&amp;quot;Germany&amp;quot;&lt;/span&gt; &lt;span style=&#34;color: #204a87; font-weight: bold&#34;&gt;then&lt;/span&gt; &lt;span style=&#34;color: #4e9a06&#34;&gt;&amp;quot;Berlin&amp;quot;&lt;/span&gt;
  &lt;span style=&#34;color: #204a87; font-weight: bold&#34;&gt;when&lt;/span&gt; &lt;span style=&#34;color: #4e9a06&#34;&gt;&amp;quot;France&amp;quot;&lt;/span&gt; &lt;span style=&#34;color: #204a87; font-weight: bold&#34;&gt;then&lt;/span&gt; &lt;span style=&#34;color: #4e9a06&#34;&gt;&amp;quot;Paris&amp;quot;&lt;/span&gt;
  &lt;span style=&#34;color: #204a87; font-weight: bold&#34;&gt;when&lt;/span&gt; &lt;span style=&#34;color: #4e9a06&#34;&gt;&amp;quot;Sweden&amp;quot;&lt;/span&gt; &lt;span style=&#34;color: #204a87; font-weight: bold&#34;&gt;then&lt;/span&gt; &lt;span style=&#34;color: #4e9a06&#34;&gt;&amp;quot;Stockholm&amp;quot;&lt;/span&gt;
  &lt;span style=&#34;color: #204a87; font-weight: bold&#34;&gt;when&lt;/span&gt; &lt;span style=&#34;color: #4e9a06&#34;&gt;&amp;quot;Russia&amp;quot;&lt;/span&gt; &lt;span style=&#34;color: #204a87; font-weight: bold&#34;&gt;then&lt;/span&gt; &lt;span style=&#34;color: #4e9a06&#34;&gt;&amp;quot;Moscow&amp;quot;&lt;/span&gt;
  &lt;span style=&#34;color: #204a87; font-weight: bold&#34;&gt;when&lt;/span&gt; &lt;span style=&#34;color: #4e9a06&#34;&gt;&amp;quot;Egypt&amp;quot;&lt;/span&gt; &lt;span style=&#34;color: #204a87; font-weight: bold&#34;&gt;then&lt;/span&gt; &lt;span style=&#34;color: #4e9a06&#34;&gt;&amp;quot;Cairo&amp;quot;&lt;/span&gt;
  &lt;span style=&#34;color: #204a87; font-weight: bold&#34;&gt;when&lt;/span&gt; &lt;span style=&#34;color: #4e9a06&#34;&gt;&amp;quot;Spain&amp;quot;&lt;/span&gt; &lt;span style=&#34;color: #204a87; font-weight: bold&#34;&gt;then&lt;/span&gt; &lt;span style=&#34;color: #4e9a06&#34;&gt;&amp;quot;Madrid&amp;quot;&lt;/span&gt;
&lt;span style=&#34;color: #204a87; font-weight: bold&#34;&gt;else&lt;/span&gt; &lt;span style=&#34;color: #4e9a06&#34;&gt;&amp;quot;Unknown&amp;quot;&lt;/span&gt;
&lt;span style=&#34;color: #204a87; font-weight: bold&#34;&gt;end&lt;/span&gt;

&lt;span style=&#34;color: #204a87&#34;&gt;puts&lt;/span&gt; &lt;span style=&#34;color: #4e9a06&#34;&gt;&amp;quot;The capital of &amp;quot;&lt;/span&gt; &lt;span style=&#34;color: #ce5c00; font-weight: bold&#34;&gt;+&lt;/span&gt; &lt;span style=&#34;color: #000000&#34;&gt;country&lt;/span&gt;  &lt;span style=&#34;color: #ce5c00; font-weight: bold&#34;&gt;+&lt;/span&gt; &lt;span style=&#34;color: #4e9a06&#34;&gt;&amp;quot; is &amp;quot;&lt;/span&gt;  &lt;span style=&#34;color: #ce5c00; font-weight: bold&#34;&gt;+&lt;/span&gt; &lt;span style=&#34;color: #000000&#34;&gt;capital&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;

output:
&lt;div class=&#34;highlight&#34; style=&#34;background: #f8f8f8&#34;&gt;&lt;pre style=&#34;line-height: 125%&#34;&gt;&lt;span&gt;&lt;/span&gt;The capital of Germany is Berlin
&lt;/pre&gt;&lt;/div&gt;
&lt;/p&gt;

&lt;p&gt;And there is a little more of a real world use of case when you have alot of things to check. You could do it with if and elsif but it would not be recommended.&lt;/p&gt;

&lt;h2 id=&#34;summary&#34;&gt;Summary&lt;/h2&gt;

&lt;p&gt;code:
&lt;div class=&#34;highlight&#34; style=&#34;background: #f8f8f8&#34;&gt;&lt;pre style=&#34;line-height: 125%&#34;&gt;&lt;span&gt;&lt;/span&gt;&lt;span style=&#34;color: #8f5902; font-style: italic&#34;&gt;# what case looks like&lt;/span&gt;

&lt;span style=&#34;color: #204a87; font-weight: bold&#34;&gt;case&lt;/span&gt; &lt;span style=&#34;color: #000000&#34;&gt;expression&lt;/span&gt;
&lt;span style=&#34;color: #204a87; font-weight: bold&#34;&gt;when&lt;/span&gt; &lt;span style=&#34;color: #000000&#34;&gt;expression1&lt;/span&gt;&lt;span style=&#34;color: #000000; font-weight: bold&#34;&gt;,&lt;/span&gt; &lt;span style=&#34;color: #000000&#34;&gt;expression2&lt;/span&gt;
   &lt;span style=&#34;color: #000000&#34;&gt;statement&lt;/span&gt;
&lt;span style=&#34;color: #204a87; font-weight: bold&#34;&gt;when&lt;/span&gt; &lt;span style=&#34;color: #000000&#34;&gt;expression3&lt;/span&gt;&lt;span style=&#34;color: #000000; font-weight: bold&#34;&gt;,&lt;/span&gt; &lt;span style=&#34;color: #000000&#34;&gt;expression4&lt;/span&gt;
   &lt;span style=&#34;color: #000000&#34;&gt;statement2&lt;/span&gt;
&lt;span style=&#34;color: #204a87; font-weight: bold&#34;&gt;else&lt;/span&gt;
   &lt;span style=&#34;color: #000000&#34;&gt;statement3&lt;/span&gt;
&lt;span style=&#34;color: #204a87; font-weight: bold&#34;&gt;end&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;

code:
&lt;div class=&#34;highlight&#34; style=&#34;background: #f8f8f8&#34;&gt;&lt;pre style=&#34;line-height: 125%&#34;&gt;&lt;span&gt;&lt;/span&gt;&lt;span style=&#34;color: #8f5902; font-style: italic&#34;&gt;# many checks&lt;/span&gt;

&lt;span style=&#34;color: #204a87; font-weight: bold&#34;&gt;case&lt;/span&gt; &lt;span style=&#34;color: #000000&#34;&gt;num&lt;/span&gt;
&lt;span style=&#34;color: #204a87; font-weight: bold&#34;&gt;when&lt;/span&gt; &lt;span style=&#34;color: #0000cf; font-weight: bold&#34;&gt;32&lt;/span&gt;&lt;span style=&#34;color: #000000; font-weight: bold&#34;&gt;,&lt;/span&gt; &lt;span style=&#34;color: #0000cf; font-weight: bold&#34;&gt;11&lt;/span&gt;&lt;span style=&#34;color: #000000; font-weight: bold&#34;&gt;,&lt;/span&gt; &lt;span style=&#34;color: #0000cf; font-weight: bold&#34;&gt;43&lt;/span&gt;&lt;span style=&#34;color: #000000; font-weight: bold&#34;&gt;,&lt;/span&gt; &lt;span style=&#34;color: #0000cf; font-weight: bold&#34;&gt;22&lt;/span&gt;
  &lt;span style=&#34;color: #000000&#34;&gt;do_something&lt;/span&gt;
&lt;span style=&#34;color: #204a87; font-weight: bold&#34;&gt;when&lt;/span&gt; &lt;span style=&#34;color: #4e9a06&#34;&gt;&amp;quot;string&amp;quot;&lt;/span&gt;
  &lt;span style=&#34;color: #000000&#34;&gt;do_something&lt;/span&gt;
&lt;span style=&#34;color: #204a87; font-weight: bold&#34;&gt;end&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;

code:
&lt;div class=&#34;highlight&#34; style=&#34;background: #f8f8f8&#34;&gt;&lt;pre style=&#34;line-height: 125%&#34;&gt;&lt;span&gt;&lt;/span&gt;&lt;span style=&#34;color: #8f5902; font-style: italic&#34;&gt;# checking variable type&lt;/span&gt;

&lt;span style=&#34;color: #204a87; font-weight: bold&#34;&gt;case&lt;/span&gt; &lt;span style=&#34;color: #000000&#34;&gt;var&lt;/span&gt;
&lt;span style=&#34;color: #204a87; font-weight: bold&#34;&gt;when&lt;/span&gt; &lt;span style=&#34;color: #204a87&#34;&gt;String&lt;/span&gt;
  &lt;span style=&#34;color: #000000&#34;&gt;do_something&lt;/span&gt;
&lt;span style=&#34;color: #204a87; font-weight: bold&#34;&gt;when&lt;/span&gt; &lt;span style=&#34;color: #204a87&#34;&gt;Int32&lt;/span&gt;
  &lt;span style=&#34;color: #000000&#34;&gt;do_something&lt;/span&gt;
&lt;span style=&#34;color: #204a87; font-weight: bold&#34;&gt;else&lt;/span&gt;
  &lt;span style=&#34;color: #000000&#34;&gt;do_something_else&lt;/span&gt;
&lt;span style=&#34;color: #204a87; font-weight: bold&#34;&gt;end&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;

code:
&lt;div class=&#34;highlight&#34; style=&#34;background: #f8f8f8&#34;&gt;&lt;pre style=&#34;line-height: 125%&#34;&gt;&lt;span&gt;&lt;/span&gt;&lt;span style=&#34;color: #8f5902; font-style: italic&#34;&gt;# When Then&lt;/span&gt;

&lt;span style=&#34;color: #000000&#34;&gt;var1&lt;/span&gt; &lt;span style=&#34;color: #ce5c00; font-weight: bold&#34;&gt;=&lt;/span&gt; &lt;span style=&#34;color: #204a87; font-weight: bold&#34;&gt;case&lt;/span&gt; &lt;span style=&#34;color: #000000&#34;&gt;var2&lt;/span&gt;
  &lt;span style=&#34;color: #204a87; font-weight: bold&#34;&gt;when&lt;/span&gt; &lt;span style=&#34;color: #000000&#34;&gt;something&lt;/span&gt; &lt;span style=&#34;color: #204a87; font-weight: bold&#34;&gt;then&lt;/span&gt; &lt;span style=&#34;color: #000000&#34;&gt;do_something&lt;/span&gt;
&lt;span style=&#34;color: #204a87; font-weight: bold&#34;&gt;else&lt;/span&gt; &lt;span style=&#34;color: #000000&#34;&gt;do_something_else&lt;/span&gt;
&lt;span style=&#34;color: #204a87; font-weight: bold&#34;&gt;end&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;/p&gt;

&lt;h3 id=&#34;references&#34;&gt;References&lt;/h3&gt;

&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;https://crystal-lang.org/docs/syntax_and_semantics/case.html&#34;&gt;https://crystal-lang.org/docs/syntax_and_semantics/case.html&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
</description>
    </item>
    
    <item>
      <title>Crystal Tutorial The Basics - If Elsif Else</title>
      <link>https://mordsith.github.io/2017/crystal-tutorial-the-basics---if-elsif-else/</link>
      <pubDate>Wed, 01 Feb 2017 15:01:15 +0100</pubDate>
      
      <guid>https://mordsith.github.io/2017/crystal-tutorial-the-basics---if-elsif-else/</guid>
      <description>

&lt;p&gt;The &lt;code&gt;if&lt;/code&gt;, &lt;code&gt;elsif&lt;/code&gt; and &lt;code&gt;else&lt;/code&gt; are Crystals conditionals statements that execute a block of code to check if a condition is true of false. It works very similar to the english languge that if this is true i will do this else i will do something else.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Things to keep in mind!&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;&lt;code&gt;=&lt;/code&gt; means you assing a value to the variable&lt;br&gt;
&lt;code&gt;==&lt;/code&gt; is for checking a conditional&lt;br&gt;
&lt;code&gt;&amp;amp;&amp;amp;&lt;/code&gt; means and&lt;br&gt;
&lt;code&gt;||&lt;/code&gt; means OR&lt;/p&gt;

&lt;div class=&#34;alert alert-warning&#34; role=&#34;alert&#34;&gt;
Problem: Lets say you want to output something if lets say the student
is older than 19, and is to old to attend class.
&lt;/div&gt;

&lt;p&gt;code:
&lt;div class=&#34;highlight&#34; style=&#34;background: #f8f8f8&#34;&gt;&lt;pre style=&#34;line-height: 125%&#34;&gt;&lt;span&gt;&lt;/span&gt;&lt;span style=&#34;color: #000000&#34;&gt;student_name&lt;/span&gt; &lt;span style=&#34;color: #ce5c00; font-weight: bold&#34;&gt;=&lt;/span&gt; &lt;span style=&#34;color: #0000cf; font-weight: bold&#34;&gt;20&lt;/span&gt;

&lt;span style=&#34;color: #204a87; font-weight: bold&#34;&gt;if&lt;/span&gt; &lt;span style=&#34;color: #000000&#34;&gt;student_name&lt;/span&gt; &lt;span style=&#34;color: #ce5c00; font-weight: bold&#34;&gt;&amp;gt;&lt;/span&gt; &lt;span style=&#34;color: #0000cf; font-weight: bold&#34;&gt;19&lt;/span&gt;
  &lt;span style=&#34;color: #204a87&#34;&gt;puts&lt;/span&gt; &lt;span style=&#34;color: #4e9a06&#34;&gt;&amp;quot;The student is to old for this course.&amp;quot;&lt;/span&gt;
&lt;span style=&#34;color: #204a87; font-weight: bold&#34;&gt;end&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;

output:
&lt;div class=&#34;highlight&#34; style=&#34;background: #f8f8f8&#34;&gt;&lt;pre style=&#34;line-height: 125%&#34;&gt;&lt;span&gt;&lt;/span&gt;The student is to old for this course.
&lt;/pre&gt;&lt;/div&gt;
&lt;/p&gt;

&lt;p&gt;And we will get the desired output that the student is to old for this class. This is a very simple situation and we can do alot more with &lt;code&gt;if&lt;/code&gt;s, like using more of them.&lt;/p&gt;

&lt;div class=&#34;alert alert-warning&#34; role=&#34;alert&#34;&gt;
Problem: Now lets say that the student can take the night course if he is older than 19 and younger than 25.
&lt;/div&gt;

&lt;p&gt;code:
&lt;div class=&#34;highlight&#34; style=&#34;background: #f8f8f8&#34;&gt;&lt;pre style=&#34;line-height: 125%&#34;&gt;&lt;span&gt;&lt;/span&gt;&lt;span style=&#34;color: #000000&#34;&gt;student_name&lt;/span&gt; &lt;span style=&#34;color: #ce5c00; font-weight: bold&#34;&gt;=&lt;/span&gt; &lt;span style=&#34;color: #0000cf; font-weight: bold&#34;&gt;20&lt;/span&gt;

&lt;span style=&#34;color: #204a87; font-weight: bold&#34;&gt;if&lt;/span&gt; &lt;span style=&#34;color: #000000&#34;&gt;student_name&lt;/span&gt; &lt;span style=&#34;color: #ce5c00; font-weight: bold&#34;&gt;&amp;gt;&lt;/span&gt; &lt;span style=&#34;color: #0000cf; font-weight: bold&#34;&gt;19&lt;/span&gt;
   &lt;span style=&#34;color: #204a87&#34;&gt;puts&lt;/span&gt; &lt;span style=&#34;color: #4e9a06&#34;&gt;&amp;quot;The student is to old for this course.&amp;quot;&lt;/span&gt;
  &lt;span style=&#34;color: #204a87; font-weight: bold&#34;&gt;if&lt;/span&gt; &lt;span style=&#34;color: #000000&#34;&gt;student_name&lt;/span&gt; &lt;span style=&#34;color: #ce5c00; font-weight: bold&#34;&gt;&amp;lt;&lt;/span&gt; &lt;span style=&#34;color: #0000cf; font-weight: bold&#34;&gt;25&lt;/span&gt;
    &lt;span style=&#34;color: #204a87&#34;&gt;puts&lt;/span&gt; &lt;span style=&#34;color: #4e9a06&#34;&gt;&amp;quot;But the student can attend night courses&amp;quot;&lt;/span&gt;
  &lt;span style=&#34;color: #204a87; font-weight: bold&#34;&gt;end&lt;/span&gt;
&lt;span style=&#34;color: #204a87; font-weight: bold&#34;&gt;end&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;

output:
&lt;div class=&#34;highlight&#34; style=&#34;background: #f8f8f8&#34;&gt;&lt;pre style=&#34;line-height: 125%&#34;&gt;&lt;span&gt;&lt;/span&gt;The student is to old for this course.
But the student can attend night courses
&lt;/pre&gt;&lt;/div&gt;
&lt;/p&gt;

&lt;p&gt;So how did we do this? We used something called a nested &lt;code&gt;if&lt;/code&gt;. The first condition does the same as before. The second nested &lt;code&gt;if&lt;/code&gt; gives the second option.&lt;/p&gt;

&lt;div class=&#34;alert alert-warning&#34; role=&#34;alert&#34;&gt;
Problem: Output something if a patient has the flu, and if patient doesn&#39;t have it output something else. You only have the flu or you dont.
&lt;/div&gt;

&lt;p&gt;code:
&lt;div class=&#34;highlight&#34; style=&#34;background: #f8f8f8&#34;&gt;&lt;pre style=&#34;line-height: 125%&#34;&gt;&lt;span&gt;&lt;/span&gt;&lt;span style=&#34;color: #000000&#34;&gt;patient_has_flu&lt;/span&gt; &lt;span style=&#34;color: #ce5c00; font-weight: bold&#34;&gt;=&lt;/span&gt; &lt;span style=&#34;color: #204a87; font-weight: bold&#34;&gt;false&lt;/span&gt;

&lt;span style=&#34;color: #204a87; font-weight: bold&#34;&gt;if&lt;/span&gt; &lt;span style=&#34;color: #000000&#34;&gt;patient_has_flu&lt;/span&gt; &lt;span style=&#34;color: #ce5c00; font-weight: bold&#34;&gt;==&lt;/span&gt; &lt;span style=&#34;color: #204a87; font-weight: bold&#34;&gt;true&lt;/span&gt;
  &lt;span style=&#34;color: #204a87&#34;&gt;puts&lt;/span&gt; &lt;span style=&#34;color: #4e9a06&#34;&gt;&amp;quot;The patient is ill&amp;quot;&lt;/span&gt;
&lt;span style=&#34;color: #204a87; font-weight: bold&#34;&gt;else&lt;/span&gt;
  &lt;span style=&#34;color: #204a87&#34;&gt;puts&lt;/span&gt; &lt;span style=&#34;color: #4e9a06&#34;&gt;&amp;quot;The patiens is not sick!&amp;quot;&lt;/span&gt;
&lt;span style=&#34;color: #204a87; font-weight: bold&#34;&gt;end&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;

output:
&lt;div class=&#34;highlight&#34; style=&#34;background: #f8f8f8&#34;&gt;&lt;pre style=&#34;line-height: 125%&#34;&gt;&lt;span&gt;&lt;/span&gt;The patiens is not sick!
&lt;/pre&gt;&lt;/div&gt;
&lt;/p&gt;

&lt;p&gt;Notice we use &lt;code&gt;==&lt;/code&gt; because we want to check if it is true, not give it a value. If all statements fail then the else condition is called.&lt;/p&gt;

&lt;div class=&#34;alert alert-warning&#34; role=&#34;alert&#34;&gt;
Problem: To test alot of conditions we can use the else if conditions, in crystal we write elsif. So lets say that in our case we cant to figure out the persons age description.
&lt;/div&gt;

&lt;p&gt;code:
&lt;div class=&#34;highlight&#34; style=&#34;background: #f8f8f8&#34;&gt;&lt;pre style=&#34;line-height: 125%&#34;&gt;&lt;span&gt;&lt;/span&gt;&lt;span style=&#34;color: #000000&#34;&gt;person&lt;/span&gt; &lt;span style=&#34;color: #ce5c00; font-weight: bold&#34;&gt;=&lt;/span&gt; &lt;span style=&#34;color: #0000cf; font-weight: bold&#34;&gt;24&lt;/span&gt;

&lt;span style=&#34;color: #204a87; font-weight: bold&#34;&gt;if&lt;/span&gt; &lt;span style=&#34;color: #000000&#34;&gt;person&lt;/span&gt; &lt;span style=&#34;color: #ce5c00; font-weight: bold&#34;&gt;&amp;gt;=&lt;/span&gt; &lt;span style=&#34;color: #0000cf; font-weight: bold&#34;&gt;0&lt;/span&gt; &lt;span style=&#34;color: #ce5c00; font-weight: bold&#34;&gt;&amp;amp;&amp;amp;&lt;/span&gt; &lt;span style=&#34;color: #000000&#34;&gt;person&lt;/span&gt; &lt;span style=&#34;color: #ce5c00; font-weight: bold&#34;&gt;&amp;lt;=&lt;/span&gt; &lt;span style=&#34;color: #0000cf; font-weight: bold&#34;&gt;3&lt;/span&gt;
  &lt;span style=&#34;color: #204a87&#34;&gt;puts&lt;/span&gt; &lt;span style=&#34;color: #4e9a06&#34;&gt;&amp;quot;Toddler&amp;quot;&lt;/span&gt;
&lt;span style=&#34;color: #204a87; font-weight: bold&#34;&gt;elsif&lt;/span&gt; &lt;span style=&#34;color: #000000&#34;&gt;person&lt;/span&gt; &lt;span style=&#34;color: #ce5c00; font-weight: bold&#34;&gt;&amp;gt;=&lt;/span&gt; &lt;span style=&#34;color: #0000cf; font-weight: bold&#34;&gt;4&lt;/span&gt; &lt;span style=&#34;color: #ce5c00; font-weight: bold&#34;&gt;&amp;amp;&amp;amp;&lt;/span&gt; &lt;span style=&#34;color: #000000&#34;&gt;person&lt;/span&gt; &lt;span style=&#34;color: #ce5c00; font-weight: bold&#34;&gt;&amp;lt;=&lt;/span&gt; &lt;span style=&#34;color: #0000cf; font-weight: bold&#34;&gt;12&lt;/span&gt;
  &lt;span style=&#34;color: #204a87&#34;&gt;puts&lt;/span&gt; &lt;span style=&#34;color: #4e9a06&#34;&gt;&amp;quot;Child&amp;quot;&lt;/span&gt;
&lt;span style=&#34;color: #204a87; font-weight: bold&#34;&gt;elsif&lt;/span&gt; &lt;span style=&#34;color: #000000&#34;&gt;person&lt;/span&gt; &lt;span style=&#34;color: #ce5c00; font-weight: bold&#34;&gt;&amp;gt;=&lt;/span&gt; &lt;span style=&#34;color: #0000cf; font-weight: bold&#34;&gt;13&lt;/span&gt; &lt;span style=&#34;color: #ce5c00; font-weight: bold&#34;&gt;&amp;amp;&amp;amp;&lt;/span&gt; &lt;span style=&#34;color: #000000&#34;&gt;person&lt;/span&gt; &lt;span style=&#34;color: #ce5c00; font-weight: bold&#34;&gt;&amp;lt;=&lt;/span&gt; &lt;span style=&#34;color: #0000cf; font-weight: bold&#34;&gt;19&lt;/span&gt;
  &lt;span style=&#34;color: #204a87&#34;&gt;puts&lt;/span&gt; &lt;span style=&#34;color: #4e9a06&#34;&gt;&amp;quot;Teenager&amp;quot;&lt;/span&gt;
&lt;span style=&#34;color: #204a87; font-weight: bold&#34;&gt;elsif&lt;/span&gt; &lt;span style=&#34;color: #000000&#34;&gt;person&lt;/span&gt; &lt;span style=&#34;color: #ce5c00; font-weight: bold&#34;&gt;&amp;gt;=&lt;/span&gt; &lt;span style=&#34;color: #0000cf; font-weight: bold&#34;&gt;20&lt;/span&gt; &lt;span style=&#34;color: #ce5c00; font-weight: bold&#34;&gt;&amp;amp;&amp;amp;&lt;/span&gt; &lt;span style=&#34;color: #000000&#34;&gt;person&lt;/span&gt; &lt;span style=&#34;color: #ce5c00; font-weight: bold&#34;&gt;&amp;lt;=&lt;/span&gt; &lt;span style=&#34;color: #0000cf; font-weight: bold&#34;&gt;70&lt;/span&gt;
  &lt;span style=&#34;color: #204a87&#34;&gt;puts&lt;/span&gt; &lt;span style=&#34;color: #4e9a06&#34;&gt;&amp;quot;Adult&amp;quot;&lt;/span&gt;
&lt;span style=&#34;color: #204a87; font-weight: bold&#34;&gt;elsif&lt;/span&gt; &lt;span style=&#34;color: #000000&#34;&gt;person&lt;/span&gt; &lt;span style=&#34;color: #ce5c00; font-weight: bold&#34;&gt;&amp;gt;=&lt;/span&gt; &lt;span style=&#34;color: #0000cf; font-weight: bold&#34;&gt;70&lt;/span&gt; &lt;span style=&#34;color: #ce5c00; font-weight: bold&#34;&gt;&amp;amp;&amp;amp;&lt;/span&gt; &lt;span style=&#34;color: #000000&#34;&gt;person&lt;/span&gt; &lt;span style=&#34;color: #ce5c00; font-weight: bold&#34;&gt;&amp;lt;=&lt;/span&gt; &lt;span style=&#34;color: #0000cf; font-weight: bold&#34;&gt;110&lt;/span&gt;
  &lt;span style=&#34;color: #204a87&#34;&gt;puts&lt;/span&gt; &lt;span style=&#34;color: #4e9a06&#34;&gt;&amp;quot;Senior&amp;quot;&lt;/span&gt;
&lt;span style=&#34;color: #204a87; font-weight: bold&#34;&gt;else&lt;/span&gt;
  &lt;span style=&#34;color: #204a87&#34;&gt;puts&lt;/span&gt; &lt;span style=&#34;color: #4e9a06&#34;&gt;&amp;quot;You are a turtle&amp;quot;&lt;/span&gt;
&lt;span style=&#34;color: #204a87; font-weight: bold&#34;&gt;end&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;

output:
&lt;div class=&#34;highlight&#34; style=&#34;background: #f8f8f8&#34;&gt;&lt;pre style=&#34;line-height: 125%&#34;&gt;&lt;span&gt;&lt;/span&gt;Adult
&lt;/pre&gt;&lt;/div&gt;
&lt;/p&gt;

&lt;p&gt;This way we can have many &lt;code&gt;if&lt;/code&gt; and &lt;code&gt;elsif&lt;/code&gt; statements. Keep in mind that the &lt;code&gt;case&lt;/code&gt; control expression is better for pattern matching. But thats coming up in another tutorial.&lt;/p&gt;

&lt;div class=&#34;alert alert-info&#34; role=&#34;alert&#34;&gt;
Tip! If can also be written as an expression suffix.
&lt;/div&gt;

&lt;p&gt;code:
&lt;div class=&#34;highlight&#34; style=&#34;background: #f8f8f8&#34;&gt;&lt;pre style=&#34;line-height: 125%&#34;&gt;&lt;span&gt;&lt;/span&gt;&lt;span style=&#34;color: #000000&#34;&gt;x&lt;/span&gt; &lt;span style=&#34;color: #ce5c00; font-weight: bold&#34;&gt;=&lt;/span&gt; &lt;span style=&#34;color: #0000cf; font-weight: bold&#34;&gt;22&lt;/span&gt;
&lt;span style=&#34;color: #000000&#34;&gt;output&lt;/span&gt; &lt;span style=&#34;color: #ce5c00; font-weight: bold&#34;&gt;=&lt;/span&gt; &lt;span style=&#34;color: #4e9a06&#34;&gt;&amp;quot;Mathew&amp;quot;&lt;/span&gt; &lt;span style=&#34;color: #204a87; font-weight: bold&#34;&gt;if&lt;/span&gt; &lt;span style=&#34;color: #000000&#34;&gt;x&lt;/span&gt; &lt;span style=&#34;color: #ce5c00; font-weight: bold&#34;&gt;==&lt;/span&gt; &lt;span style=&#34;color: #0000cf; font-weight: bold&#34;&gt;22&lt;/span&gt;
&lt;span style=&#34;color: #204a87&#34;&gt;puts&lt;/span&gt; &lt;span style=&#34;color: #000000&#34;&gt;output&lt;/span&gt;

&lt;span style=&#34;color: #8f5902; font-style: italic&#34;&gt;# And a ternary If looks like this...&lt;/span&gt;

&lt;span style=&#34;color: #204a87&#34;&gt;puts&lt;/span&gt; &lt;span style=&#34;color: #000000&#34;&gt;a&lt;/span&gt; &lt;span style=&#34;color: #ce5c00; font-weight: bold&#34;&gt;=&lt;/span&gt; &lt;span style=&#34;color: #0000cf; font-weight: bold&#34;&gt;110&lt;/span&gt; &lt;span style=&#34;color: #ce5c00; font-weight: bold&#34;&gt;&amp;gt;&lt;/span&gt; &lt;span style=&#34;color: #0000cf; font-weight: bold&#34;&gt;222&lt;/span&gt; &lt;span style=&#34;color: #ce5c00; font-weight: bold&#34;&gt;?&lt;/span&gt; &lt;span style=&#34;color: #204a87; font-weight: bold&#34;&gt;true&lt;/span&gt; &lt;span style=&#34;color: #000000; font-weight: bold&#34;&gt;:&lt;/span&gt; &lt;span style=&#34;color: #204a87; font-weight: bold&#34;&gt;false&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;

output:
&lt;div class=&#34;highlight&#34; style=&#34;background: #f8f8f8&#34;&gt;&lt;pre style=&#34;line-height: 125%&#34;&gt;&lt;span&gt;&lt;/span&gt;Mathew
false
&lt;/pre&gt;&lt;/div&gt;
&lt;/p&gt;

&lt;div class=&#34;alert alert-info&#34; role=&#34;alert&#34;&gt;
Tip! You to check the variable type.
&lt;/div&gt;

&lt;p&gt;code:
&lt;div class=&#34;highlight&#34; style=&#34;background: #f8f8f8&#34;&gt;&lt;pre style=&#34;line-height: 125%&#34;&gt;&lt;span&gt;&lt;/span&gt;&lt;span style=&#34;color: #000000&#34;&gt;a&lt;/span&gt; &lt;span style=&#34;color: #ce5c00; font-weight: bold&#34;&gt;=&lt;/span&gt; &lt;span style=&#34;color: #0000cf; font-weight: bold&#34;&gt;22&lt;/span&gt;
&lt;span style=&#34;color: #204a87; font-weight: bold&#34;&gt;if&lt;/span&gt; &lt;span style=&#34;color: #000000&#34;&gt;a&lt;/span&gt;&lt;span style=&#34;color: #ce5c00; font-weight: bold&#34;&gt;.&lt;/span&gt;&lt;span style=&#34;color: #000000&#34;&gt;is_a?&lt;/span&gt;&lt;span style=&#34;color: #000000; font-weight: bold&#34;&gt;(&lt;/span&gt;&lt;span style=&#34;color: #204a87&#34;&gt;String&lt;/span&gt;&lt;span style=&#34;color: #000000; font-weight: bold&#34;&gt;)&lt;/span&gt;
  &lt;span style=&#34;color: #204a87&#34;&gt;puts&lt;/span&gt; &lt;span style=&#34;color: #4e9a06&#34;&gt;&amp;quot;a is a string&amp;quot;&lt;/span&gt;
&lt;span style=&#34;color: #204a87; font-weight: bold&#34;&gt;elsif&lt;/span&gt; &lt;span style=&#34;color: #000000&#34;&gt;a&lt;/span&gt;&lt;span style=&#34;color: #ce5c00; font-weight: bold&#34;&gt;.&lt;/span&gt;&lt;span style=&#34;color: #000000&#34;&gt;is_a?&lt;/span&gt;&lt;span style=&#34;color: #000000; font-weight: bold&#34;&gt;(&lt;/span&gt;&lt;span style=&#34;color: #204a87&#34;&gt;Number&lt;/span&gt;&lt;span style=&#34;color: #000000; font-weight: bold&#34;&gt;)&lt;/span&gt;
  &lt;span style=&#34;color: #204a87&#34;&gt;puts&lt;/span&gt; &lt;span style=&#34;color: #4e9a06&#34;&gt;&amp;quot;a is a number&amp;quot;&lt;/span&gt;
&lt;span style=&#34;color: #204a87; font-weight: bold&#34;&gt;end&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;

output:
&lt;div class=&#34;highlight&#34; style=&#34;background: #f8f8f8&#34;&gt;&lt;pre style=&#34;line-height: 125%&#34;&gt;&lt;span&gt;&lt;/span&gt;a is a number
&lt;/pre&gt;&lt;/div&gt;
&lt;/p&gt;

&lt;p&gt;And then there is the OR statement&lt;/p&gt;

&lt;p&gt;code:
&lt;div class=&#34;highlight&#34; style=&#34;background: #f8f8f8&#34;&gt;&lt;pre style=&#34;line-height: 125%&#34;&gt;&lt;span&gt;&lt;/span&gt;&lt;span style=&#34;color: #000000&#34;&gt;a&lt;/span&gt; &lt;span style=&#34;color: #ce5c00; font-weight: bold&#34;&gt;=&lt;/span&gt; &lt;span style=&#34;color: #0000cf; font-weight: bold&#34;&gt;22&lt;/span&gt;
&lt;span style=&#34;color: #204a87; font-weight: bold&#34;&gt;if&lt;/span&gt; &lt;span style=&#34;color: #000000&#34;&gt;a&lt;/span&gt;&lt;span style=&#34;color: #ce5c00; font-weight: bold&#34;&gt;.&lt;/span&gt;&lt;span style=&#34;color: #000000&#34;&gt;is_a?&lt;/span&gt;&lt;span style=&#34;color: #000000; font-weight: bold&#34;&gt;(&lt;/span&gt;&lt;span style=&#34;color: #204a87&#34;&gt;String&lt;/span&gt;&lt;span style=&#34;color: #000000; font-weight: bold&#34;&gt;)&lt;/span&gt; &lt;span style=&#34;color: #ce5c00; font-weight: bold&#34;&gt;||&lt;/span&gt; &lt;span style=&#34;color: #000000&#34;&gt;a&lt;/span&gt;&lt;span style=&#34;color: #ce5c00; font-weight: bold&#34;&gt;.&lt;/span&gt;&lt;span style=&#34;color: #000000&#34;&gt;is_a?&lt;/span&gt;&lt;span style=&#34;color: #000000; font-weight: bold&#34;&gt;(&lt;/span&gt;&lt;span style=&#34;color: #204a87&#34;&gt;Number&lt;/span&gt;&lt;span style=&#34;color: #000000; font-weight: bold&#34;&gt;)&lt;/span&gt;
  &lt;span style=&#34;color: #204a87&#34;&gt;puts&lt;/span&gt; &lt;span style=&#34;color: #4e9a06&#34;&gt;&amp;quot;a is a number or a string&amp;quot;&lt;/span&gt;
&lt;span style=&#34;color: #204a87; font-weight: bold&#34;&gt;end&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;

output:
&lt;div class=&#34;highlight&#34; style=&#34;background: #f8f8f8&#34;&gt;&lt;pre style=&#34;line-height: 125%&#34;&gt;&lt;span&gt;&lt;/span&gt;a is a number or a string
&lt;/pre&gt;&lt;/div&gt;
&lt;/p&gt;

&lt;p&gt;And those where the basics of &lt;code&gt;if&lt;/code&gt;&lt;/p&gt;

&lt;div class=&#34;alert alert-success&#34; role=&#34;alert&#34;&gt;
Success! You made it this far, i hope this helped to understand the basics of the conditional statements.
&lt;/div&gt;

&lt;h2 id=&#34;summary&#34;&gt;Summary&lt;/h2&gt;

&lt;div class=&#34;highlight&#34; style=&#34;background: #f8f8f8&#34;&gt;&lt;pre style=&#34;line-height: 125%&#34;&gt;&lt;span&gt;&lt;/span&gt;&lt;span style=&#34;color: #8f5902; font-style: italic&#34;&gt;# This is what the If&lt;/span&gt;
&lt;span style=&#34;color: #8f5902; font-style: italic&#34;&gt;# statement looks like.&lt;/span&gt;

&lt;span style=&#34;color: #204a87; font-weight: bold&#34;&gt;if&lt;/span&gt; &lt;span style=&#34;color: #000000&#34;&gt;condition&lt;/span&gt;
  &lt;span style=&#34;color: #000000&#34;&gt;do_something&lt;/span&gt;
&lt;span style=&#34;color: #204a87; font-weight: bold&#34;&gt;elsif&lt;/span&gt;
  &lt;span style=&#34;color: #000000&#34;&gt;do_something&lt;/span&gt;
&lt;span style=&#34;color: #204a87; font-weight: bold&#34;&gt;else&lt;/span&gt;
  &lt;span style=&#34;color: #000000&#34;&gt;do_something&lt;/span&gt;
&lt;span style=&#34;color: #204a87; font-weight: bold&#34;&gt;end&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;


&lt;div class=&#34;highlight&#34; style=&#34;background: #f8f8f8&#34;&gt;&lt;pre style=&#34;line-height: 125%&#34;&gt;&lt;span&gt;&lt;/span&gt;&lt;span style=&#34;color: #8f5902; font-style: italic&#34;&gt;# A simple If statement&lt;/span&gt;
&lt;span style=&#34;color: #8f5902; font-style: italic&#34;&gt;# if true do something&lt;/span&gt;

&lt;span style=&#34;color: #204a87; font-weight: bold&#34;&gt;if&lt;/span&gt; &lt;span style=&#34;color: #000000&#34;&gt;condition&lt;/span&gt;
  &lt;span style=&#34;color: #000000&#34;&gt;do_something&lt;/span&gt;
&lt;span style=&#34;color: #204a87; font-weight: bold&#34;&gt;end&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;


&lt;div class=&#34;highlight&#34; style=&#34;background: #f8f8f8&#34;&gt;&lt;pre style=&#34;line-height: 125%&#34;&gt;&lt;span&gt;&lt;/span&gt;&lt;span style=&#34;color: #8f5902; font-style: italic&#34;&gt;# Nested If&amp;#39;s&lt;/span&gt;
&lt;span style=&#34;color: #8f5902; font-style: italic&#34;&gt;# if true do something&lt;/span&gt;
&lt;span style=&#34;color: #8f5902; font-style: italic&#34;&gt;# and if second is true&lt;/span&gt;
&lt;span style=&#34;color: #8f5902; font-style: italic&#34;&gt;# do that.&lt;/span&gt;

&lt;span style=&#34;color: #204a87; font-weight: bold&#34;&gt;if&lt;/span&gt; &lt;span style=&#34;color: #000000&#34;&gt;condition&lt;/span&gt;
  &lt;span style=&#34;color: #000000&#34;&gt;do_something&lt;/span&gt;

  &lt;span style=&#34;color: #204a87; font-weight: bold&#34;&gt;if&lt;/span&gt; &lt;span style=&#34;color: #000000&#34;&gt;condition&lt;/span&gt;   
    &lt;span style=&#34;color: #000000&#34;&gt;do_something&lt;/span&gt;
  &lt;span style=&#34;color: #204a87; font-weight: bold&#34;&gt;end&lt;/span&gt;

&lt;span style=&#34;color: #204a87; font-weight: bold&#34;&gt;end&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;


&lt;div class=&#34;highlight&#34; style=&#34;background: #f8f8f8&#34;&gt;&lt;pre style=&#34;line-height: 125%&#34;&gt;&lt;span&gt;&lt;/span&gt;&lt;span style=&#34;color: #8f5902; font-style: italic&#34;&gt;# The Else statement&lt;/span&gt;
&lt;span style=&#34;color: #8f5902; font-style: italic&#34;&gt;# if above conditions are&lt;/span&gt;
&lt;span style=&#34;color: #8f5902; font-style: italic&#34;&gt;# not true do else.&lt;/span&gt;

&lt;span style=&#34;color: #204a87; font-weight: bold&#34;&gt;if&lt;/span&gt; &lt;span style=&#34;color: #000000&#34;&gt;condition&lt;/span&gt;
  &lt;span style=&#34;color: #000000&#34;&gt;do_something&lt;/span&gt;
&lt;span style=&#34;color: #204a87; font-weight: bold&#34;&gt;else&lt;/span&gt;              
  &lt;span style=&#34;color: #204a87; font-weight: bold&#34;&gt;do&lt;/span&gt; &lt;span style=&#34;color: #000000&#34;&gt;something&lt;/span&gt;
&lt;span style=&#34;color: #204a87; font-weight: bold&#34;&gt;end&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;


&lt;div class=&#34;highlight&#34; style=&#34;background: #f8f8f8&#34;&gt;&lt;pre style=&#34;line-height: 125%&#34;&gt;&lt;span&gt;&lt;/span&gt;&lt;span style=&#34;color: #8f5902; font-style: italic&#34;&gt;# If more than one condition needs to be true&lt;/span&gt;
&lt;span style=&#34;color: #8f5902; font-style: italic&#34;&gt;# if first and second condition is true&lt;/span&gt;
&lt;span style=&#34;color: #8f5902; font-style: italic&#34;&gt;# do the code. else if the third and fourth&lt;/span&gt;
&lt;span style=&#34;color: #8f5902; font-style: italic&#34;&gt;# condition is true do that. Otherwise&lt;/span&gt;
&lt;span style=&#34;color: #8f5902; font-style: italic&#34;&gt;# do else.&lt;/span&gt;

&lt;span style=&#34;color: #204a87; font-weight: bold&#34;&gt;if&lt;/span&gt; &lt;span style=&#34;color: #000000&#34;&gt;condition&lt;/span&gt; &lt;span style=&#34;color: #ce5c00; font-weight: bold&#34;&gt;&amp;amp;&amp;amp;&lt;/span&gt; &lt;span style=&#34;color: #000000&#34;&gt;condition&lt;/span&gt;   
  &lt;span style=&#34;color: #000000&#34;&gt;do_something&lt;/span&gt;
&lt;span style=&#34;color: #204a87; font-weight: bold&#34;&gt;elsif&lt;/span&gt; &lt;span style=&#34;color: #000000&#34;&gt;condition&lt;/span&gt; &lt;span style=&#34;color: #ce5c00; font-weight: bold&#34;&gt;||&lt;/span&gt; &lt;span style=&#34;color: #000000&#34;&gt;condition&lt;/span&gt;          
  &lt;span style=&#34;color: #000000&#34;&gt;do_something&lt;/span&gt;
&lt;span style=&#34;color: #204a87; font-weight: bold&#34;&gt;else&lt;/span&gt;                                  
  &lt;span style=&#34;color: #000000&#34;&gt;do_something&lt;/span&gt;
&lt;span style=&#34;color: #204a87; font-weight: bold&#34;&gt;end&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;


&lt;div class=&#34;highlight&#34; style=&#34;background: #f8f8f8&#34;&gt;&lt;pre style=&#34;line-height: 125%&#34;&gt;&lt;span&gt;&lt;/span&gt;&lt;span style=&#34;color: #8f5902; font-style: italic&#34;&gt;# As expression suffix&lt;/span&gt;

&lt;span style=&#34;color: #000000&#34;&gt;x&lt;/span&gt; &lt;span style=&#34;color: #ce5c00; font-weight: bold&#34;&gt;=&lt;/span&gt; &lt;span style=&#34;color: #0000cf; font-weight: bold&#34;&gt;10&lt;/span&gt; &lt;span style=&#34;color: #204a87; font-weight: bold&#34;&gt;if&lt;/span&gt; &lt;span style=&#34;color: #000000&#34;&gt;condition&lt;/span&gt;                   
&lt;/pre&gt;&lt;/div&gt;


&lt;div class=&#34;highlight&#34; style=&#34;background: #f8f8f8&#34;&gt;&lt;pre style=&#34;line-height: 125%&#34;&gt;&lt;span&gt;&lt;/span&gt;&lt;span style=&#34;color: #8f5902; font-style: italic&#34;&gt;# Check if the variable type&lt;/span&gt;
&lt;span style=&#34;color: #8f5902; font-style: italic&#34;&gt;# is a String.&lt;/span&gt;

&lt;span style=&#34;color: #204a87; font-weight: bold&#34;&gt;if&lt;/span&gt; &lt;span style=&#34;color: #000000&#34;&gt;x&lt;/span&gt;&lt;span style=&#34;color: #ce5c00; font-weight: bold&#34;&gt;.&lt;/span&gt;&lt;span style=&#34;color: #000000&#34;&gt;is_a?&lt;/span&gt;&lt;span style=&#34;color: #000000; font-weight: bold&#34;&gt;(&lt;/span&gt;&lt;span style=&#34;color: #204a87&#34;&gt;String&lt;/span&gt;&lt;span style=&#34;color: #000000; font-weight: bold&#34;&gt;)&lt;/span&gt;                    
  &lt;span style=&#34;color: #000000&#34;&gt;do_something&lt;/span&gt;
&lt;span style=&#34;color: #204a87; font-weight: bold&#34;&gt;end&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;


&lt;div class=&#34;highlight&#34; style=&#34;background: #f8f8f8&#34;&gt;&lt;pre style=&#34;line-height: 125%&#34;&gt;&lt;span&gt;&lt;/span&gt;&lt;span style=&#34;color: #8f5902; font-style: italic&#34;&gt;# Check if the variable type&lt;/span&gt;
&lt;span style=&#34;color: #8f5902; font-style: italic&#34;&gt;# is a Number.&lt;/span&gt;

&lt;span style=&#34;color: #204a87; font-weight: bold&#34;&gt;if&lt;/span&gt; &lt;span style=&#34;color: #000000&#34;&gt;x&lt;/span&gt;&lt;span style=&#34;color: #ce5c00; font-weight: bold&#34;&gt;.&lt;/span&gt;&lt;span style=&#34;color: #000000&#34;&gt;is_a?&lt;/span&gt;&lt;span style=&#34;color: #000000; font-weight: bold&#34;&gt;(&lt;/span&gt;&lt;span style=&#34;color: #204a87&#34;&gt;Number&lt;/span&gt;&lt;span style=&#34;color: #000000; font-weight: bold&#34;&gt;)&lt;/span&gt;                    
  &lt;span style=&#34;color: #000000&#34;&gt;do_something&lt;/span&gt;
&lt;span style=&#34;color: #204a87; font-weight: bold&#34;&gt;end&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;


&lt;h3 id=&#34;references&#34;&gt;References&lt;/h3&gt;

&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;https://crystal-lang.org/docs/syntax_and_semantics/if.html&#34;&gt;https://crystal-lang.org/docs/syntax_and_semantics/if.html&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://en.wikipedia.org/wiki/Conditional_(computer_programming&#34;&gt;https://en.wikipedia.org/wiki/Conditional_(computer_programming&lt;/a&gt;)&lt;/li&gt;
&lt;/ul&gt;
</description>
    </item>
    
    <item>
      <title>Crystal Tutorial The Basics - Gets</title>
      <link>https://mordsith.github.io/2017/crystal-tutorial-the-basics---gets/</link>
      <pubDate>Tue, 31 Jan 2017 16:16:03 +0100</pubDate>
      
      <guid>https://mordsith.github.io/2017/crystal-tutorial-the-basics---gets/</guid>
      <description>

&lt;p&gt;In the last tutorial we output text and numbers, in this tutorial im going to talk about something called standard streams. There are three kinds of standard streams and there are called &amp;hellip;&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;stdin - standard input&lt;/li&gt;
&lt;li&gt;stdout - standard output&lt;/li&gt;
&lt;li&gt;stderr - standard error&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;Last time we used stdout, these where puts and print to output on screen in Crystal. This time im going to discuss stdin, meaning getting input from the user. Usually in &lt;a href=&#34;https://crystal-lang.org/&#34;&gt;Crystal&lt;/a&gt; lang this is done by the command gets. This is what a simple gets looks like&amp;hellip;&lt;/p&gt;

&lt;p&gt;Code:
&lt;div class=&#34;highlight&#34; style=&#34;background: #f8f8f8&#34;&gt;&lt;pre style=&#34;line-height: 125%&#34;&gt;&lt;span&gt;&lt;/span&gt;&lt;span style=&#34;color: #8f5902; font-style: italic&#34;&gt;# stores the input to x&lt;/span&gt;
&lt;span style=&#34;color: #8f5902; font-style: italic&#34;&gt;# and then outputs x.&lt;/span&gt;

&lt;span style=&#34;color: #000000&#34;&gt;x&lt;/span&gt; &lt;span style=&#34;color: #ce5c00; font-weight: bold&#34;&gt;=&lt;/span&gt; &lt;span style=&#34;color: #204a87&#34;&gt;gets&lt;/span&gt;          
&lt;span style=&#34;color: #204a87&#34;&gt;puts&lt;/span&gt; &lt;span style=&#34;color: #000000&#34;&gt;x&lt;/span&gt;            
&lt;/pre&gt;&lt;/div&gt;

Output:
&lt;div class=&#34;highlight&#34; style=&#34;background: #f8f8f8&#34;&gt;&lt;pre style=&#34;line-height: 125%&#34;&gt;&lt;span&gt;&lt;/span&gt;Crystal 123
Crystal 123       
&lt;/pre&gt;&lt;/div&gt;
&lt;/p&gt;

&lt;p&gt;Now this is a very simple way to do it compared to some other languages.. * coughs &lt;a href=&#34;https://www.rust-lang.org/en-US/&#34;&gt;Rust&lt;/a&gt; * . I know that you usually don&amp;rsquo;t use something like input in real world software but it is very important when learning in my opinion. And for completing tasks like on &lt;a href=&#34;http://rosettacode.org/wiki/Rosetta_Code&#34;&gt;Rosetta Code&lt;/a&gt; or &lt;a href=&#34;https://www.hackerrank.com/&#34;&gt;Hackerrank&lt;/a&gt;.&lt;/p&gt;

&lt;div class=&#34;alert alert-warning&#34; role=&#34;alert&#34;&gt;
Problem: Get the first 3 characters in gets.
&lt;/div&gt;

&lt;p&gt;Code:
&lt;div class=&#34;highlight&#34; style=&#34;background: #f8f8f8&#34;&gt;&lt;pre style=&#34;line-height: 125%&#34;&gt;&lt;span&gt;&lt;/span&gt;&lt;span style=&#34;color: #8f5902; font-style: italic&#34;&gt;# gets input, but only the&lt;/span&gt;
&lt;span style=&#34;color: #8f5902; font-style: italic&#34;&gt;# first three characters.&lt;/span&gt;

&lt;span style=&#34;color: #204a87&#34;&gt;puts&lt;/span&gt; &lt;span style=&#34;color: #204a87&#34;&gt;gets&lt;/span&gt;&lt;span style=&#34;color: #000000; font-weight: bold&#34;&gt;(&lt;/span&gt;&lt;span style=&#34;color: #0000cf; font-weight: bold&#34;&gt;3&lt;/span&gt;&lt;span style=&#34;color: #000000; font-weight: bold&#34;&gt;)&lt;/span&gt;     
&lt;/pre&gt;&lt;/div&gt;

Output:
&lt;div class=&#34;highlight&#34; style=&#34;background: #f8f8f8&#34;&gt;&lt;pre style=&#34;line-height: 125%&#34;&gt;&lt;span&gt;&lt;/span&gt;Samuel L Jackson
Sam              
&lt;/pre&gt;&lt;/div&gt;
&lt;/p&gt;

&lt;p&gt;To stop taking in to the stdin when a specific character is put in you can ..&lt;/p&gt;

&lt;div class=&#34;alert alert-warning&#34; role=&#34;alert&#34;&gt;
Problem: Get input until you find the char s and include it in the output.
&lt;/div&gt;

&lt;p&gt;Code:
&lt;div class=&#34;highlight&#34; style=&#34;background: #f8f8f8&#34;&gt;&lt;pre style=&#34;line-height: 125%&#34;&gt;&lt;span&gt;&lt;/span&gt;&lt;span style=&#34;color: #8f5902; font-style: italic&#34;&gt;# will stop after the&lt;/span&gt;
&lt;span style=&#34;color: #8f5902; font-style: italic&#34;&gt;# char s in found&lt;/span&gt;

&lt;span style=&#34;color: #204a87&#34;&gt;puts&lt;/span&gt; &lt;span style=&#34;color: #204a87&#34;&gt;gets&lt;/span&gt;&lt;span style=&#34;color: #000000; font-weight: bold&#34;&gt;(&lt;/span&gt;&lt;span style=&#34;color: #4e9a06&#34;&gt;&amp;#39;s&amp;#39;&lt;/span&gt;&lt;span style=&#34;color: #000000; font-weight: bold&#34;&gt;)&lt;/span&gt;      
&lt;/pre&gt;&lt;/div&gt;

Output:
&lt;div class=&#34;highlight&#34; style=&#34;background: #f8f8f8&#34;&gt;&lt;pre style=&#34;line-height: 125%&#34;&gt;&lt;span&gt;&lt;/span&gt;today i had a sandwich for lunch
today i had a s
&lt;/pre&gt;&lt;/div&gt;
&lt;/p&gt;

&lt;p&gt;And like expected it stopped AFTER &amp;rsquo;s&amp;rsquo;.&lt;/p&gt;

&lt;div class=&#34;alert alert-info&#34; role=&#34;alert&#34;&gt;
Tip! You can also stop after a sertain amount of chars if you write `puts gets(&#39;s&#39;, 10)`. To read before the delimiter is found.
&lt;/div&gt;

&lt;div class=&#34;alert alert-warning&#34; role=&#34;alert&#34;&gt;
Problem: Stop BEFORE the last character is found.
&lt;/div&gt;

&lt;p&gt;Code:
&lt;div class=&#34;highlight&#34; style=&#34;background: #f8f8f8&#34;&gt;&lt;pre style=&#34;line-height: 125%&#34;&gt;&lt;span&gt;&lt;/span&gt;&lt;span style=&#34;color: #8f5902; font-style: italic&#34;&gt;# will stop before the&lt;/span&gt;
&lt;span style=&#34;color: #8f5902; font-style: italic&#34;&gt;# delimiter is found&lt;/span&gt;

&lt;span style=&#34;color: #204a87&#34;&gt;puts&lt;/span&gt; &lt;span style=&#34;color: #204a87&#34;&gt;gets&lt;/span&gt;&lt;span style=&#34;color: #000000; font-weight: bold&#34;&gt;(&lt;/span&gt;&lt;span style=&#34;color: #4e9a06&#34;&gt;&amp;quot;c++&amp;quot;&lt;/span&gt;&lt;span style=&#34;color: #000000; font-weight: bold&#34;&gt;,&lt;/span&gt; &lt;span style=&#34;color: #0000cf; font-weight: bold&#34;&gt;20&lt;/span&gt;&lt;span style=&#34;color: #000000; font-weight: bold&#34;&gt;)&lt;/span&gt;      
&lt;/pre&gt;&lt;/div&gt;

Output:
&lt;div class=&#34;highlight&#34; style=&#34;background: #f8f8f8&#34;&gt;&lt;pre style=&#34;line-height: 125%&#34;&gt;&lt;span&gt;&lt;/span&gt;i do alot of c++ code
i do alot of
&lt;/pre&gt;&lt;/div&gt;
&lt;/p&gt;

&lt;p&gt;Its easy to split up the gets. There is alot of information about this topic and more on &lt;strong&gt;&lt;a href=&#34;https://crystal-lang.org/api/0.19.2/index.html&#34;&gt;Crystal Lang Api&lt;/a&gt;&lt;/strong&gt; site. According to the site a not_nil! command is required that the compiler forces us to deal with. Like this &amp;hellip;&lt;/p&gt;

&lt;p&gt;Code:
&lt;div class=&#34;highlight&#34; style=&#34;background: #f8f8f8&#34;&gt;&lt;pre style=&#34;line-height: 125%&#34;&gt;&lt;span&gt;&lt;/span&gt;&lt;span style=&#34;color: #204a87&#34;&gt;puts&lt;/span&gt; &lt;span style=&#34;color: #204a87&#34;&gt;gets&lt;/span&gt;&lt;span style=&#34;color: #ce5c00; font-weight: bold&#34;&gt;.&lt;/span&gt;&lt;span style=&#34;color: #000000&#34;&gt;not_nil!&lt;/span&gt;&lt;span style=&#34;color: #ce5c00; font-weight: bold&#34;&gt;.&lt;/span&gt;&lt;span style=&#34;color: #000000&#34;&gt;split&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;

Output:
&lt;div class=&#34;highlight&#34; style=&#34;background: #f8f8f8&#34;&gt;&lt;pre style=&#34;line-height: 125%&#34;&gt;&lt;span&gt;&lt;/span&gt;The Earth is Round
[&amp;quot;The&amp;quot;, &amp;quot;Earth&amp;quot;, &amp;quot;is&amp;quot;, &amp;quot;Round&amp;quot;]
&lt;/pre&gt;&lt;/div&gt;
&lt;/p&gt;

&lt;p&gt;And to split up to two variables.&lt;/p&gt;

&lt;p&gt;Code:
&lt;div class=&#34;highlight&#34; style=&#34;background: #f8f8f8&#34;&gt;&lt;pre style=&#34;line-height: 125%&#34;&gt;&lt;span&gt;&lt;/span&gt;&lt;span style=&#34;color: #000000&#34;&gt;x&lt;/span&gt;&lt;span style=&#34;color: #000000; font-weight: bold&#34;&gt;,&lt;/span&gt; &lt;span style=&#34;color: #000000&#34;&gt;y&lt;/span&gt; &lt;span style=&#34;color: #ce5c00; font-weight: bold&#34;&gt;=&lt;/span&gt; &lt;span style=&#34;color: #204a87&#34;&gt;gets&lt;/span&gt;&lt;span style=&#34;color: #ce5c00; font-weight: bold&#34;&gt;.&lt;/span&gt;&lt;span style=&#34;color: #000000&#34;&gt;not_nil!&lt;/span&gt;&lt;span style=&#34;color: #ce5c00; font-weight: bold&#34;&gt;.&lt;/span&gt;&lt;span style=&#34;color: #000000&#34;&gt;split&lt;/span&gt;
&lt;span style=&#34;color: #204a87&#34;&gt;puts&lt;/span&gt; &lt;span style=&#34;color: #000000&#34;&gt;x&lt;/span&gt; &lt;span style=&#34;color: #ce5c00; font-weight: bold&#34;&gt;+&lt;/span&gt; &lt;span style=&#34;color: #4e9a06&#34;&gt;&amp;quot; &amp;quot;&lt;/span&gt; &lt;span style=&#34;color: #ce5c00; font-weight: bold&#34;&gt;+&lt;/span&gt; &lt;span style=&#34;color: #000000&#34;&gt;y&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;

Output:
&lt;div class=&#34;highlight&#34; style=&#34;background: #f8f8f8&#34;&gt;&lt;pre style=&#34;line-height: 125%&#34;&gt;&lt;span&gt;&lt;/span&gt;11 22 33         
11 22            
&lt;/pre&gt;&lt;/div&gt;
&lt;/p&gt;

&lt;p&gt;We can also split with a perticular character.&lt;/p&gt;

&lt;p&gt;Code:
&lt;div class=&#34;highlight&#34; style=&#34;background: #f8f8f8&#34;&gt;&lt;pre style=&#34;line-height: 125%&#34;&gt;&lt;span&gt;&lt;/span&gt;&lt;span style=&#34;color: #8f5902; font-style: italic&#34;&gt;# split when -&lt;/span&gt;

&lt;span style=&#34;color: #204a87&#34;&gt;puts&lt;/span&gt; &lt;span style=&#34;color: #204a87&#34;&gt;gets&lt;/span&gt;&lt;span style=&#34;color: #ce5c00; font-weight: bold&#34;&gt;.&lt;/span&gt;&lt;span style=&#34;color: #000000&#34;&gt;not_nil!&lt;/span&gt;&lt;span style=&#34;color: #ce5c00; font-weight: bold&#34;&gt;.&lt;/span&gt;&lt;span style=&#34;color: #000000&#34;&gt;split&lt;/span&gt;&lt;span style=&#34;color: #000000; font-weight: bold&#34;&gt;(&lt;/span&gt;&lt;span style=&#34;color: #4e9a06&#34;&gt;&amp;#39;-&amp;#39;&lt;/span&gt;&lt;span style=&#34;color: #000000; font-weight: bold&#34;&gt;)&lt;/span&gt;           
&lt;/pre&gt;&lt;/div&gt;

Output:
&lt;div class=&#34;highlight&#34; style=&#34;background: #f8f8f8&#34;&gt;&lt;pre style=&#34;line-height: 125%&#34;&gt;&lt;span&gt;&lt;/span&gt;Linda-Samantha-Nick-Bjorn              
[&amp;quot;Linda&amp;quot;, &amp;quot;Samantha&amp;quot;, &amp;quot;Nick&amp;quot;, &amp;quot;Bjorn&amp;quot;]
&lt;/pre&gt;&lt;/div&gt;
&lt;/p&gt;

&lt;div class=&#34;alert alert-info&#34; role=&#34;alert&#34;&gt;
Tip! To sum numbers with a one liner.
&lt;/div&gt;

&lt;p&gt;Code:
&lt;div class=&#34;highlight&#34; style=&#34;background: #f8f8f8&#34;&gt;&lt;pre style=&#34;line-height: 125%&#34;&gt;&lt;span&gt;&lt;/span&gt;&lt;span style=&#34;color: #204a87&#34;&gt;puts&lt;/span&gt; &lt;span style=&#34;color: #204a87&#34;&gt;gets&lt;/span&gt;&lt;span style=&#34;color: #ce5c00; font-weight: bold&#34;&gt;.&lt;/span&gt;&lt;span style=&#34;color: #000000&#34;&gt;not_nil!&lt;/span&gt;&lt;span style=&#34;color: #ce5c00; font-weight: bold&#34;&gt;.&lt;/span&gt;&lt;span style=&#34;color: #000000&#34;&gt;split&lt;/span&gt;&lt;span style=&#34;color: #ce5c00; font-weight: bold&#34;&gt;.&lt;/span&gt;&lt;span style=&#34;color: #000000&#34;&gt;map&lt;/span&gt;&lt;span style=&#34;color: #000000; font-weight: bold&#34;&gt;(&lt;/span&gt;&lt;span style=&#34;color: #ce5c00; font-weight: bold&#34;&gt;&amp;amp;.&lt;/span&gt;&lt;span style=&#34;color: #000000&#34;&gt;to_i&lt;/span&gt;&lt;span style=&#34;color: #000000; font-weight: bold&#34;&gt;)&lt;/span&gt;&lt;span style=&#34;color: #ce5c00; font-weight: bold&#34;&gt;.&lt;/span&gt;&lt;span style=&#34;color: #000000&#34;&gt;sum&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;

Output:
&lt;div class=&#34;highlight&#34; style=&#34;background: #f8f8f8&#34;&gt;&lt;pre style=&#34;line-height: 125%&#34;&gt;&lt;span&gt;&lt;/span&gt;120 21 43 66 22         
272
&lt;/pre&gt;&lt;/div&gt;
&lt;/p&gt;

&lt;p&gt;And there is probably alot more you can do with gets. Got anything to add please let me know.&lt;/p&gt;

&lt;h2 id=&#34;summary&#34;&gt;Summary&lt;/h2&gt;

&lt;p&gt;Code:
&lt;div class=&#34;highlight&#34; style=&#34;background: #f8f8f8&#34;&gt;&lt;pre style=&#34;line-height: 125%&#34;&gt;&lt;span&gt;&lt;/span&gt;&lt;span style=&#34;color: #8f5902; font-style: italic&#34;&gt;# storing the input to x&lt;/span&gt;

&lt;span style=&#34;color: #000000&#34;&gt;x&lt;/span&gt; &lt;span style=&#34;color: #ce5c00; font-weight: bold&#34;&gt;=&lt;/span&gt; &lt;span style=&#34;color: #204a87&#34;&gt;gets&lt;/span&gt;                               
&lt;/pre&gt;&lt;/div&gt;

&lt;div class=&#34;highlight&#34; style=&#34;background: #f8f8f8&#34;&gt;&lt;pre style=&#34;line-height: 125%&#34;&gt;&lt;span&gt;&lt;/span&gt;&lt;span style=&#34;color: #8f5902; font-style: italic&#34;&gt;# storing the first three characters&lt;/span&gt;

&lt;span style=&#34;color: #204a87&#34;&gt;gets&lt;/span&gt;&lt;span style=&#34;color: #000000; font-weight: bold&#34;&gt;(&lt;/span&gt;&lt;span style=&#34;color: #0000cf; font-weight: bold&#34;&gt;3&lt;/span&gt;&lt;span style=&#34;color: #000000; font-weight: bold&#34;&gt;)&lt;/span&gt;                                
&lt;/pre&gt;&lt;/div&gt;

&lt;div class=&#34;highlight&#34; style=&#34;background: #f8f8f8&#34;&gt;&lt;pre style=&#34;line-height: 125%&#34;&gt;&lt;span&gt;&lt;/span&gt;&lt;span style=&#34;color: #8f5902; font-style: italic&#34;&gt;# will stop after the char s in found&lt;/span&gt;

&lt;span style=&#34;color: #204a87&#34;&gt;gets&lt;/span&gt;&lt;span style=&#34;color: #000000; font-weight: bold&#34;&gt;(&lt;/span&gt;&lt;span style=&#34;color: #4e9a06&#34;&gt;&amp;#39;s&amp;#39;&lt;/span&gt;&lt;span style=&#34;color: #000000; font-weight: bold&#34;&gt;)&lt;/span&gt;                              
&lt;/pre&gt;&lt;/div&gt;

&lt;div class=&#34;highlight&#34; style=&#34;background: #f8f8f8&#34;&gt;&lt;pre style=&#34;line-height: 125%&#34;&gt;&lt;span&gt;&lt;/span&gt;&lt;span style=&#34;color: #8f5902; font-style: italic&#34;&gt;# Stop before the delimiter is found&lt;/span&gt;

&lt;span style=&#34;color: #204a87&#34;&gt;gets&lt;/span&gt;&lt;span style=&#34;color: #000000; font-weight: bold&#34;&gt;(&lt;/span&gt;&lt;span style=&#34;color: #4e9a06&#34;&gt;&amp;quot;input&amp;quot;&lt;/span&gt;&lt;span style=&#34;color: #000000; font-weight: bold&#34;&gt;,&lt;/span&gt; &lt;span style=&#34;color: #0000cf; font-weight: bold&#34;&gt;20&lt;/span&gt;&lt;span style=&#34;color: #000000; font-weight: bold&#34;&gt;)&lt;/span&gt;                        
&lt;/pre&gt;&lt;/div&gt;

&lt;div class=&#34;highlight&#34; style=&#34;background: #f8f8f8&#34;&gt;&lt;pre style=&#34;line-height: 125%&#34;&gt;&lt;span&gt;&lt;/span&gt;&lt;span style=&#34;color: #8f5902; font-style: italic&#34;&gt;# split up the input&lt;/span&gt;

&lt;span style=&#34;color: #204a87&#34;&gt;gets&lt;/span&gt;&lt;span style=&#34;color: #ce5c00; font-weight: bold&#34;&gt;.&lt;/span&gt;&lt;span style=&#34;color: #000000&#34;&gt;not_nil!&lt;/span&gt;&lt;span style=&#34;color: #ce5c00; font-weight: bold&#34;&gt;.&lt;/span&gt;&lt;span style=&#34;color: #000000&#34;&gt;split&lt;/span&gt;                    
&lt;/pre&gt;&lt;/div&gt;

&lt;div class=&#34;highlight&#34; style=&#34;background: #f8f8f8&#34;&gt;&lt;pre style=&#34;line-height: 125%&#34;&gt;&lt;span&gt;&lt;/span&gt;&lt;span style=&#34;color: #8f5902; font-style: italic&#34;&gt;# split up the input&lt;/span&gt;

&lt;span style=&#34;color: #204a87&#34;&gt;gets&lt;/span&gt;&lt;span style=&#34;color: #ce5c00; font-weight: bold&#34;&gt;.&lt;/span&gt;&lt;span style=&#34;color: #000000&#34;&gt;not_nil!&lt;/span&gt;&lt;span style=&#34;color: #ce5c00; font-weight: bold&#34;&gt;.&lt;/span&gt;&lt;span style=&#34;color: #000000&#34;&gt;split&lt;/span&gt;                    
&lt;/pre&gt;&lt;/div&gt;

&lt;div class=&#34;highlight&#34; style=&#34;background: #f8f8f8&#34;&gt;&lt;pre style=&#34;line-height: 125%&#34;&gt;&lt;span&gt;&lt;/span&gt;&lt;span style=&#34;color: #8f5902; font-style: italic&#34;&gt;# split up input to two variables&lt;/span&gt;

&lt;span style=&#34;color: #000000&#34;&gt;x&lt;/span&gt;&lt;span style=&#34;color: #000000; font-weight: bold&#34;&gt;,&lt;/span&gt; &lt;span style=&#34;color: #000000&#34;&gt;y&lt;/span&gt; &lt;span style=&#34;color: #ce5c00; font-weight: bold&#34;&gt;=&lt;/span&gt; &lt;span style=&#34;color: #204a87&#34;&gt;gets&lt;/span&gt;&lt;span style=&#34;color: #ce5c00; font-weight: bold&#34;&gt;.&lt;/span&gt;&lt;span style=&#34;color: #000000&#34;&gt;not_nil!&lt;/span&gt;&lt;span style=&#34;color: #ce5c00; font-weight: bold&#34;&gt;.&lt;/span&gt;&lt;span style=&#34;color: #000000&#34;&gt;split&lt;/span&gt;             
&lt;/pre&gt;&lt;/div&gt;

&lt;div class=&#34;highlight&#34; style=&#34;background: #f8f8f8&#34;&gt;&lt;pre style=&#34;line-height: 125%&#34;&gt;&lt;span&gt;&lt;/span&gt;&lt;span style=&#34;color: #8f5902; font-style: italic&#34;&gt;# split when - is found in the text&lt;/span&gt;

&lt;span style=&#34;color: #204a87&#34;&gt;gets&lt;/span&gt;&lt;span style=&#34;color: #ce5c00; font-weight: bold&#34;&gt;.&lt;/span&gt;&lt;span style=&#34;color: #000000&#34;&gt;not_nil!&lt;/span&gt;&lt;span style=&#34;color: #ce5c00; font-weight: bold&#34;&gt;.&lt;/span&gt;&lt;span style=&#34;color: #000000&#34;&gt;split&lt;/span&gt;&lt;span style=&#34;color: #000000; font-weight: bold&#34;&gt;(&lt;/span&gt;&lt;span style=&#34;color: #4e9a06&#34;&gt;&amp;#39;-&amp;#39;&lt;/span&gt;&lt;span style=&#34;color: #000000; font-weight: bold&#34;&gt;)&lt;/span&gt;               
&lt;/pre&gt;&lt;/div&gt;

&lt;div class=&#34;highlight&#34; style=&#34;background: #f8f8f8&#34;&gt;&lt;pre style=&#34;line-height: 125%&#34;&gt;&lt;span&gt;&lt;/span&gt;&lt;span style=&#34;color: #8f5902; font-style: italic&#34;&gt;# split up to integers and sums&lt;/span&gt;

&lt;span style=&#34;color: #204a87&#34;&gt;gets&lt;/span&gt;&lt;span style=&#34;color: #ce5c00; font-weight: bold&#34;&gt;.&lt;/span&gt;&lt;span style=&#34;color: #000000&#34;&gt;not_nil!&lt;/span&gt;&lt;span style=&#34;color: #ce5c00; font-weight: bold&#34;&gt;.&lt;/span&gt;&lt;span style=&#34;color: #000000&#34;&gt;split&lt;/span&gt;&lt;span style=&#34;color: #ce5c00; font-weight: bold&#34;&gt;.&lt;/span&gt;&lt;span style=&#34;color: #000000&#34;&gt;map&lt;/span&gt;&lt;span style=&#34;color: #000000; font-weight: bold&#34;&gt;(&lt;/span&gt;&lt;span style=&#34;color: #ce5c00; font-weight: bold&#34;&gt;&amp;amp;.&lt;/span&gt;&lt;span style=&#34;color: #000000&#34;&gt;to_i&lt;/span&gt;&lt;span style=&#34;color: #000000; font-weight: bold&#34;&gt;)&lt;/span&gt;&lt;span style=&#34;color: #ce5c00; font-weight: bold&#34;&gt;.&lt;/span&gt;&lt;span style=&#34;color: #000000&#34;&gt;sum&lt;/span&gt;    
&lt;/pre&gt;&lt;/div&gt;
&lt;/p&gt;

&lt;h3 id=&#34;references&#34;&gt;References&lt;/h3&gt;

&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;https://crystal-lang.org/api/0.19.2/IO.html&#34;&gt;https://crystal-lang.org/api/0.19.2/IO.html&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
</description>
    </item>
    
    <item>
      <title>Crystal Tutorial The Basics - Puts</title>
      <link>https://mordsith.github.io/2017/crystal-tutorial-the-basics---puts/</link>
      <pubDate>Sun, 29 Jan 2017 16:57:38 +0100</pubDate>
      
      <guid>https://mordsith.github.io/2017/crystal-tutorial-the-basics---puts/</guid>
      <description>

&lt;p&gt;I really like these new programming languages like &lt;a href=&#34;https://golang.org/&#34;&gt;Go&lt;/a&gt; and &lt;a href=&#34;https://www.rust-lang.org/en-US/&#34;&gt;Rust&lt;/a&gt;. I found a relatively new language called &lt;a href=&#34;https://crystal-lang.org/&#34;&gt;Crystal&lt;/a&gt;. I am really amazed by its performance and how easy it is to use. &lt;a href=&#34;https://crystal-lang.org/&#34;&gt;Crystal&lt;/a&gt; has similar syntax as &lt;a href=&#34;https://www.ruby-lang.org/en/&#34;&gt;Ruby&lt;/a&gt; but compared to &lt;a href=&#34;https://www.ruby-lang.org/en/&#34;&gt;Ruby&lt;/a&gt; it is a compiled language and not interpreted, making it perform really well and leave a low memory footprint.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Note:&lt;/strong&gt;&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;https://crystal-lang.org/&#34;&gt;Crystal&lt;/a&gt; is Alpha stage at the moment.&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://crystal-lang.org/&#34;&gt;Crystal&lt;/a&gt; does not work on Windows, but it will sometime in 2017.&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;To install &lt;a href=&#34;https://crystal-lang.org/&#34;&gt;Crystal&lt;/a&gt; you should take a look at the official documents called &lt;a href=&#34;https://crystal-lang.org/docs/installation/&#34;&gt;The Crystal Book!&lt;/a&gt; It is also a great way to learn more about the language.&lt;/p&gt;

&lt;p&gt;To create a &lt;a href=&#34;https://crystal-lang.org/&#34;&gt;Crystal&lt;/a&gt; project type &amp;hellip;&lt;/p&gt;

&lt;p&gt;Terminal:
&lt;div class=&#34;highlight&#34; style=&#34;background: #f8f8f8&#34;&gt;&lt;pre style=&#34;line-height: 125%&#34;&gt;&lt;span&gt;&lt;/span&gt;$ crystal init app casual
&lt;/pre&gt;&lt;/div&gt;
&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;crystal&lt;/strong&gt; is the name of the compiler. The &lt;strong&gt;init&lt;/strong&gt; command creates the default project structure. The &lt;strong&gt;app&lt;/strong&gt; commands creates an app skeleton, to create a library change it to &lt;strong&gt;lib&lt;/strong&gt;. &lt;strong&gt;casual&lt;/strong&gt; is just the name i picked, you may change that to whatever you like. To run the app type &amp;hellip;&lt;/p&gt;

&lt;p&gt;Terminal:
&lt;div class=&#34;highlight&#34; style=&#34;background: #f8f8f8&#34;&gt;&lt;pre style=&#34;line-height: 125%&#34;&gt;&lt;span&gt;&lt;/span&gt;$ cd casual
$ crystal src/casual.cr
&lt;/pre&gt;&lt;/div&gt;
&lt;/p&gt;

&lt;p&gt;And nothing will happen since we haven&amp;rsquo;t put anything in the file.&lt;/p&gt;

&lt;p&gt;Open the &lt;strong&gt;casual.cr&lt;/strong&gt; file with your favorite editor located inside the src folder. Remove everything inside and type &amp;hellip;&lt;/p&gt;

&lt;p&gt;Code:
&lt;div class=&#34;highlight&#34; style=&#34;background: #f8f8f8&#34;&gt;&lt;pre style=&#34;line-height: 125%&#34;&gt;&lt;span&gt;&lt;/span&gt;&lt;span style=&#34;color: #204a87&#34;&gt;puts&lt;/span&gt; &lt;span style=&#34;color: #4e9a06&#34;&gt;&amp;quot;Hello, World!&amp;quot;&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;/p&gt;

&lt;p&gt;Save the file and return to the terminal and run it!&lt;/p&gt;

&lt;p&gt;Output:
&lt;div class=&#34;highlight&#34; style=&#34;background: #f8f8f8&#34;&gt;&lt;pre style=&#34;line-height: 125%&#34;&gt;&lt;span&gt;&lt;/span&gt;$ crystal src/casual.cr
Hello, World!
&lt;/pre&gt;&lt;/div&gt;
&lt;/p&gt;

&lt;p&gt;And congrats! You&amp;rsquo;r first Crystal application. Totally worthless but still pretty cool.&lt;/p&gt;

&lt;p&gt;To build the app type &amp;hellip;&lt;/p&gt;

&lt;p&gt;Terminal:
&lt;div class=&#34;highlight&#34; style=&#34;background: #f8f8f8&#34;&gt;&lt;pre style=&#34;line-height: 125%&#34;&gt;&lt;span&gt;&lt;/span&gt;$ crystal build src/casual.cr --release
$ ./casual
Hello, World!
&lt;/pre&gt;&lt;/div&gt;
&lt;/p&gt;

&lt;p&gt;Lets have a look at the file we just created.&lt;/p&gt;

&lt;p&gt;Terminal:
&lt;div class=&#34;highlight&#34; style=&#34;background: #f8f8f8&#34;&gt;&lt;pre style=&#34;line-height: 125%&#34;&gt;&lt;span&gt;&lt;/span&gt;$ ls -shR casual
104K casual
&lt;/pre&gt;&lt;/div&gt;
&lt;/p&gt;

&lt;p&gt;104 kilobytes! That is really amazing for such a new complex language.. specially if you compare it to other new languages. I got it down to 80kb&amp;rsquo;s with strip. Thats like C small! I am not sure how Crystal manages this but i will try to find out.&lt;/p&gt;

&lt;h2 id=&#34;back-to-programming&#34;&gt;Back to Programming&lt;/h2&gt;

&lt;p&gt;Here are some simple output commands. It is good to remember that&amp;hellip;&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;&lt;code&gt;puts&lt;/code&gt; adds a new line after the end.&lt;/li&gt;
&lt;li&gt;&lt;code&gt;print&lt;/code&gt; does not add a new line.&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;btw hashtag means that it is a comment.&lt;/p&gt;

&lt;p&gt;Code:
&lt;div class=&#34;highlight&#34; style=&#34;background: #f8f8f8&#34;&gt;&lt;pre style=&#34;line-height: 125%&#34;&gt;&lt;span&gt;&lt;/span&gt;&lt;span style=&#34;color: #204a87&#34;&gt;puts&lt;/span&gt; &lt;span style=&#34;color: #4e9a06&#34;&gt;&amp;quot;Hello,&amp;quot;&lt;/span&gt;                     &lt;span style=&#34;color: #8f5902; font-style: italic&#34;&gt;# simple output with new line&lt;/span&gt;
&lt;span style=&#34;color: #204a87&#34;&gt;puts&lt;/span&gt; &lt;span style=&#34;color: #4e9a06&#34;&gt;&amp;quot;World!&amp;quot;&lt;/span&gt;                     

&lt;span style=&#34;color: #204a87&#34;&gt;print&lt;/span&gt; &lt;span style=&#34;color: #4e9a06&#34;&gt;&amp;quot;Hello, &amp;quot;&lt;/span&gt;                   &lt;span style=&#34;color: #8f5902; font-style: italic&#34;&gt;# without new line&lt;/span&gt;
&lt;span style=&#34;color: #204a87&#34;&gt;print&lt;/span&gt; &lt;span style=&#34;color: #4e9a06&#34;&gt;&amp;quot;World!\n&amp;quot;&lt;/span&gt;                  &lt;span style=&#34;color: #8f5902; font-style: italic&#34;&gt;# \n = newline like in most C langs&lt;/span&gt;

&lt;span style=&#34;color: #000000&#34;&gt;my_name&lt;/span&gt; &lt;span style=&#34;color: #ce5c00; font-weight: bold&#34;&gt;=&lt;/span&gt; &lt;span style=&#34;color: #4e9a06&#34;&gt;&amp;quot;Sam&amp;quot;&lt;/span&gt;                   &lt;span style=&#34;color: #8f5902; font-style: italic&#34;&gt;# declaring a string variable&lt;/span&gt;
&lt;span style=&#34;color: #204a87&#34;&gt;puts&lt;/span&gt; &lt;span style=&#34;color: #4e9a06&#34;&gt;&amp;quot;My name is: #{&lt;/span&gt;&lt;span style=&#34;color: #000000&#34;&gt;my_name&lt;/span&gt;&lt;span style=&#34;color: #4e9a06&#34;&gt;}&amp;quot;&lt;/span&gt;     &lt;span style=&#34;color: #8f5902; font-style: italic&#34;&gt;# output with a placeholder for the variable&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;/p&gt;

&lt;p&gt;Output:
&lt;div class=&#34;highlight&#34; style=&#34;background: #f8f8f8&#34;&gt;&lt;pre style=&#34;line-height: 125%&#34;&gt;&lt;span&gt;&lt;/span&gt;$ crystal src/casual.cr
Hello,
World!
Hello, World!
My name is: Sam
&lt;/pre&gt;&lt;/div&gt;
&lt;/p&gt;

&lt;p&gt;In my variable ( variables are placeholders ) i assigned a String with the value of Sam. Crystal being similar to Ruby figures out that it is a string. And then inside the hashtag curley brackets i can output the variable.&lt;/p&gt;

&lt;p&gt;Lets do some other fun stuff with strings..&lt;/p&gt;

&lt;p&gt;Code:
&lt;div class=&#34;highlight&#34; style=&#34;background: #f8f8f8&#34;&gt;&lt;pre style=&#34;line-height: 125%&#34;&gt;&lt;span&gt;&lt;/span&gt;&lt;span style=&#34;color: #8f5902; font-style: italic&#34;&gt;# The String&lt;/span&gt;
&lt;span style=&#34;color: #000000&#34;&gt;my_text&lt;/span&gt; &lt;span style=&#34;color: #ce5c00; font-weight: bold&#34;&gt;=&lt;/span&gt; &lt;span style=&#34;color: #4e9a06&#34;&gt;&amp;quot;I Love Crystal&amp;quot;&lt;/span&gt;

&lt;span style=&#34;color: #8f5902; font-style: italic&#34;&gt;# Nr of chars&lt;/span&gt;
&lt;span style=&#34;color: #204a87&#34;&gt;puts&lt;/span&gt; &lt;span style=&#34;color: #4e9a06&#34;&gt;&amp;quot;my_text has #{&lt;/span&gt;&lt;span style=&#34;color: #000000&#34;&gt;my_text&lt;/span&gt;&lt;span style=&#34;color: #ce5c00; font-weight: bold&#34;&gt;.&lt;/span&gt;&lt;span style=&#34;color: #000000&#34;&gt;size&lt;/span&gt;&lt;span style=&#34;color: #4e9a06&#34;&gt;} characters&amp;quot;&lt;/span&gt;

&lt;span style=&#34;color: #8f5902; font-style: italic&#34;&gt;# Uppercase&lt;/span&gt;
&lt;span style=&#34;color: #204a87&#34;&gt;puts&lt;/span&gt; &lt;span style=&#34;color: #4e9a06&#34;&gt;&amp;quot;#{&lt;/span&gt;&lt;span style=&#34;color: #000000&#34;&gt;my_text&lt;/span&gt;&lt;span style=&#34;color: #ce5c00; font-weight: bold&#34;&gt;.&lt;/span&gt;&lt;span style=&#34;color: #000000&#34;&gt;upcase&lt;/span&gt;&lt;span style=&#34;color: #4e9a06&#34;&gt;}&amp;quot;&lt;/span&gt;                      

&lt;span style=&#34;color: #8f5902; font-style: italic&#34;&gt;# Lowercase&lt;/span&gt;
&lt;span style=&#34;color: #204a87&#34;&gt;puts&lt;/span&gt; &lt;span style=&#34;color: #4e9a06&#34;&gt;&amp;quot;#{&lt;/span&gt;&lt;span style=&#34;color: #000000&#34;&gt;my_text&lt;/span&gt;&lt;span style=&#34;color: #ce5c00; font-weight: bold&#34;&gt;.&lt;/span&gt;&lt;span style=&#34;color: #000000&#34;&gt;downcase&lt;/span&gt;&lt;span style=&#34;color: #4e9a06&#34;&gt;}&amp;quot;&lt;/span&gt;                    

&lt;span style=&#34;color: #8f5902; font-style: italic&#34;&gt;# substitutes o&amp;#39;s with i&amp;#39;s&lt;/span&gt;
&lt;span style=&#34;color: #204a87&#34;&gt;puts&lt;/span&gt; &lt;span style=&#34;color: #4e9a06&#34;&gt;&amp;quot;#{&lt;/span&gt;&lt;span style=&#34;color: #000000&#34;&gt;my_text&lt;/span&gt;&lt;span style=&#34;color: #ce5c00; font-weight: bold&#34;&gt;.&lt;/span&gt;&lt;span style=&#34;color: #000000&#34;&gt;sub&lt;/span&gt;&lt;span style=&#34;color: #000000; font-weight: bold&#34;&gt;(&lt;/span&gt;&lt;span style=&#34;color: #4e9a06&#34;&gt;&amp;quot;o&amp;quot;&lt;/span&gt;&lt;span style=&#34;color: #000000; font-weight: bold&#34;&gt;,&lt;/span&gt;&lt;span style=&#34;color: #4e9a06&#34;&gt;&amp;quot;i&amp;quot;&lt;/span&gt;&lt;span style=&#34;color: #000000; font-weight: bold&#34;&gt;)&lt;/span&gt;&lt;span style=&#34;color: #4e9a06&#34;&gt;}&amp;quot;&lt;/span&gt;                

&lt;span style=&#34;color: #8f5902; font-style: italic&#34;&gt;# True! It does.&lt;/span&gt;
&lt;span style=&#34;color: #204a87&#34;&gt;puts&lt;/span&gt; &lt;span style=&#34;color: #4e9a06&#34;&gt;&amp;quot;#{&lt;/span&gt;&lt;span style=&#34;color: #000000&#34;&gt;my_text&lt;/span&gt;&lt;span style=&#34;color: #ce5c00; font-weight: bold&#34;&gt;.&lt;/span&gt;&lt;span style=&#34;color: #000000&#34;&gt;ends_with?&lt;/span&gt;&lt;span style=&#34;color: #000000; font-weight: bold&#34;&gt;(&lt;/span&gt;&lt;span style=&#34;color: #4e9a06&#34;&gt;&amp;quot;Crystal&amp;quot;&lt;/span&gt;&lt;span style=&#34;color: #000000; font-weight: bold&#34;&gt;)&lt;/span&gt;&lt;span style=&#34;color: #4e9a06&#34;&gt;}&amp;quot;&lt;/span&gt;       
&lt;/pre&gt;&lt;/div&gt;
&lt;/p&gt;

&lt;p&gt;Output:
&lt;div class=&#34;highlight&#34; style=&#34;background: #f8f8f8&#34;&gt;&lt;pre style=&#34;line-height: 125%&#34;&gt;&lt;span&gt;&lt;/span&gt;$ crystal src/casual.cr
my_text has 14 characters
I LOVE CRYSTAL
i love crystal
I Live Crystal
true
&lt;/pre&gt;&lt;/div&gt;
&lt;/p&gt;

&lt;p&gt;Something cool i found was the &amp;ldquo;Heredoc&amp;rdquo;. I had never heard of it before but seems really useful for writing large string, or if you have alot of symbols. Heredoc starts with &amp;lt;&amp;lt;- and the name you give it. Then the text has to be indented 4 line.&lt;/p&gt;

&lt;p&gt;Code:
&lt;div class=&#34;highlight&#34; style=&#34;background: #f8f8f8&#34;&gt;&lt;pre style=&#34;line-height: 125%&#34;&gt;&lt;span&gt;&lt;/span&gt;&lt;span style=&#34;color: #8f5902; font-style: italic&#34;&gt;# The text has to be indented 4 lines&lt;/span&gt;

&lt;span style=&#34;color: #000000&#34;&gt;x&lt;/span&gt; &lt;span style=&#34;color: #ce5c00; font-weight: bold&#34;&gt;=&lt;/span&gt; &lt;span style=&#34;color: #ce5c00; font-weight: bold&#34;&gt;&amp;lt;&amp;lt;-&lt;/span&gt;&lt;span style=&#34;color: #4e9a06&#34;&gt;SOMETHING&lt;/span&gt;
&lt;span style=&#34;color: #4e9a06&#34;&gt;    Hello to                    &lt;/span&gt;
&lt;span style=&#34;color: #4e9a06&#34;&gt;    /&amp;quot;You People In&lt;/span&gt;
&lt;span style=&#34;color: #4e9a06&#34;&gt;    In The &amp;quot; &amp;quot; World?=)()&lt;/span&gt;
&lt;span style=&#34;color: #4e9a06&#34;&gt;    &amp;quot;{&amp;#39;&amp;#39;¤%&amp;amp;¤{&amp;amp;/(%/&amp;amp;)}}&amp;quot;&lt;/span&gt;
&lt;span style=&#34;color: #4e9a06&#34;&gt;    SOMETHING&lt;/span&gt;

&lt;span style=&#34;color: #204a87&#34;&gt;puts&lt;/span&gt; &lt;span style=&#34;color: #000000&#34;&gt;x&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;/p&gt;

&lt;p&gt;Output:
&lt;div class=&#34;highlight&#34; style=&#34;background: #f8f8f8&#34;&gt;&lt;pre style=&#34;line-height: 125%&#34;&gt;&lt;span&gt;&lt;/span&gt;$ crystal src/casual.cr
Hello to                          
/&amp;quot;You People In
In The &amp;quot; &amp;quot; World?=)()
&amp;quot;{&amp;#39;&amp;#39;¤%&amp;amp;¤{&amp;amp;/(%/&amp;amp;)}}&amp;quot;
&lt;/pre&gt;&lt;/div&gt;
&lt;/p&gt;

&lt;p&gt;And of course there is alot more you can do&amp;hellip;&lt;/p&gt;

&lt;h3 id=&#34;mathematics&#34;&gt;Mathematics&lt;/h3&gt;

&lt;p&gt;Now for some simple math. Doing simple mathematics with crystal is really simple i think.&lt;/p&gt;

&lt;p&gt;Code:
&lt;div class=&#34;highlight&#34; style=&#34;background: #f8f8f8&#34;&gt;&lt;pre style=&#34;line-height: 125%&#34;&gt;&lt;span&gt;&lt;/span&gt;&lt;span style=&#34;color: #8f5902; font-style: italic&#34;&gt;# add&lt;/span&gt;
&lt;span style=&#34;color: #204a87&#34;&gt;puts&lt;/span&gt; &lt;span style=&#34;color: #0000cf; font-weight: bold&#34;&gt;1&lt;/span&gt; &lt;span style=&#34;color: #ce5c00; font-weight: bold&#34;&gt;+&lt;/span&gt; &lt;span style=&#34;color: #0000cf; font-weight: bold&#34;&gt;3&lt;/span&gt;                

&lt;span style=&#34;color: #8f5902; font-style: italic&#34;&gt;# substract&lt;/span&gt;
&lt;span style=&#34;color: #204a87&#34;&gt;puts&lt;/span&gt; &lt;span style=&#34;color: #0000cf; font-weight: bold&#34;&gt;10&lt;/span&gt; &lt;span style=&#34;color: #ce5c00; font-weight: bold&#34;&gt;-&lt;/span&gt; &lt;span style=&#34;color: #0000cf; font-weight: bold&#34;&gt;3&lt;/span&gt;               

&lt;span style=&#34;color: #8f5902; font-style: italic&#34;&gt;# divide&lt;/span&gt;
&lt;span style=&#34;color: #204a87&#34;&gt;puts&lt;/span&gt; &lt;span style=&#34;color: #0000cf; font-weight: bold&#34;&gt;20.0&lt;/span&gt; &lt;span style=&#34;color: #ce5c00; font-weight: bold&#34;&gt;/&lt;/span&gt; &lt;span style=&#34;color: #0000cf; font-weight: bold&#34;&gt;2.0&lt;/span&gt;           

&lt;span style=&#34;color: #8f5902; font-style: italic&#34;&gt;# multiply&lt;/span&gt;
&lt;span style=&#34;color: #204a87&#34;&gt;puts&lt;/span&gt; &lt;span style=&#34;color: #0000cf; font-weight: bold&#34;&gt;71&lt;/span&gt; &lt;span style=&#34;color: #ce5c00; font-weight: bold&#34;&gt;*&lt;/span&gt; &lt;span style=&#34;color: #0000cf; font-weight: bold&#34;&gt;13&lt;/span&gt;              

&lt;span style=&#34;color: #8f5902; font-style: italic&#34;&gt;# modulus &amp;quot;not percent&amp;quot;&lt;/span&gt;
&lt;span style=&#34;color: #204a87&#34;&gt;puts&lt;/span&gt; &lt;span style=&#34;color: #0000cf; font-weight: bold&#34;&gt;231&lt;/span&gt; &lt;span style=&#34;color: #ce5c00; font-weight: bold&#34;&gt;%&lt;/span&gt; &lt;span style=&#34;color: #0000cf; font-weight: bold&#34;&gt;10&lt;/span&gt;             

&lt;span style=&#34;color: #8f5902; font-style: italic&#34;&gt;# less than&lt;/span&gt;
&lt;span style=&#34;color: #204a87&#34;&gt;puts&lt;/span&gt; &lt;span style=&#34;color: #0000cf; font-weight: bold&#34;&gt;22&lt;/span&gt; &lt;span style=&#34;color: #ce5c00; font-weight: bold&#34;&gt;&amp;lt;&lt;/span&gt; &lt;span style=&#34;color: #0000cf; font-weight: bold&#34;&gt;10&lt;/span&gt;              

&lt;span style=&#34;color: #8f5902; font-style: italic&#34;&gt;# more than&lt;/span&gt;
&lt;span style=&#34;color: #204a87&#34;&gt;puts&lt;/span&gt; &lt;span style=&#34;color: #0000cf; font-weight: bold&#34;&gt;22&lt;/span&gt; &lt;span style=&#34;color: #ce5c00; font-weight: bold&#34;&gt;&amp;gt;&lt;/span&gt; &lt;span style=&#34;color: #0000cf; font-weight: bold&#34;&gt;10&lt;/span&gt;              

&lt;span style=&#34;color: #8f5902; font-style: italic&#34;&gt;# more or equal&lt;/span&gt;
&lt;span style=&#34;color: #204a87&#34;&gt;puts&lt;/span&gt; &lt;span style=&#34;color: #0000cf; font-weight: bold&#34;&gt;33&lt;/span&gt; &lt;span style=&#34;color: #ce5c00; font-weight: bold&#34;&gt;&amp;gt;=&lt;/span&gt; &lt;span style=&#34;color: #0000cf; font-weight: bold&#34;&gt;15&lt;/span&gt;             

&lt;span style=&#34;color: #8f5902; font-style: italic&#34;&gt;# and we can add inside the string&lt;/span&gt;
&lt;span style=&#34;color: #204a87&#34;&gt;puts&lt;/span&gt; &lt;span style=&#34;color: #4e9a06&#34;&gt;&amp;quot;11.1 / 22.4 = #{&lt;/span&gt;&lt;span style=&#34;color: #0000cf; font-weight: bold&#34;&gt;11.1&lt;/span&gt;&lt;span style=&#34;color: #ce5c00; font-weight: bold&#34;&gt;/&lt;/span&gt;&lt;span style=&#34;color: #0000cf; font-weight: bold&#34;&gt;22.4&lt;/span&gt;&lt;span style=&#34;color: #4e9a06&#34;&gt;}&amp;quot;&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;/p&gt;

&lt;p&gt;Output:
&lt;div class=&#34;highlight&#34; style=&#34;background: #f8f8f8&#34;&gt;&lt;pre style=&#34;line-height: 125%&#34;&gt;&lt;span&gt;&lt;/span&gt;$ crystal src/casual.cr
4
7
10.0
923
1
false
true
true
11.1 / 22.4 = 0.4955357142857143
&lt;/pre&gt;&lt;/div&gt;
&lt;/p&gt;

&lt;div class=&#34;alert alert-warning&#34; role=&#34;alert&#34;&gt;
Problem: And now let&#39;s convert Celcius to Fahrenheit. 0 degrees Celcius is 32 degrees Fahrenheit. To convert temperatures in degrees Celsius to Fahrenheit, multiply by 1.8 (or 9/5) and add 32.
&lt;/div&gt;

&lt;p&gt;Code:
&lt;div class=&#34;highlight&#34; style=&#34;background: #f8f8f8&#34;&gt;&lt;pre style=&#34;line-height: 125%&#34;&gt;&lt;span&gt;&lt;/span&gt;&lt;span style=&#34;color: #000000&#34;&gt;celsius&lt;/span&gt; &lt;span style=&#34;color: #ce5c00; font-weight: bold&#34;&gt;=&lt;/span&gt; &lt;span style=&#34;color: #0000cf; font-weight: bold&#34;&gt;32&lt;/span&gt;&lt;span style=&#34;color: #000000; font-weight: bold&#34;&gt;;&lt;/span&gt;
&lt;span style=&#34;color: #000000&#34;&gt;fahrenheit&lt;/span&gt; &lt;span style=&#34;color: #ce5c00; font-weight: bold&#34;&gt;=&lt;/span&gt; &lt;span style=&#34;color: #0000cf; font-weight: bold&#34;&gt;1.8&lt;/span&gt; &lt;span style=&#34;color: #ce5c00; font-weight: bold&#34;&gt;*&lt;/span&gt; &lt;span style=&#34;color: #000000&#34;&gt;celsius&lt;/span&gt; &lt;span style=&#34;color: #ce5c00; font-weight: bold&#34;&gt;+&lt;/span&gt; &lt;span style=&#34;color: #0000cf; font-weight: bold&#34;&gt;32&lt;/span&gt;

&lt;span style=&#34;color: #204a87&#34;&gt;puts&lt;/span&gt; &lt;span style=&#34;color: #4e9a06&#34;&gt;&amp;quot;32 degrees celsius is #{&lt;/span&gt;&lt;span style=&#34;color: #000000&#34;&gt;fahrenheit&lt;/span&gt;&lt;span style=&#34;color: #4e9a06&#34;&gt;}&amp;quot;&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;/p&gt;

&lt;p&gt;Output:
&lt;div class=&#34;highlight&#34; style=&#34;background: #f8f8f8&#34;&gt;&lt;pre style=&#34;line-height: 125%&#34;&gt;&lt;span&gt;&lt;/span&gt;$ crystal src/casual.cr
32 degrees celsius is 89.6 degrees fahrenheit
&lt;/pre&gt;&lt;/div&gt;
&lt;/p&gt;

&lt;p&gt;And of course alot more complicated mathematics can be performed, and i&amp;rsquo;m not a mathematician, but you get the picture.&lt;/p&gt;

&lt;p&gt;We have created a Crystal project, Compiled it, outputted code and done some simple mathematics. I hope this will help you to learn a bit about The Crystal language and Puts. Crystal syntax as i said is based on Ruby where there&amp;rsquo;s tons of information. I am new to this language aswell and have never tried Ruby before, but it seems like a lang that makes developing a bit more simple.&lt;/p&gt;

&lt;h3 id=&#34;references&#34;&gt;References&lt;/h3&gt;

&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;https://crystal-lang.org/docs/&#34;&gt;https://crystal-lang.org/docs/&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://github.com/askn/crystal-by-example&#34;&gt;https://github.com/askn/crystal-by-example&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
</description>
    </item>
    
  </channel>
</rss>